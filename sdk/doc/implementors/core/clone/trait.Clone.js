(function() {var implementors = {};
implementors["oak"] = [{"text":"impl Clone for WriteMode","synthetic":false,"types":[]},{"text":"impl Clone for OakRng","synthetic":false,"types":[]},{"text":"impl Clone for KeyTemplate","synthetic":false,"types":[]},{"text":"impl Clone for KeysetGenerateRequest","synthetic":false,"types":[]},{"text":"impl Clone for TemplateId","synthetic":false,"types":[]},{"text":"impl Clone for KeysetResponse","synthetic":false,"types":[]},{"text":"impl Clone for KeysetPublicRequest","synthetic":false,"types":[]},{"text":"impl Clone for KeysetUnbindRequest","synthetic":false,"types":[]},{"text":"impl Clone for KeysetBindRequest","synthetic":false,"types":[]},{"text":"impl Clone for KeysetBindResponse","synthetic":false,"types":[]},{"text":"impl Clone for KmsProxyRequest","synthetic":false,"types":[]},{"text":"impl Clone for AeadEncryptRequest","synthetic":false,"types":[]},{"text":"impl Clone for AeadEncryptResponse","synthetic":false,"types":[]},{"text":"impl Clone for AeadDecryptRequest","synthetic":false,"types":[]},{"text":"impl Clone for AeadDecryptResponse","synthetic":false,"types":[]},{"text":"impl Clone for DeterministicAeadEncryptRequest","synthetic":false,"types":[]},{"text":"impl Clone for DeterministicAeadEncryptResponse","synthetic":false,"types":[]},{"text":"impl Clone for DeterministicAeadDecryptRequest","synthetic":false,"types":[]},{"text":"impl Clone for DeterministicAeadDecryptResponse","synthetic":false,"types":[]},{"text":"impl Clone for VerifyMacRequest","synthetic":false,"types":[]},{"text":"impl Clone for VerifyMacResponse","synthetic":false,"types":[]},{"text":"impl Clone for ComputeMacRequest","synthetic":false,"types":[]},{"text":"impl Clone for ComputeMacResponse","synthetic":false,"types":[]},{"text":"impl Clone for ComputePrfRequest","synthetic":false,"types":[]},{"text":"impl Clone for ComputePrfResponse","synthetic":false,"types":[]},{"text":"impl Clone for SignatureSignRequest","synthetic":false,"types":[]},{"text":"impl Clone for SignatureSignResponse","synthetic":false,"types":[]},{"text":"impl Clone for SignatureVerifyRequest","synthetic":false,"types":[]},{"text":"impl Clone for SignatureVerifyResponse","synthetic":false,"types":[]},{"text":"impl Clone for OutputPrefixType","synthetic":false,"types":[]},{"text":"impl Clone for KeysetFormat","synthetic":false,"types":[]},{"text":"impl Clone for GrpcInvocation","synthetic":false,"types":[]},{"text":"impl Clone for GrpcInvocationSender","synthetic":false,"types":[]},{"text":"impl Clone for GrpcInvocationReceiver","synthetic":false,"types":[]},{"text":"impl Clone for HttpInvocation","synthetic":false,"types":[]},{"text":"impl Clone for HttpInvocationSource","synthetic":false,"types":[]},{"text":"impl Clone for HttpInvocationSender","synthetic":false,"types":[]},{"text":"impl Clone for StorageItem","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelReadRequest","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelReadResponse","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelWriteRequest","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelWriteResponse","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelDeleteRequest","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelDeleteResponse","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelBeginRequest","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelBeginResponse","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelCommitRequest","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelCommitResponse","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelRollbackRequest","synthetic":false,"types":[]},{"text":"impl Clone for StorageChannelRollbackResponse","synthetic":false,"types":[]},{"text":"impl Clone for GetRoughtimeRequest","synthetic":false,"types":[]},{"text":"impl Clone for Roughtime","synthetic":false,"types":[]}];
implementors["oak_app_build"] = [{"text":"impl Clone for Opt","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()