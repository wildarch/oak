initSidebarItems({"enum":[["Code","The canonical error codes for Google APIs."],["ServerMethod","Enum with variants for all combinations of {request, response} Ã— {unary , streaming}, each containing a pointer to the function of the appropriate type defined on a service implementation."],["WriteMode","Indicate whether a write method should leave the current gRPC method invocation open or close it."]],"fn":[["build_status","Helper to create a gRPC status object."],["decap_response","Extract a protocol buffer message from a GrpcResponse wrapper. Returns the message together with an indicator of whether this is the last response."],["invoke_grpc_method","Helper to inject a (single) gRPC request message via a notification channel, in the same manner as the gRPC pseudo-Node does, and collect a (single) response."],["invoke_grpc_method_stream","Helper to inject a (single) gRPC request message via a notification channel, in the same manner as the gRPC pseudo-Node does, and return a channel for reading responses from."]],"mod":[["client",""],["server","Functionality to help Oak Nodes create gRPC server pseudo-Nodes."]],"struct":[["ChannelResponseWriter","Channel-holding object that encapsulates response messages into `GrpcResponse` wrapper messages and writes serialized versions to a send channel."],["GrpcRequest",""],["GrpcResponse",""],["Status","The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC. The error model is designed to be:"]],"trait":[["Invocable","Trait implemented by all server method variants, applied to a server receiver instance having concrete type `T`."],["ServerNode","Trait for Oak Nodes that act as a gRPC services."]],"type":[["Invocation",""],["Result","Result type that uses a `Status` type for error values."]]});