var searchIndex = JSON.parse('{\
"oak":{"doc":"SDK functionality that provides idiomatic Rust wrappers…","i":[[3,"Label","oak","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",0,null],[12,"integrity_tags","","",0,null],[4,"ChannelReadStatus","","Single byte values used to indicate the read status of a…",null,null],[13,"NotReady","","No pending messages available on channel.",1,null],[13,"ReadReady","","Pending message available on channel.",1,null],[13,"InvalidChannel","","Channel handle does not identify the read half of a…",1,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",1,null],[13,"PermissionDenied","","A node trying to access the channel does not have the…",1,null],[4,"OakStatus","","Status values exchanged as i32 values across the Node Wasm…",null,null],[13,"Unspecified","","",2,null],[13,"Ok","","Success.",2,null],[13,"ErrBadHandle","","Invalid handle provided.",2,null],[13,"ErrInvalidArgs","","Arguments invalid.",2,null],[13,"ErrChannelClosed","","Channel has been closed.",2,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an output…",2,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (an…",2,null],[13,"ErrOutOfRange","","Argument out of valid range.",2,null],[13,"ErrInternal","","Internal error.",2,null],[13,"ErrTerminated","","Node terminated.",2,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",2,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to perform…",2,null],[3,"Handle","","Handle used to identify read or write channel halves.",null,null],[3,"ReadHandle","","Wrapper for a handle to the read half of a channel.",null,null],[12,"handle","","",3,null],[3,"WriteHandle","","Wrapper for a handle to the send half of a channel.",null,null],[12,"handle","","",4,null],[4,"OakError","","Generic Oak error.",null,null],[13,"ProtobufDecodeError","","",5,null],[13,"ProtobufEncodeError","","",5,null],[13,"OakStatus","","",5,null],[13,"IoError","","",5,null],[5,"wait_on_channels","","Wait for one or more of the provided handles to become…",null,[[],[["oakstatus",4],["vec",3],["result",4]]]],[5,"channel_read","","Read a message from a channel without blocking.",null,[[["vec",3],["readhandle",3],["vec",3]],[["oakstatus",4],["result",4]]]],[5,"channel_write","","Write a message to a channel.",null,[[["writehandle",3]],[["oakstatus",4],["result",4]]]],[5,"channel_create","","Similar to [`channel_create_with_label`], but with a fixed…",null,[[],[["oakstatus",4],["result",4]]]],[5,"channel_create_with_label","","Create a new unidirectional channel.",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[5,"channel_close","","Close the specified channel [`Handle`].",null,[[["handle",3]],[["oakstatus",4],["result",4]]]],[5,"node_create","","Similar to [`node_create_with_label`], but with a fixed…",null,[[["readhandle",3],["nodeconfiguration",3]],[["oakstatus",4],["result",4]]]],[5,"node_create_with_label","","Creates a new Node running the configuration identified by…",null,[[["label",3],["readhandle",3],["nodeconfiguration",3]],[["oakstatus",4],["result",4]]]],[5,"random_get","","Fill a buffer with random data.",null,[[],[["oakstatus",4],["result",4]]]],[5,"result_from_status","","Convert a status returned from a host function call to a…",null,[[],[["oakstatus",4],["result",4]]]],[5,"set_panic_hook","","Install a panic hook that logs [panic information].",null,[[]]],[5,"run_event_loop","","Run an event loop on the provided `node`:",null,[[["node",8],["decodable",8],["readhandle",3]]]],[0,"grpc","","Functionality to help Oak Nodes interact with gRPC.",null,null],[3,"Status","oak::grpc","The `Status` type defines a logical error model that is…",null,null],[12,"code","","The status code, which should be an enum value of…",6,null],[12,"message","","A developer-facing error message, which should be in…",6,null],[12,"details","","A list of messages that carry the error details. There is…",6,null],[4,"Code","","The canonical error codes for Google APIs.",null,null],[13,"Ok","","Not an error; returned on success",7,null],[13,"Cancelled","","The operation was cancelled, typically by the caller.",7,null],[13,"Unknown","","Unknown error. For example, this error may be returned…",7,null],[13,"InvalidArgument","","The client specified an invalid argument. Note that this…",7,null],[13,"DeadlineExceeded","","The deadline expired before the operation could complete.…",7,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was not…",7,null],[13,"AlreadyExists","","The entity that a client attempted to create (e.g., file…",7,null],[13,"PermissionDenied","","The caller does not have permission to execute the…",7,null],[13,"Unauthenticated","","The request does not have valid authentication credentials…",7,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-user…",7,null],[13,"FailedPrecondition","","The operation was rejected because the system is not in a…",7,null],[13,"Aborted","","The operation was aborted, typically due to a concurrency…",7,null],[13,"OutOfRange","","The operation was attempted past the valid range. E.g.,…",7,null],[13,"Unimplemented","","The operation is not implemented or is not…",7,null],[13,"Internal","","Internal errors. This means that some invariants expected…",7,null],[13,"Unavailable","","The service is currently unavailable. This is most likely…",7,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",7,null],[3,"GrpcRequest","","",null,null],[12,"method_name","","",8,null],[12,"req_msg","","The body of the request. Usually a serialized protobuf…",8,null],[12,"last","","",8,null],[3,"GrpcResponse","","",null,null],[12,"rsp_msg","","The body of the response. Usually a serialized protobuf…",9,null],[12,"status","","",9,null],[12,"last","","The last field indicates that this is definitely the final…",9,null],[3,"Invocation","","A gRPC invocation, consisting of exactly two channels: one…",null,null],[12,"request_receiver","","",10,null],[12,"response_sender","","",10,null],[3,"ChannelResponseWriter","","Channel-holding object that encapsulates response messages…",null,null],[4,"WriteMode","","Indicate whether a write method should leave the current…",null,null],[13,"KeepOpen","","",11,null],[13,"Close","","",11,null],[5,"build_status","","Helper to create a gRPC status object.",null,[[["code",4]],["status",3]]],[5,"decap_response","","Extract a protocol buffer message from a GrpcResponse…",null,[[["grpcresponse",3]],["result",6]]],[5,"invoke_grpc_method_stream","","Helper to inject a (single) gRPC request message via a…",null,[[["sender",3]],[["result",6],["receiver",3]]]],[5,"invoke_grpc_method","","Helper to inject a (single) gRPC request message via a…",null,[[["sender",3]],["result",6]]],[5,"handle_req_rsp","","Generic function that handles request deserialization and…",null,[[["channelresponsewriter",3]]]],[5,"handle_req_stream","","Generic function that handles request deserialization and…",null,[[["channelresponsewriter",3]]]],[5,"handle_stream_rsp","","Generic function that handles request deserialization and…",null,[[["channelresponsewriter",3]]]],[5,"handle_stream_stream","","Generic function that handles request deserialization and…",null,[[["channelresponsewriter",3]]]],[0,"client","","",null,null],[3,"Client","oak::grpc::client","Client for a gRPC service in another Node.",null,null],[12,"invocation_sender","","",12,null],[11,"new","","Similar to [`Client::new_with_label`] but with a fixed…",12,[[["nodeconfiguration",3]],[["client",3],["option",4]]]],[11,"new_with_label","","Creates a new Node that implements a gRPC service, and if…",12,[[["label",3],["nodeconfiguration",3]],[["client",3],["option",4]]]],[0,"server","oak::grpc","Functionality to help Oak Nodes create gRPC server…",null,null],[5,"init","oak::grpc::server","Initializes a gRPC server pseudo-Node listening on the…",null,[[],[["result",4],["oakstatus",4],["readhandle",3]]]],[6,"Result","oak::grpc","Result type that uses a [`Status`] type for error values.",null,null],[8,"ServerNode","","Trait for Oak Nodes that act as a gRPC services.",null,null],[10,"invoke","","Process a single gRPC method invocation.",13,[[["channelresponsewriter",3]]]],[11,"new","","",14,[[["sender",3],["grpcresponse",3]]]],[11,"handle","","Retrieve the Oak handle underlying the writer object.",14,[[],["writehandle",3]]],[11,"write","","Write out a gRPC response and optionally close out the…",14,[[["writemode",4]],[["oakerror",4],["result",4]]]],[11,"write_empty","","Write an empty gRPC response and optionally close out the…",14,[[["writemode",4]],[["oakerror",4],["result",4]]]],[11,"close","","Close out the gRPC method invocation with the given final…",14,[[["result",6]],[["oakerror",4],["result",4]]]],[0,"io","oak","Wrappers for Oak SDK types to allow their use with…",null,null],[3,"Receiver","oak::io","Wrapper for a handle to the read half of a channel,…",null,null],[12,"handle","","",15,null],[3,"Sender","","Wrapper for a handle to the send half of a channel,…",null,null],[12,"handle","","",16,null],[3,"Message","","A simple holder for bytes + handles, using internally…",null,null],[12,"bytes","","",17,null],[12,"handles","","",17,null],[5,"channel_create","","Create a new channel for transmission of `Encodable` and…",null,[[],[["result",4],["oakstatus",4]]]],[5,"channel_create_with_label","","",null,[[["label",3]],[["result",4],["oakstatus",4]]]],[5,"error_from_nonok_status","","Map a non-OK [`OakStatus`] value to the nearest available…",null,[[["oakstatus",4]],["error",3]]],[11,"new","","",15,[[["readhandle",3]]]],[11,"close","","Close the underlying channel used by this receiver.",15,[[],[["oakstatus",4],["result",4]]]],[11,"receive","","Attempt to wait for a value on this receiver, blocking if…",15,[[],[["oakerror",4],["result",4]]]],[11,"try_receive","","Attempt to read a value from this receiver, without…",15,[[],[["oakerror",4],["result",4]]]],[11,"wait","","Wait for a value to be available from this receiver.",15,[[],[["channelreadstatus",4],["oakstatus",4],["result",4]]]],[11,"new","","",16,[[["writehandle",3]]]],[11,"close","","Close the underlying channel used by this sender.",16,[[],[["oakstatus",4],["result",4]]]],[11,"send","","Attempt to send a value on this sender.",16,[[],[["oakerror",4],["result",4]]]],[8,"Decodable","","A trait for objects that can be decoded from bytes +…",null,null],[10,"decode","","",18,[[["message",3]],[["oakerror",4],["result",4]]]],[8,"Encodable","","A trait for objects that can be encoded as bytes + handles.",null,null],[10,"encode","","",19,[[],[["oakerror",4],["result",4],["message",3]]]],[0,"logger","oak","A logger that sends output to an Oak logging channel, for…",null,null],[5,"init_default","oak::logger","Initialize Node-wide default logging.",null,[[]]],[5,"init","","Initialize Node-wide logging via a channel to a logging…",null,[[["level",4]],[["result",4],["setloggererror",3]]]],[0,"node_config","oak","Helper methods for creating common [`NodeConfiguration`]…",null,null],[5,"grpc_client","oak::node_config","",null,[[],["nodeconfiguration",3]]],[5,"grpc_server","","",null,[[],["nodeconfiguration",3]]],[5,"wasm","","",null,[[],["nodeconfiguration",3]]],[5,"log","","",null,[[],["nodeconfiguration",3]]],[0,"rand","oak","Functionality to allow use of the rand crate in Oak.",null,null],[3,"OakRng","oak::rand","",null,null],[0,"roughtime","oak","Helper library for accessing the Oak Roughtime service.",null,null],[3,"Roughtime","oak::roughtime","Local representation of the connection to an external…",null,null],[11,"new","","Creates a [`Roughtime`] instance using the given…",20,[[["roughtimeclientconfiguration",3]],[["roughtime",3],["option",4]]]],[11,"get_roughtime","","Get the current Roughtime value as a Duration since UNIX…",20,[[],[["result",6],["duration",3]]]],[0,"storage","oak","Helper library for accessing Oak storage services.",null,null],[3,"Storage","oak::storage","Local representation of the connection to an external…",null,null],[11,"new","","Creates a [`Storage`] instance using the given…",21,[[["storageproxyconfiguration",3]],[["option",4],["storage",3]]]],[11,"read","","Read the value associated with the given `name` from the…",21,[[],[["result",6],["vec",3]]]],[11,"write","","Set the value associated with the given `name` from the…",21,[[],["result",6]]],[11,"delete","","Delete the value associated with the given `name` from the…",21,[[],["result",6]]],[0,"proto","oak","Auto-generated code derived from protocol buffer…",null,null],[0,"oak","oak::proto","",null,null],[0,"application","oak::proto::oak","",null,null],[3,"ApplicationConfiguration","oak::proto::oak::application","An ApplicationConfiguration represents a unit of…",null,null],[12,"wasm_modules","","Map from Wasm module names to their bytecode representation.",22,null],[12,"initial_node_configuration","","Indication of what configuration the initial Node should…",22,null],[3,"NodeConfiguration","","NodeConfiguration indicates the configuration of a created…",null,null],[12,"name","","Display name of the newly created node instance, for…",23,null],[12,"config_type","","",23,null],[0,"node_configuration","","",null,null],[4,"ConfigType","oak::proto::oak::application::node_configuration","",null,null],[13,"WasmConfig","","",24,null],[13,"LogConfig","","",24,null],[13,"StorageConfig","","",24,null],[13,"GrpcServerConfig","","",24,null],[13,"GrpcClientConfig","","",24,null],[13,"RoughtimeClientConfig","","",24,null],[3,"WebAssemblyConfiguration","oak::proto::oak::application","WebAssemblyConfiguration describes the configuration of a…",null,null],[12,"wasm_module_name","","The name of one of the entries in the…",25,null],[12,"wasm_entrypoint_name","","The name of an exported WebAssembly function to invoke as…",25,null],[3,"LogConfiguration","","LogConfiguration describes the configuration of a logging…",null,null],[3,"StorageProxyConfiguration","","StorageProxyConfiguration describes the configuration of a…",null,null],[12,"address","","The address of the external storage provider.",26,null],[3,"GrpcServerConfiguration","","GrpcServerConfiguration describes the configuration of a…",null,null],[12,"address","","The endpoint address for the gRPC server to listen on.…",27,null],[3,"GrpcClientConfiguration","","GrpcClientConfiguration describes the configuration of a…",null,null],[12,"uri","","The URI component of a gRPC server endpoint. Must contain…",28,null],[12,"address","","The endpoint address of the external gRPC service.…",28,null],[3,"RoughtimeClientConfiguration","","RoughtimeClientConfiguration describes the configuration…",null,null],[12,"servers","","The collection of Roughtime servers to query. A default…",29,null],[12,"min_overlapping_intervals","","Connection parameters; default values will be used if any…",29,null],[12,"timeout_seconds","","",29,null],[12,"server_retries","","",29,null],[12,"max_radius_microseconds","","",29,null],[3,"RoughtimeServer","","Information to identify a particular Roughtime server.…",null,null],[12,"name","","",30,null],[12,"host","","",30,null],[12,"port","","",30,null],[12,"public_key_base64","","",30,null],[3,"ConfigMap","","A serialized list of key-value pairs that are specified as…",null,null],[12,"items","","",31,null],[0,"label","oak::proto::oak","",null,null],[3,"Label","oak::proto::oak::label","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",0,null],[12,"integrity_tags","","",0,null],[3,"Tag","","Tag represents a category of confidentiality or integrity…",null,null],[12,"tag","","",32,null],[0,"tag","","",null,null],[4,"Tag","oak::proto::oak::label::tag","",null,null],[13,"GrpcTag","","",33,null],[13,"WebAssemblyModuleTag","","",33,null],[13,"TlsEndpointTag","","",33,null],[3,"GrpcTag","oak::proto::oak::label","Policies related to gRPC communication, referring to the…",null,null],[12,"authorization_bearer_token_hmac","","In order for a client to be authorized to fulfill a tag…",34,null],[3,"WebAssemblyModuleTag","","Policies related to modules, referring to the native…",null,null],[12,"web_assembly_module_hash_sha_256","","The attestation for a single WebAssembly module, a SHA256…",35,null],[3,"TlsEndpointTag","","Policies related to HTTPS communication.",null,null],[12,"certificate_subject_alternative_name","","The Subject Alternative Name (SAN) of a certificate that a…",36,null],[0,"storage","oak::proto::oak","",null,null],[3,"StorageItem","oak::proto::oak::storage","",null,null],[12,"name","","",37,null],[12,"value","","",37,null],[12,"label","","",37,null],[3,"StorageChannelReadRequest","","",null,null],[12,"storage_name","","",38,null],[12,"transaction_id","","",38,null],[12,"item","","",38,null],[3,"StorageChannelReadResponse","","",null,null],[12,"item","","",39,null],[3,"StorageChannelWriteRequest","","",null,null],[12,"storage_name","","",40,null],[12,"transaction_id","","",40,null],[12,"item","","",40,null],[3,"StorageChannelWriteResponse","","",null,null],[3,"StorageChannelDeleteRequest","","",null,null],[12,"storage_name","","",41,null],[12,"transaction_id","","",41,null],[12,"item","","",41,null],[3,"StorageChannelDeleteResponse","","",null,null],[3,"StorageChannelBeginRequest","","",null,null],[12,"storage_name","","",42,null],[3,"StorageChannelBeginResponse","","",null,null],[12,"transaction_id","","",43,null],[3,"StorageChannelCommitRequest","","",null,null],[12,"storage_name","","",44,null],[12,"transaction_id","","",44,null],[3,"StorageChannelCommitResponse","","",null,null],[3,"StorageChannelRollbackRequest","","",null,null],[12,"storage_name","","",45,null],[12,"storage_id","","",45,null],[12,"transaction_id","","",45,null],[3,"StorageChannelRollbackResponse","","",null,null],[3,"StorageServiceDispatcher","","",null,null],[3,"StorageServiceClient","","",null,null],[12,"0","","",46,null],[8,"StorageService","","",null,null],[10,"read","","",47,[[["storagechannelreadrequest",3]],[["result",6],["storagechannelreadresponse",3]]]],[10,"write","","",47,[[["storagechannelwriterequest",3]],[["storagechannelwriteresponse",3],["result",6]]]],[10,"delete","","",47,[[["storagechanneldeleterequest",3]],[["storagechanneldeleteresponse",3],["result",6]]]],[10,"begin","","",47,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelbeginresponse",3]]]],[10,"commit","","",47,[[["storagechannelbeginrequest",3]],[["storagechannelcommitresponse",3],["result",6]]]],[10,"rollback","","",47,[[["storagechannelrollbackrequest",3]],[["result",6],["storagechannelrollbackresponse",3]]]],[11,"new","","",48,[[],["storageservicedispatcher",3]]],[11,"read","","",46,[[["storagechannelreadrequest",3]],[["result",6],["storagechannelreadresponse",3]]]],[11,"write","","",46,[[["storagechannelwriterequest",3]],[["storagechannelwriteresponse",3],["result",6]]]],[11,"delete","","",46,[[["storagechanneldeleterequest",3]],[["storagechanneldeleteresponse",3],["result",6]]]],[11,"begin","","",46,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelbeginresponse",3]]]],[11,"commit","","",46,[[["storagechannelbeginrequest",3]],[["storagechannelcommitresponse",3],["result",6]]]],[11,"rollback","","",46,[[["storagechannelrollbackrequest",3]],[["result",6],["storagechannelrollbackresponse",3]]]],[0,"roughtime","oak::proto::oak","",null,null],[3,"GetRoughtimeRequest","oak::proto::oak::roughtime","",null,null],[3,"Roughtime","","",null,null],[12,"roughtime_usec","","Time is UTC and is given as microseconds since the UNIX…",49,null],[3,"RoughtimeServiceDispatcher","","",null,null],[3,"RoughtimeServiceClient","","",null,null],[12,"0","","",50,null],[8,"RoughtimeService","","",null,null],[10,"get_roughtime","","",51,[[["getroughtimerequest",3]],[["roughtime",3],["result",6]]]],[11,"new","","",52,[[],["roughtimeservicedispatcher",3]]],[11,"get_roughtime","","",50,[[["getroughtimerequest",3]],[["roughtime",3],["result",6]]]],[8,"Node","oak","Trait implemented by all Oak Nodes.",null,null],[10,"handle_command","","",53,[[],[["result",4],["oakerror",4]]]],[11,"from_raw","","When using the Oak SDK, this method should not need to be…",54,[[],["handle",3]]],[11,"is_valid","","Check this handle is valid.",54,[[]]],[11,"invalid","","Returns an intentionally invalid handle.",54,[[],["handle",3]]],[14,"entrypoint","","Register a new Node entrypoint.",null,null],[11,"from","oak::proto::oak::label","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","oak","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","oak::grpc","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","oak::grpc::client","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","oak::io","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","oak::rand","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","oak::roughtime","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","oak::storage","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","oak::proto::oak::application","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","oak::proto::oak::application::node_configuration","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","oak::proto::oak::application","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","oak::proto::oak::label","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","oak::proto::oak::label::tag","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","oak::proto::oak::label","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","oak::proto::oak::storage","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"handle_command","","Handle incoming gRPC events for an [`ServerNode`].",48,[[["invocation",3]],[["result",4],["oakerror",4]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","oak::proto::oak::roughtime","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"handle_command","","Handle incoming gRPC events for an [`ServerNode`].",52,[[["invocation",3]],[["result",4],["oakerror",4]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"eq","oak::proto::oak::label","",0,[[["label",3]]]],[11,"ne","","",0,[[["label",3]]]],[11,"eq","oak::proto::oak::application","",28,[[["grpcclientconfiguration",3]]]],[11,"ne","","",28,[[["grpcclientconfiguration",3]]]],[11,"eq","","",31,[[["configmap",3]]]],[11,"ne","","",31,[[["configmap",3]]]],[11,"eq","oak::grpc","",8,[[["grpcrequest",3]]]],[11,"ne","","",8,[[["grpcrequest",3]]]],[11,"eq","oak::proto::oak::application","",30,[[["roughtimeserver",3]]]],[11,"ne","","",30,[[["roughtimeserver",3]]]],[11,"eq","","",56,[[["logconfiguration",3]]]],[11,"eq","","",29,[[["roughtimeclientconfiguration",3]]]],[11,"ne","","",29,[[["roughtimeclientconfiguration",3]]]],[11,"eq","","",22,[[["applicationconfiguration",3]]]],[11,"ne","","",22,[[["applicationconfiguration",3]]]],[11,"eq","","",23,[[["nodeconfiguration",3]]]],[11,"ne","","",23,[[["nodeconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",32,[[["tag",3]]]],[11,"ne","","",32,[[["tag",3]]]],[11,"eq","","",34,[[["grpctag",3]]]],[11,"ne","","",34,[[["grpctag",3]]]],[11,"eq","oak","",2,[[["oakstatus",4]]]],[11,"eq","oak::proto::oak::application","",26,[[["storageproxyconfiguration",3]]]],[11,"ne","","",26,[[["storageproxyconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",36,[[["tlsendpointtag",3]]]],[11,"ne","","",36,[[["tlsendpointtag",3]]]],[11,"eq","oak::proto::oak::application","",25,[[["webassemblyconfiguration",3]]]],[11,"ne","","",25,[[["webassemblyconfiguration",3]]]],[11,"eq","oak::grpc","",6,[[["status",3]]]],[11,"ne","","",6,[[["status",3]]]],[11,"eq","oak","",1,[[["channelreadstatus",4]]]],[11,"eq","oak::proto::oak::application::node_configuration","",24,[[["configtype",4]]]],[11,"ne","","",24,[[["configtype",4]]]],[11,"eq","oak::proto::oak::application","",27,[[["grpcserverconfiguration",3]]]],[11,"ne","","",27,[[["grpcserverconfiguration",3]]]],[11,"eq","oak::proto::oak::label::tag","",33,[[["tag",4]]]],[11,"ne","","",33,[[["tag",4]]]],[11,"eq","oak::proto::oak::label","",35,[[["webassemblymoduletag",3]]]],[11,"ne","","",35,[[["webassemblymoduletag",3]]]],[11,"eq","oak::grpc","",9,[[["grpcresponse",3]]]],[11,"ne","","",9,[[["grpcresponse",3]]]],[11,"eq","","",7,[[["code",4]]]],[11,"partial_cmp","oak","",2,[[["oakstatus",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","oak::grpc","",7,[[["code",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","oak","",1,[[["channelreadstatus",4]],[["ordering",4],["option",4]]]],[11,"default","oak::grpc","",6,[[],["status",3]]],[11,"default","oak::proto::oak::label","",0,[[],["label",3]]],[11,"default","oak","",2,[[],["oakstatus",4]]],[11,"default","oak::proto::oak::application","",56,[[],["logconfiguration",3]]],[11,"default","oak","",1,[[],["channelreadstatus",4]]],[11,"default","oak::proto::oak::application","",23,[[],["nodeconfiguration",3]]],[11,"default","oak::grpc","",8,[[],["grpcrequest",3]]],[11,"default","oak::proto::oak::application","",29,[[],["roughtimeclientconfiguration",3]]],[11,"default","","",30,[[],["roughtimeserver",3]]],[11,"default","","",27,[[],["grpcserverconfiguration",3]]],[11,"default","oak::proto::oak::label","",35,[[],["webassemblymoduletag",3]]],[11,"default","oak::proto::oak::application","",28,[[],["grpcclientconfiguration",3]]],[11,"default","","",31,[[],["configmap",3]]],[11,"default","oak::proto::oak::label","",34,[[],["grpctag",3]]],[11,"default","","",36,[[],["tlsendpointtag",3]]],[11,"default","oak::proto::oak::application","",25,[[],["webassemblyconfiguration",3]]],[11,"default","oak::grpc","",9,[[],["grpcresponse",3]]],[11,"default","oak::proto::oak::label","",32,[[],["tag",3]]],[11,"default","oak::proto::oak::application","",22,[[],["applicationconfiguration",3]]],[11,"default","oak::grpc","",7,[[],["code",4]]],[11,"default","oak::proto::oak::application","",26,[[],["storageproxyconfiguration",3]]],[11,"cmp","oak::grpc","",7,[[["code",4]],["ordering",4]]],[11,"cmp","oak","",2,[[["oakstatus",4]],["ordering",4]]],[11,"cmp","","",1,[[["channelreadstatus",4]],["ordering",4]]],[11,"fmt","oak::proto::oak::label","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::grpc","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::grpc","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application::node_configuration","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::grpc","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::grpc","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label::tag","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",2,[[],["oakstatus",4]]],[11,"clone","oak::proto::oak::label::tag","",33,[[],["tag",4]]],[11,"clone","oak::proto::oak::application","",22,[[],["applicationconfiguration",3]]],[11,"clone","oak::grpc","",8,[[],["grpcrequest",3]]],[11,"clone","oak::proto::oak::application","",26,[[],["storageproxyconfiguration",3]]],[11,"clone","","",31,[[],["configmap",3]]],[11,"clone","oak::proto::oak::label","",0,[[],["label",3]]],[11,"clone","oak::grpc","",6,[[],["status",3]]],[11,"clone","oak::proto::oak::label","",34,[[],["grpctag",3]]],[11,"clone","oak::proto::oak::application","",28,[[],["grpcclientconfiguration",3]]],[11,"clone","","",23,[[],["nodeconfiguration",3]]],[11,"clone","oak::grpc","",7,[[],["code",4]]],[11,"clone","oak::proto::oak::application","",25,[[],["webassemblyconfiguration",3]]],[11,"clone","oak::proto::oak::label","",36,[[],["tlsendpointtag",3]]],[11,"clone","oak::proto::oak::application","",29,[[],["roughtimeclientconfiguration",3]]],[11,"clone","","",27,[[],["grpcserverconfiguration",3]]],[11,"clone","oak::proto::oak::label","",32,[[],["tag",3]]],[11,"clone","oak::proto::oak::application::node_configuration","",24,[[],["configtype",4]]],[11,"clone","oak","",1,[[],["channelreadstatus",4]]],[11,"clone","oak::proto::oak::application","",30,[[],["roughtimeserver",3]]],[11,"clone","oak::grpc","",9,[[],["grpcresponse",3]]],[11,"clone","oak::proto::oak::label","",35,[[],["webassemblymoduletag",3]]],[11,"clone","oak::proto::oak::application","",56,[[],["logconfiguration",3]]],[11,"hash","oak","",1,[[]]],[11,"hash","oak::proto::oak::label::tag","",33,[[]]],[11,"hash","oak::proto::oak::label","",36,[[]]],[11,"hash","oak","",2,[[]]],[11,"hash","oak::proto::oak::label","",0,[[]]],[11,"hash","oak::grpc","",7,[[]]],[11,"hash","oak::proto::oak::label","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",32,[[]]],[11,"encode_raw","oak::proto::oak::application","",23,[[]]],[11,"merge_field","","",23,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",23,[[]]],[11,"clear","","",23,[[]]],[11,"encode_raw","oak::grpc","",8,[[]]],[11,"merge_field","","",8,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","oak::proto::oak::application","",28,[[]]],[11,"merge_field","","",28,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",28,[[]]],[11,"clear","","",28,[[]]],[11,"encode_raw","oak::grpc","",6,[[]]],[11,"merge_field","","",6,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"encode_raw","oak::proto::oak::application","",56,[[]]],[11,"merge_field","","",56,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",56,[[]]],[11,"clear","","",56,[[]]],[11,"encode_raw","oak::proto::oak::label","",36,[[]]],[11,"merge_field","","",36,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",36,[[]]],[11,"clear","","",36,[[]]],[11,"encode_raw","oak::proto::oak::application","",22,[[]]],[11,"merge_field","","",22,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",22,[[]]],[11,"clear","","",22,[[]]],[11,"encode_raw","","",26,[[]]],[11,"merge_field","","",26,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",26,[[]]],[11,"clear","","",26,[[]]],[11,"encode_raw","oak::grpc","",9,[[]]],[11,"merge_field","","",9,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"encode_raw","oak::proto::oak::label","",32,[[]]],[11,"merge_field","","",32,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",32,[[]]],[11,"clear","","",32,[[]]],[11,"encode_raw","","",35,[[]]],[11,"merge_field","","",35,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",35,[[]]],[11,"clear","","",35,[[]]],[11,"encode_raw","","",34,[[]]],[11,"merge_field","","",34,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",34,[[]]],[11,"clear","","",34,[[]]],[11,"encode_raw","oak::proto::oak::application","",29,[[]]],[11,"merge_field","","",29,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",29,[[]]],[11,"clear","","",29,[[]]],[11,"encode_raw","oak::proto::oak::label","",0,[[]]],[11,"merge_field","","",0,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","oak::proto::oak::application","",27,[[]]],[11,"merge_field","","",27,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",27,[[]]],[11,"clear","","",27,[[]]],[11,"encode_raw","","",30,[[]]],[11,"merge_field","","",30,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",30,[[]]],[11,"clear","","",30,[[]]],[11,"encode_raw","","",25,[[]]],[11,"merge_field","","",25,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",25,[[]]],[11,"clear","","",25,[[]]],[11,"encode_raw","","",31,[[]]],[11,"merge_field","","",31,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",31,[[]]],[11,"clear","","",31,[[]]],[11,"invoke","oak::proto::oak::storage","",48,[[["channelresponsewriter",3]]]],[11,"invoke","oak::proto::oak::roughtime","",52,[[["channelresponsewriter",3]]]],[11,"decode","oak::grpc","",10,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",10,[[],[["message",3],["result",4],["oakerror",4]]]],[11,"drop","oak::grpc::client","",12,[[]]],[11,"from","oak","",5,[[["decodeerror",3]]]],[11,"from","","",5,[[["encodeerror",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"from","","",5,[[["oakstatus",4]]]],[11,"clone","oak::grpc","",11,[[],["writemode",4]]],[11,"clone","oak::io","",15,[[],["receiver",3]]],[11,"clone","","",16,[[],["sender",3]]],[11,"clone","oak::rand","",55,[[],["oakrng",3]]],[11,"clone","oak::proto::oak::storage","",37,[[],["storageitem",3]]],[11,"clone","","",38,[[],["storagechannelreadrequest",3]]],[11,"clone","","",39,[[],["storagechannelreadresponse",3]]],[11,"clone","","",40,[[],["storagechannelwriterequest",3]]],[11,"clone","","",57,[[],["storagechannelwriteresponse",3]]],[11,"clone","","",41,[[],["storagechanneldeleterequest",3]]],[11,"clone","","",58,[[],["storagechanneldeleteresponse",3]]],[11,"clone","","",42,[[],["storagechannelbeginrequest",3]]],[11,"clone","","",43,[[],["storagechannelbeginresponse",3]]],[11,"clone","","",44,[[],["storagechannelcommitrequest",3]]],[11,"clone","","",59,[[],["storagechannelcommitresponse",3]]],[11,"clone","","",45,[[],["storagechannelrollbackrequest",3]]],[11,"clone","","",60,[[],["storagechannelrollbackresponse",3]]],[11,"clone","oak::proto::oak::roughtime","",61,[[],["getroughtimerequest",3]]],[11,"clone","","",49,[[],["roughtime",3]]],[11,"clone","oak","",54,[[],["handle",3]]],[11,"clone","","",3,[[],["readhandle",3]]],[11,"clone","","",4,[[],["writehandle",3]]],[11,"default","oak::proto::oak::storage","",37,[[],["storageitem",3]]],[11,"default","","",38,[[],["storagechannelreadrequest",3]]],[11,"default","","",39,[[],["storagechannelreadresponse",3]]],[11,"default","","",40,[[],["storagechannelwriterequest",3]]],[11,"default","","",57,[[],["storagechannelwriteresponse",3]]],[11,"default","","",41,[[],["storagechanneldeleterequest",3]]],[11,"default","","",58,[[],["storagechanneldeleteresponse",3]]],[11,"default","","",42,[[],["storagechannelbeginrequest",3]]],[11,"default","","",43,[[],["storagechannelbeginresponse",3]]],[11,"default","","",44,[[],["storagechannelcommitrequest",3]]],[11,"default","","",59,[[],["storagechannelcommitresponse",3]]],[11,"default","","",45,[[],["storagechannelrollbackrequest",3]]],[11,"default","","",60,[[],["storagechannelrollbackresponse",3]]],[11,"default","oak::proto::oak::roughtime","",61,[[],["getroughtimerequest",3]]],[11,"default","","",49,[[],["roughtime",3]]],[11,"eq","oak::grpc","",11,[[["writemode",4]]]],[11,"eq","oak::io","",15,[[["receiver",3]]]],[11,"ne","","",15,[[["receiver",3]]]],[11,"eq","","",16,[[["sender",3]]]],[11,"ne","","",16,[[["sender",3]]]],[11,"eq","","",17,[[["message",3]]]],[11,"ne","","",17,[[["message",3]]]],[11,"eq","oak::proto::oak::storage","",37,[[["storageitem",3]]]],[11,"ne","","",37,[[["storageitem",3]]]],[11,"eq","","",38,[[["storagechannelreadrequest",3]]]],[11,"ne","","",38,[[["storagechannelreadrequest",3]]]],[11,"eq","","",39,[[["storagechannelreadresponse",3]]]],[11,"ne","","",39,[[["storagechannelreadresponse",3]]]],[11,"eq","","",40,[[["storagechannelwriterequest",3]]]],[11,"ne","","",40,[[["storagechannelwriterequest",3]]]],[11,"eq","","",57,[[["storagechannelwriteresponse",3]]]],[11,"eq","","",41,[[["storagechanneldeleterequest",3]]]],[11,"ne","","",41,[[["storagechanneldeleterequest",3]]]],[11,"eq","","",58,[[["storagechanneldeleteresponse",3]]]],[11,"eq","","",42,[[["storagechannelbeginrequest",3]]]],[11,"ne","","",42,[[["storagechannelbeginrequest",3]]]],[11,"eq","","",43,[[["storagechannelbeginresponse",3]]]],[11,"ne","","",43,[[["storagechannelbeginresponse",3]]]],[11,"eq","","",44,[[["storagechannelcommitrequest",3]]]],[11,"ne","","",44,[[["storagechannelcommitrequest",3]]]],[11,"eq","","",59,[[["storagechannelcommitresponse",3]]]],[11,"eq","","",45,[[["storagechannelrollbackrequest",3]]]],[11,"ne","","",45,[[["storagechannelrollbackrequest",3]]]],[11,"eq","","",60,[[["storagechannelrollbackresponse",3]]]],[11,"eq","oak::proto::oak::roughtime","",61,[[["getroughtimerequest",3]]]],[11,"eq","","",49,[[["roughtime",3]]]],[11,"ne","","",49,[[["roughtime",3]]]],[11,"eq","oak","",54,[[["handle",3]]]],[11,"ne","","",54,[[["handle",3]]]],[11,"eq","","",3,[[["readhandle",3]]]],[11,"ne","","",3,[[["readhandle",3]]]],[11,"eq","","",4,[[["writehandle",3]]]],[11,"ne","","",4,[[["writehandle",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","oak::grpc","",11,[[["formatter",3]],["result",6]]],[11,"fmt","oak::io","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","oak::rand","",55,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::storage","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::roughtime","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","oak","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",54,[[]]],[11,"encode_raw","oak::proto::oak::storage","",37,[[]]],[11,"merge_field","","",37,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",37,[[]]],[11,"clear","","",37,[[]]],[11,"encode_raw","","",38,[[]]],[11,"merge_field","","",38,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",38,[[]]],[11,"clear","","",38,[[]]],[11,"encode_raw","","",39,[[]]],[11,"merge_field","","",39,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",39,[[]]],[11,"clear","","",39,[[]]],[11,"encode_raw","","",40,[[]]],[11,"merge_field","","",40,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",40,[[]]],[11,"clear","","",40,[[]]],[11,"encode_raw","","",57,[[]]],[11,"merge_field","","",57,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",57,[[]]],[11,"clear","","",57,[[]]],[11,"encode_raw","","",41,[[]]],[11,"merge_field","","",41,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",41,[[]]],[11,"clear","","",41,[[]]],[11,"encode_raw","","",58,[[]]],[11,"merge_field","","",58,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",58,[[]]],[11,"clear","","",58,[[]]],[11,"encode_raw","","",42,[[]]],[11,"merge_field","","",42,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",42,[[]]],[11,"clear","","",42,[[]]],[11,"encode_raw","","",43,[[]]],[11,"merge_field","","",43,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",43,[[]]],[11,"clear","","",43,[[]]],[11,"encode_raw","","",44,[[]]],[11,"merge_field","","",44,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",44,[[]]],[11,"clear","","",44,[[]]],[11,"encode_raw","","",59,[[]]],[11,"merge_field","","",59,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",59,[[]]],[11,"clear","","",59,[[]]],[11,"encode_raw","","",45,[[]]],[11,"merge_field","","",45,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",45,[[]]],[11,"clear","","",45,[[]]],[11,"encode_raw","","",60,[[]]],[11,"merge_field","","",60,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",60,[[]]],[11,"clear","","",60,[[]]],[11,"encode_raw","oak::proto::oak::roughtime","",61,[[]]],[11,"merge_field","","",61,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",61,[[]]],[11,"clear","","",61,[[]]],[11,"encode_raw","","",49,[[]]],[11,"merge_field","","",49,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",49,[[]]],[11,"clear","","",49,[[]]],[11,"serialize","oak::io","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","oak","",54,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"deserialize","oak::io","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","oak","",54,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"next_u32","oak::rand","",55,[[]]],[11,"next_u64","","",55,[[]]],[11,"fill_bytes","","",55,[[]]],[11,"try_fill_bytes","","",55,[[],[["result",4],["error",3]]]],[11,"serialize","oak::proto::oak::label","Convert a label to bytes.",0,[[],["vec",3]]],[11,"deserialize","","Build the label from bytes.",0,[[],[["option",4],["label",3]]]],[11,"public_untrusted","","Return the least privileged label.",0,[[],["label",3]]],[11,"flows_to","","Compare two labels according to the lattice structure: L_0…",0,[[["label",3]]]],[11,"is_valid","oak","Returns `true` if `value` is a variant of…",1,[[]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` if…",1,[[],[["option",4],["channelreadstatus",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `OakStatus`.",2,[[]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`…",2,[[],[["option",4],["oakstatus",4]]]],[11,"is_valid","oak::grpc","Returns `true` if `value` is a variant of `Code`.",7,[[]]],[11,"from_i32","","Converts an `i32` to a `Code`, or `None` if `value` is not…",7,[[],[["option",4],["code",4]]]],[11,"encode","oak::proto::oak::application::node_configuration","",24,[[]]],[11,"merge","","",24,[[["wiretype",4],["decodecontext",3],["option",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",24,[[]]],[11,"encode","oak::proto::oak::label::tag","",33,[[]]],[11,"merge","","",33,[[["option",4],["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",33,[[]]]],"p":[[3,"Label"],[4,"ChannelReadStatus"],[4,"OakStatus"],[3,"ReadHandle"],[3,"WriteHandle"],[4,"OakError"],[3,"Status"],[4,"Code"],[3,"GrpcRequest"],[3,"GrpcResponse"],[3,"Invocation"],[4,"WriteMode"],[3,"Client"],[8,"ServerNode"],[3,"ChannelResponseWriter"],[3,"Receiver"],[3,"Sender"],[3,"Message"],[8,"Decodable"],[8,"Encodable"],[3,"Roughtime"],[3,"Storage"],[3,"ApplicationConfiguration"],[3,"NodeConfiguration"],[4,"ConfigType"],[3,"WebAssemblyConfiguration"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[3,"Tag"],[4,"Tag"],[3,"GrpcTag"],[3,"WebAssemblyModuleTag"],[3,"TlsEndpointTag"],[3,"StorageItem"],[3,"StorageChannelReadRequest"],[3,"StorageChannelReadResponse"],[3,"StorageChannelWriteRequest"],[3,"StorageChannelDeleteRequest"],[3,"StorageChannelBeginRequest"],[3,"StorageChannelBeginResponse"],[3,"StorageChannelCommitRequest"],[3,"StorageChannelRollbackRequest"],[3,"StorageServiceClient"],[8,"StorageService"],[3,"StorageServiceDispatcher"],[3,"Roughtime"],[3,"RoughtimeServiceClient"],[8,"RoughtimeService"],[3,"RoughtimeServiceDispatcher"],[8,"Node"],[3,"Handle"],[3,"OakRng"],[3,"LogConfiguration"],[3,"StorageChannelWriteResponse"],[3,"StorageChannelDeleteResponse"],[3,"StorageChannelCommitResponse"],[3,"StorageChannelRollbackResponse"],[3,"GetRoughtimeRequest"]]},\
"oak_tests":{"doc":"Test utilities to help with unit testing of Oak SDK code.","i":[[5,"compile_rust_wasm","oak_tests","Uses cargo to compile a Rust manifest to Wasm bytes.",null,[[],[["vec",3],["result",6]]]],[5,"run_single_module_default","","Convenience helper to build and run a single-Node…",null,[[],[["oakstatus",4],["result",4]]]],[5,"run_single_module","","Convenience helper to build and run a single-Node…",null,[[],[["oakstatus",4],["result",4]]]],[5,"runtime_config","","Build the configuration needed to launch a test Runtime…",null,[[],["runtimeconfiguration",3]]],[5,"runtime_config_wasm","","Build the configuration needed to launch a test Runtime…",null,[[["hashmap",3],["string",3],["vec",3]],["runtimeconfiguration",3]]],[5,"grpc_request","","Inject a gRPC request into an Oak Application under test…",null,[[["runtimeproxy",3],["handle",6]],["result",6]]]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);