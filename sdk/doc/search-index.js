var searchIndex = JSON.parse('{\
"oak":{"doc":"SDK functionality that provides idiomatic Rust wrappers…","i":[[3,"Label","oak","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",0,null],[12,"integrity_tags","","",0,null],[4,"ChannelReadStatus","","Single byte values used to indicate the read status of a…",null,null],[13,"NotReady","","No pending messages available on channel.",1,null],[13,"ReadReady","","Pending message available on channel.",1,null],[13,"InvalidChannel","","Channel handle does not identify the read half of a…",1,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",1,null],[13,"PermissionDenied","","A node trying to access the channel does not have the…",1,null],[6,"Handle","","Handle used to identify read or write channel halves.",null,null],[4,"OakStatus","","Status values exchanged as i32 values across the Node Wasm…",null,null],[13,"Unspecified","","",2,null],[13,"Ok","","Success.",2,null],[13,"ErrBadHandle","","Invalid handle provided.",2,null],[13,"ErrInvalidArgs","","Arguments invalid.",2,null],[13,"ErrChannelClosed","","Channel has been closed.",2,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an output…",2,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (an…",2,null],[13,"ErrOutOfRange","","Argument out of valid range.",2,null],[13,"ErrInternal","","Internal error.",2,null],[13,"ErrTerminated","","Node terminated.",2,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",2,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to perform…",2,null],[3,"ReadHandle","","Wrapper for a handle to the read half of a channel.",null,null],[12,"handle","","",3,null],[3,"WriteHandle","","Wrapper for a handle to the send half of a channel.",null,null],[12,"handle","","",4,null],[4,"OakError","","Generic Oak error.",null,null],[13,"ProtobufDecodeError","","",5,null],[13,"ProtobufEncodeError","","",5,null],[13,"OakStatus","","",5,null],[13,"IoError","","",5,null],[5,"wait_on_channels","","Wait for one or more of the provided handles to become…",null,[[],[["result",4],["oakstatus",4],["vec",3]]]],[5,"channel_read","","Read a message from a channel without blocking.",null,[[["readhandle",3],["vec",3],["vec",3]],[["oakstatus",4],["result",4]]]],[5,"channel_write","","Write a message to a channel.",null,[[["writehandle",3]],[["oakstatus",4],["result",4]]]],[5,"channel_write_with_downgrade","","The same as `channel_write`, but also applies the current…",null,[[["writehandle",3]],[["oakstatus",4],["result",4]]]],[5,"channel_create","","Create a new unidirectional channel.",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[5,"channel_create_with_downgrade","","The same as `channel_create`, but also applies the current…",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[5,"channel_close","","Close the specified channel [`Handle`].",null,[[["handle",6]],[["oakstatus",4],["result",4]]]],[5,"node_create","","Creates a new Node running the configuration identified by…",null,[[["nodeconfiguration",3],["readhandle",3],["label",3]],[["oakstatus",4],["result",4]]]],[5,"node_create_with_downgrade","","The same as `node_create`, but also applies the current…",null,[[["nodeconfiguration",3],["readhandle",3],["label",3]],[["oakstatus",4],["result",4]]]],[5,"channel_label_read","","Get the [`Label`] for the channel associated with the…",null,[[["handle",6]],[["oakstatus",4],["result",4],["label",3]]]],[5,"node_label_read","","Get the [`Label`] for the current node.",null,[[],[["oakstatus",4],["result",4],["label",3]]]],[5,"node_privilege_read","","Get the downgrade privilege for the current node…",null,[[],[["oakstatus",4],["result",4],["label",3]]]],[5,"random_get","","Fill a buffer with random data.",null,[[],[["oakstatus",4],["result",4]]]],[5,"result_from_status","","Convert a status returned from a host function call to a…",null,[[],[["oakstatus",4],["result",4]]]],[5,"set_panic_hook","","Install a panic hook that logs panic information.",null,[[]]],[5,"run_command_loop","","Runs a command loop on the provided [`CommandHandler`]:",null,[[["iterator",8],["commandhandler",8]]]],[0,"grpc","","Functionality to help Oak Nodes interact with gRPC.",null,null],[3,"Status","oak::grpc","The `Status` type defines a logical error model that is…",null,null],[12,"code","","The status code, which should be an enum value of…",6,null],[12,"message","","A developer-facing error message, which should be in…",6,null],[12,"details","","A list of messages that carry the error details. There is…",6,null],[4,"Code","","The canonical error codes for Google APIs.",null,null],[13,"Ok","","Not an error; returned on success",7,null],[13,"Cancelled","","The operation was cancelled, typically by the caller.",7,null],[13,"Unknown","","Unknown error. For example, this error may be returned…",7,null],[13,"InvalidArgument","","The client specified an invalid argument. Note that this…",7,null],[13,"DeadlineExceeded","","The deadline expired before the operation could complete.…",7,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was not…",7,null],[13,"AlreadyExists","","The entity that a client attempted to create (e.g., file…",7,null],[13,"PermissionDenied","","The caller does not have permission to execute the…",7,null],[13,"Unauthenticated","","The request does not have valid authentication credentials…",7,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-user…",7,null],[13,"FailedPrecondition","","The operation was rejected because the system is not in a…",7,null],[13,"Aborted","","The operation was aborted, typically due to a concurrency…",7,null],[13,"OutOfRange","","The operation was attempted past the valid range. E.g.,…",7,null],[13,"Unimplemented","","The operation is not implemented or is not…",7,null],[13,"Internal","","Internal errors. This means that some invariants expected…",7,null],[13,"Unavailable","","The service is currently unavailable. This is most likely…",7,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",7,null],[3,"GrpcRequest","","",null,null],[12,"method_name","","",8,null],[12,"req_msg","","The body of the request. Usually a serialized protobuf…",8,null],[12,"last","","",8,null],[3,"GrpcResponse","","",null,null],[12,"rsp_msg","","The body of the response. Usually a serialized protobuf…",9,null],[12,"status","","",9,null],[12,"last","","The last field indicates that this is definitely the final…",9,null],[3,"ChannelResponseWriter","","Channel-holding object that encapsulates response messages…",null,null],[4,"WriteMode","","Indicate whether a write method should leave the current…",null,null],[13,"KeepOpen","","",10,null],[13,"Close","","",10,null],[4,"ServerMethod","","Enum with variants for all combinations of {request,…",null,null],[13,"UnaryUnary","","",11,null],[13,"UnaryStream","","",11,null],[13,"StreamUnary","","",11,null],[13,"StreamStream","","",11,null],[5,"build_status","","Helper to create a gRPC status object.",null,[[["code",4]],["status",3]]],[5,"decap_response","","Extract a protocol buffer message from a GrpcResponse…",null,[[["grpcresponse",3]],["result",6]]],[5,"invoke_grpc_method_stream","","Helper to inject a (single) gRPC request message via a…",null,[[["sender",3]],[["result",6],["receiver",3]]]],[5,"invoke_grpc_method","","Helper to inject a (single) gRPC request message via a…",null,[[["sender",3]],["result",6]]],[0,"client","","",null,null],[5,"init","oak::grpc::client","Initializes a gRPC client pseudo-Node connecting to the…",null,[[],[["result",4],["sender",3],["oakstatus",4]]]],[0,"server","oak::grpc","Functionality to help Oak Nodes create gRPC server…",null,null],[5,"init","oak::grpc::server","Initializes a gRPC server pseudo-Node listening on the…",null,[[],[["oakstatus",4],["result",4],["receiver",3]]]],[5,"init_with_sender","","Initializes a gRPC server pseudo-Node listening on the…",null,[[["sender",3],["invocation",6]],[["oakstatus",4],["result",4]]]],[6,"Result","oak::grpc","Result type that uses a `Status` type for error values.",null,null],[6,"Invocation","","",null,null],[8,"ServerNode","","Trait for Oak Nodes that act as a gRPC services.",null,null],[10,"invoke","","Process a single gRPC method invocation.",12,[[["channelresponsewriter",3]]]],[8,"Invocable","","Trait implemented by all server method variants, applied…",null,null],[10,"invoke","","Generic function that handles request deserialization and…",13,[[["channelresponsewriter",3]]]],[11,"new","","",14,[[["grpcresponse",3],["sender",3]]]],[11,"handle","","Retrieve the Oak handle underlying the writer object.",14,[[],["writehandle",3]]],[11,"write","","Write out a gRPC response and optionally close out the…",14,[[["writemode",4]],[["result",4],["oakerror",4]]]],[11,"write_empty","","Write an empty gRPC response and optionally close out the…",14,[[["writemode",4]],[["result",4],["oakerror",4]]]],[11,"close","","Close out the gRPC method invocation with the given final…",14,[[["result",6]],[["result",4],["oakerror",4]]]],[0,"handle","oak","Utilities for visiting, extract and injecting handles.",null,null],[5,"extract_handles","oak::handle","Return all handles in `T`.",null,[[],["vec",3]]],[5,"inject_handles","","Inject handles into a message.",null,[[],[["result",4],["oakerror",4]]]],[8,"HandleVisit","","Visit all handles present in a type.",null,null],[10,"fold","","Invokes the provided closure on every handle contained in…",15,[[]]],[24,"HandleVisit","","Automatically derives the `HandleVisit` trait for structs…",null,null],[3,"Receiver","","Receiver handle for an Oak channel. This type is sent over…",null,null],[12,"id","","",16,null],[3,"Sender","","Sender handle for an Oak channel. This type is sent over…",null,null],[12,"id","","",17,null],[5,"is_valid","","Check this handle is valid.",null,[[["handle",6]]]],[5,"invalid","","Returns an intentionally invalid handle.",null,[[],["handle",6]]],[0,"http","oak","Functionality to help Oak Nodes create HTTP server…",null,null],[3,"HeaderMap","oak::http","Wrapper around a HashMap representing the headers in…",null,null],[12,"headers","","",18,null],[3,"HttpRequest","","Protocol buffer encoding representing an HTTP request.",null,null],[12,"uri","","The URI (including scheme and authority) to which the…",19,null],[12,"method","","The HTTP request method used.",19,null],[12,"body","","The body of the request.",19,null],[12,"headers","","The HTTP request headers.",19,null],[3,"HttpResponse","","Protocol buffer encoding representing an HTTP response.",null,null],[12,"body","","The body of the response.",20,null],[12,"status","","The HTTP status code.",20,null],[12,"headers","","The HTTP response headers.",20,null],[5,"init","","Initializes an HTTP server pseudo-Node listening on the…",null,[[],[["result",4],["receiver",3],["oakstatus",4]]]],[5,"init_with_sender","","Initializes an HTTP server pseudo-Node listening on the…",null,[[["invocation",6],["sender",3]],[["oakstatus",4],["result",4]]]],[6,"Invocation","","",null,null],[11,"receive","","",21,[[],[["request",3],["result",4],["oakerror",4]]]],[11,"send","","",21,[[["response",3]],[["result",4],["oakerror",4]]]],[11,"close_channels","","",21,[[]]],[0,"io","oak","Wrappers for Oak SDK types to allow their use with…",null,null],[8,"Decodable","oak::io","A trait for objects that can be decoded from bytes +…",null,null],[10,"decode","","",22,[[["message",3]],[["oakerror",4],["result",4]]]],[8,"Encodable","","A trait for objects that can be encoded as bytes + handles.",null,null],[10,"encode","","",23,[[],[["oakerror",4],["result",4],["message",3]]]],[3,"Message","","A simple holder for bytes + handles, using internally…",null,null],[12,"bytes","","",24,null],[12,"handles","","",24,null],[3,"Receiver","","Wrapper for a handle to the read half of a channel,…",null,null],[12,"handle","","",25,null],[3,"Sender","","Wrapper for a handle to the send half of a channel,…",null,null],[12,"handle","","",26,null],[5,"channel_create","","Creates a new channel for transmission of [`Encodable`]…",null,[[["label",3]],[["result",4],["oakstatus",4]]]],[5,"channel_create_with_downgrade","","Uses the current node\'s label-downgrading privilege to…",null,[[["label",3]],[["result",4],["oakstatus",4]]]],[5,"node_create","","Creates a node and corresponding inbound channel of the…",null,[[["nodeconfiguration",3],["label",3]],[["sender",3],["oakstatus",4],["result",4]]]],[5,"node_create_with_downgrade","","Uses the current node\'s label-downgrading privilege to…",null,[[["nodeconfiguration",3],["label",3]],[["sender",3],["oakstatus",4],["result",4]]]],[5,"entrypoint_node_create","","Creates a node and corresponding inbound channel of the…",null,[[["encodable",8],["decodable",8],["label",3]],[["sender",3],["result",4],["oakerror",4]]]],[5,"forward_invocation","","Sends [`crate::grpc::Invocation`] (containing…",null,[[["invocation",6],["sender",3]],["result",6]]],[5,"error_from_nonok_status","","Map a non-OK [`OakStatus`] value to the nearest available…",null,[[["oakstatus",4]],["error",3]]],[8,"ReceiverExt","","SDK-specific functionality provided by a receiver.",null,null],[10,"close","","Closes the underlying channel used by the receiver.",27,[[],[["oakstatus",4],["result",4]]]],[10,"receive","","Attempts to wait for a value on the receiver, blocking if…",27,[[],[["result",4],["oakerror",4]]]],[10,"try_receive","","Attempts to read a value from the receiver, without…",27,[[],[["result",4],["oakerror",4]]]],[10,"label","","Retrieves the label associated with the underlying channel.",27,[[],[["result",4],["label",3],["oakerror",4]]]],[10,"wait","","Waits for a value to be available from the receiver.",27,[[],[["oakstatus",4],["channelreadstatus",4],["result",4]]]],[10,"iter","","Consumes the receiver and returns an iterator that will…",27,[[],["receiveriterator",3]]],[8,"SenderExt","","Trait for context-dependent functionality on a `Sender`.",null,null],[10,"close","","Closes the underlying channel used by the sender.",28,[[],[["oakstatus",4],["result",4]]]],[10,"send","","Attempts to send a value on the sender.",28,[[],[["result",4],["oakerror",4]]]],[10,"send_with_downgrade","","The same as `send`, but also applies the current Node\'s…",28,[[],[["result",4],["oakerror",4]]]],[10,"label","","Retrieves the label associated with the underlying channel.",28,[[],[["result",4],["label",3],["oakerror",4]]]],[0,"logger","oak","A logger that sends output to an Oak logging channel, for…",null,null],[5,"init","oak::logger","Initialize Node-wide logging via a channel to a logging…",null,[[["sender",3],["logmessage",3],["level",4]],[["result",4],["setloggererror",3]]]],[5,"create","","",null,[[],[["result",4],["sender",3],["oakstatus",4]]]],[0,"node_config","oak","Helper methods for creating common [`NodeConfiguration`]…",null,null],[5,"grpc_client","oak::node_config","",null,[[],["nodeconfiguration",3]]],[5,"grpc_server","","",null,[[],["nodeconfiguration",3]]],[5,"http_server","","",null,[[],["nodeconfiguration",3]]],[5,"wasm","","",null,[[],["nodeconfiguration",3]]],[5,"log","","",null,[[],["nodeconfiguration",3]]],[0,"rand","oak","Functionality to allow use of the rand crate in Oak.",null,null],[3,"OakRng","oak::rand","",null,null],[0,"roughtime","oak","Helper library for accessing the Oak Roughtime service.",null,null],[3,"Roughtime","oak::roughtime","Local representation of the connection to an external…",null,null],[11,"new","","Creates a [`Roughtime`] instance using the given…",29,[[["roughtimeclientconfiguration",3]],[["roughtime",3],["option",4]]]],[11,"get_roughtime","","Get the current Roughtime value as a Duration since UNIX…",29,[[],[["result",6],["duration",3]]]],[0,"storage","oak","Helper library for accessing Oak storage services.",null,null],[3,"Storage","oak::storage","Local representation of the connection to an external…",null,null],[11,"new","","Creates a [`Storage`] instance using the given…",30,[[["storageproxyconfiguration",3]],[["storage",3],["option",4]]]],[11,"read","","Read the value associated with the given `name` from the…",30,[[],[["vec",3],["result",6]]]],[11,"write","","Set the value associated with the given `name` from the…",30,[[],["result",6]]],[11,"delete","","Delete the value associated with the given `name` from the…",30,[[],["result",6]]],[0,"proto","oak","Auto-generated code derived from protocol buffer…",null,null],[0,"oak","oak::proto","",null,null],[0,"application","oak::proto::oak","",null,null],[3,"ApplicationConfiguration","oak::proto::oak::application","An ApplicationConfiguration represents a unit of…",null,null],[12,"wasm_modules","","Map from Wasm module names to their bytecode representation.",31,null],[12,"initial_node_configuration","","Indication of what configuration the initial Node should…",31,null],[3,"NodeConfiguration","","NodeConfiguration indicates the configuration of a created…",null,null],[12,"config_type","","",32,null],[0,"node_configuration","","Nested message and enum types in `NodeConfiguration`.",null,null],[4,"ConfigType","oak::proto::oak::application::node_configuration","",null,null],[13,"WasmConfig","","",33,null],[13,"LogConfig","","",33,null],[13,"StorageConfig","","",33,null],[13,"GrpcServerConfig","","",33,null],[13,"GrpcClientConfig","","",33,null],[13,"RoughtimeClientConfig","","",33,null],[13,"HttpServerConfig","","",33,null],[13,"HttpClientConfig","","",33,null],[3,"WebAssemblyConfiguration","oak::proto::oak::application","WebAssemblyConfiguration describes the configuration of a…",null,null],[12,"wasm_module_name","","The name of one of the entries in the…",34,null],[12,"wasm_entrypoint_name","","The name of an exported WebAssembly function to invoke as…",34,null],[3,"LogConfiguration","","LogConfiguration describes the configuration of a logging…",null,null],[3,"StorageProxyConfiguration","","StorageProxyConfiguration describes the configuration of a…",null,null],[12,"address","","The address of the external storage provider.",35,null],[3,"GrpcServerConfiguration","","GrpcServerConfiguration describes the configuration of a…",null,null],[12,"address","","The endpoint address for the gRPC server to listen on.…",36,null],[3,"GrpcClientConfiguration","","GrpcClientConfiguration describes the configuration of a…",null,null],[12,"uri","","The URI component of a gRPC server endpoint. Must contain…",37,null],[3,"RoughtimeClientConfiguration","","RoughtimeClientConfiguration describes the configuration…",null,null],[12,"servers","","The collection of Roughtime servers to query. A default…",38,null],[12,"min_overlapping_intervals","","Connection parameters; default values will be used if any…",38,null],[12,"timeout_seconds","","",38,null],[12,"server_retries","","",38,null],[12,"max_radius_microseconds","","",38,null],[3,"HttpServerConfiguration","","HttpServerConfiguration describes the configuration of an…",null,null],[12,"address","","The endpoint address for the HTTP server to listen on.…",39,null],[3,"HttpClientConfiguration","","HttpClientConfiguration describes the configuration of an…",null,null],[12,"authority","","The authority supported by this client. The authority must…",40,null],[3,"RoughtimeServer","","Information to identify a particular Roughtime server.…",null,null],[12,"name","","",41,null],[12,"host","","",41,null],[12,"port","","",41,null],[12,"public_key_base64","","",41,null],[3,"ConfigMap","","A serialized list of key-value pairs that are specified as…",null,null],[12,"items","","",42,null],[0,"label","oak::proto::oak","",null,null],[3,"Label","oak::proto::oak::label","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",0,null],[12,"integrity_tags","","",0,null],[3,"Tag","","Tag represents a category of confidentiality or integrity…",null,null],[12,"tag","","",43,null],[0,"tag","","Nested message and enum types in `Tag`.",null,null],[4,"Tag","oak::proto::oak::label::tag","",null,null],[13,"GrpcTag","","",44,null],[13,"WebAssemblyModuleTag","","",44,null],[13,"WebAssemblyModuleSignatureTag","","",44,null],[13,"TlsEndpointTag","","",44,null],[13,"PublicKeyIdentityTag","","",44,null],[13,"TopTag","","",44,null],[3,"GrpcTag","oak::proto::oak::label","Policies related to gRPC communication, referring to the…",null,null],[12,"authorization_bearer_token_hmac","","In order for a client to be authorized to fulfill a tag…",45,null],[3,"WebAssemblyModuleTag","","Policies related to modules, referring to the native…",null,null],[12,"web_assembly_module_hash_sha_256","","The attestation for a single WebAssembly module, a SHA256…",46,null],[3,"WebAssemblyModuleSignatureTag","","Policies related to modules, referring to the signature of…",null,null],[12,"public_key","","Public key counterpart of the private key used to sign…",47,null],[3,"TlsEndpointTag","","Policies related to HTTPS communication.",null,null],[12,"authority","","The TLS authority (host:port) of the remote endpoint,…",48,null],[3,"PublicKeyIdentityTag","","Policies related to identities, specified using a…",null,null],[12,"public_key","","Public key counterpart of the private key that is used to…",49,null],[3,"Top","","Message representing top element of the principal lattice.…",null,null],[0,"invocation","oak::proto::oak","",null,null],[3,"GrpcInvocation","oak::proto::oak::invocation","A gRPC invocation, consisting of exactly two channels: one…",null,null],[12,"receiver","","",50,null],[12,"sender","","",50,null],[3,"GrpcInvocationSender","","A wrapper for sending a [`GrpcInvocation`] over a channel.",null,null],[12,"sender","","",51,null],[3,"GrpcInvocationReceiver","","A wrapper for receiving a [`GrpcInvocation`] from a channel.",null,null],[12,"receiver","","",52,null],[3,"HttpInvocation","","An HTTP invocation, consisting of exactly two channels:…",null,null],[12,"receiver","","",53,null],[12,"sender","","",53,null],[3,"HttpInvocationSender","","A wrapper for sending an [`HttpInvocation`] over a channel.",null,null],[12,"sender","","",54,null],[0,"storage","oak::proto::oak","",null,null],[3,"StorageItem","oak::proto::oak::storage","",null,null],[12,"name","","",55,null],[12,"value","","",55,null],[12,"label","","",55,null],[3,"StorageChannelReadRequest","","",null,null],[12,"storage_name","","",56,null],[12,"transaction_id","","",56,null],[12,"item","","",56,null],[3,"StorageChannelReadResponse","","",null,null],[12,"item","","",57,null],[3,"StorageChannelWriteRequest","","",null,null],[12,"storage_name","","",58,null],[12,"transaction_id","","",58,null],[12,"item","","",58,null],[3,"StorageChannelWriteResponse","","",null,null],[3,"StorageChannelDeleteRequest","","",null,null],[12,"storage_name","","",59,null],[12,"transaction_id","","",59,null],[12,"item","","",59,null],[3,"StorageChannelDeleteResponse","","",null,null],[3,"StorageChannelBeginRequest","","",null,null],[12,"storage_name","","",60,null],[3,"StorageChannelBeginResponse","","",null,null],[12,"transaction_id","","",61,null],[3,"StorageChannelCommitRequest","","",null,null],[12,"storage_name","","",62,null],[12,"transaction_id","","",62,null],[3,"StorageChannelCommitResponse","","",null,null],[3,"StorageChannelRollbackRequest","","",null,null],[12,"storage_name","","",63,null],[12,"storage_id","","",63,null],[12,"transaction_id","","",63,null],[3,"StorageChannelRollbackResponse","","",null,null],[3,"StorageServiceDispatcher","","",null,null],[3,"StorageServiceClient","","",null,null],[12,"0","","",64,null],[8,"StorageService","","",null,null],[10,"read","","",65,[[["storagechannelreadrequest",3]],[["result",6],["storagechannelreadresponse",3]]]],[10,"write","","",65,[[["storagechannelwriterequest",3]],[["result",6],["storagechannelwriteresponse",3]]]],[10,"delete","","",65,[[["storagechanneldeleterequest",3]],[["result",6],["storagechanneldeleteresponse",3]]]],[10,"begin","","",65,[[["storagechannelbeginrequest",3]],[["storagechannelbeginresponse",3],["result",6]]]],[10,"commit","","",65,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelcommitresponse",3]]]],[10,"rollback","","",65,[[["storagechannelrollbackrequest",3]],[["storagechannelrollbackresponse",3],["result",6]]]],[11,"server_method","","",66,[[],[["option",4],["invocable",8]]]],[11,"read","","",64,[[["storagechannelreadrequest",3]],[["result",6],["storagechannelreadresponse",3]]]],[11,"write","","",64,[[["storagechannelwriterequest",3]],[["result",6],["storagechannelwriteresponse",3]]]],[11,"delete","","",64,[[["storagechanneldeleterequest",3]],[["result",6],["storagechanneldeleteresponse",3]]]],[11,"begin","","",64,[[["storagechannelbeginrequest",3]],[["storagechannelbeginresponse",3],["result",6]]]],[11,"commit","","",64,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelcommitresponse",3]]]],[11,"rollback","","",64,[[["storagechannelrollbackrequest",3]],[["storagechannelrollbackresponse",3],["result",6]]]],[0,"roughtime","oak::proto::oak","",null,null],[3,"GetRoughtimeRequest","oak::proto::oak::roughtime","",null,null],[3,"Roughtime","","",null,null],[12,"roughtime_usec","","Time is UTC and is given as microseconds since the UNIX…",67,null],[3,"RoughtimeServiceDispatcher","","",null,null],[3,"RoughtimeServiceClient","","",null,null],[12,"0","","",68,null],[8,"RoughtimeService","","",null,null],[10,"get_roughtime","","",69,[[["getroughtimerequest",3]],[["result",6],["roughtime",3]]]],[11,"server_method","","",70,[[],[["option",4],["invocable",8]]]],[11,"get_roughtime","","",68,[[["getroughtimerequest",3]],[["result",6],["roughtime",3]]]],[8,"CommandHandler","oak","Trait implemented by Oak Nodes (or parts thereof) that…",null,null],[16,"Command","","Type of the command that is handled by this instance.",71,null],[10,"handle_command","","Handles a single command instance.",71,[[],["result",6]]],[8,"WasmEntrypoint","","Trait implemented by structs that correspond to entrypoint…",null,null],[18,"ENTRYPOINT_NAME","","Name of the WebAssembly exported function that corresponds…",72,null],[16,"Message","","Type of message that the Node accepts on its inbound…",72,null],[8,"WithInit","","Trait implemented by structs that require an…",null,null],[16,"Init","","",73,null],[10,"create","","Creates an instance of this struct based on the provided…",73,[[]]],[14,"impl_dispatcher","","Implements the [`ServerNode`] trait for the specified type…",null,null],[14,"entrypoint","","Register a new Node entrypoint.",null,null],[14,"entrypoint_command_handler","","Similar to [`entrypoint`], but offers a less verbose API…",null,null],[14,"entrypoint_command_handler_init","","Similar to [`entrypoint_command_handler`], but for nodes…",null,null],[11,"from","oak::proto::oak::label","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"decode","","",0,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",0,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","oak::grpc","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"decode","","",8,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",8,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"decode","","",9,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",9,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","oak::handle","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","oak::http","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"decode","","",19,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",19,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"decode","","",20,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",20,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak::io","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"decode","","",25,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",25,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"decode","","",26,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",26,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak::rand","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","oak::roughtime","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","oak::storage","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","oak::proto::oak::application","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","oak::proto::oak::application::node_configuration","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","oak::proto::oak::application","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"decode","","",42,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",42,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak::proto::oak::label","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","oak::proto::oak::label::tag","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","oak::proto::oak::label","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","oak::proto::oak::invocation","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"decode","","",50,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",50,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"decode","","",51,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",51,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"decode","","",52,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",52,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"decode","","",53,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",53,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"decode","","",54,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",54,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak::proto::oak::storage","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"decode","","",55,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",55,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"decode","","",56,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",56,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"decode","","",57,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",57,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"decode","","",58,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",58,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"decode","","",77,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",77,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"decode","","",59,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",59,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"decode","","",78,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",78,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"decode","","",60,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",60,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"decode","","",61,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",61,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"decode","","",62,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",62,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"decode","","",79,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",79,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"decode","","",63,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",63,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"decode","","",80,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",80,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","oak::proto::oak::roughtime","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"decode","","",81,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",81,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"decode","","",67,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",67,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"hash","oak","",2,[[]]],[11,"hash","oak::proto::oak::label","",47,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",46,[[]]],[11,"hash","oak","",1,[[]]],[11,"hash","oak::proto::oak::label","",45,[[]]],[11,"hash","oak::proto::oak::label::tag","",44,[[]]],[11,"hash","oak::proto::oak::label","",43,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"cmp","oak","",1,[[["channelreadstatus",4]],["ordering",4]]],[11,"cmp","","",2,[[["oakstatus",4]],["ordering",4]]],[11,"eq","oak::proto::oak::application","",42,[[["configmap",3]]]],[11,"ne","","",42,[[["configmap",3]]]],[11,"eq","oak::proto::oak::label","",48,[[["tlsendpointtag",3]]]],[11,"ne","","",48,[[["tlsendpointtag",3]]]],[11,"eq","oak::proto::oak::application","",37,[[["grpcclientconfiguration",3]]]],[11,"ne","","",37,[[["grpcclientconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",43,[[["tag",3]]]],[11,"ne","","",43,[[["tag",3]]]],[11,"eq","","",76,[[["top",3]]]],[11,"eq","oak::proto::oak::application::node_configuration","",33,[[["configtype",4]]]],[11,"ne","","",33,[[["configtype",4]]]],[11,"eq","oak::proto::oak::application","",40,[[["httpclientconfiguration",3]]]],[11,"ne","","",40,[[["httpclientconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",46,[[["webassemblymoduletag",3]]]],[11,"ne","","",46,[[["webassemblymoduletag",3]]]],[11,"eq","","",47,[[["webassemblymodulesignaturetag",3]]]],[11,"ne","","",47,[[["webassemblymodulesignaturetag",3]]]],[11,"eq","oak::proto::oak::application","",38,[[["roughtimeclientconfiguration",3]]]],[11,"ne","","",38,[[["roughtimeclientconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",49,[[["publickeyidentitytag",3]]]],[11,"ne","","",49,[[["publickeyidentitytag",3]]]],[11,"eq","oak::proto::oak::application","",35,[[["storageproxyconfiguration",3]]]],[11,"ne","","",35,[[["storageproxyconfiguration",3]]]],[11,"eq","","",36,[[["grpcserverconfiguration",3]]]],[11,"ne","","",36,[[["grpcserverconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",45,[[["grpctag",3]]]],[11,"ne","","",45,[[["grpctag",3]]]],[11,"eq","oak::proto::oak::application","",34,[[["webassemblyconfiguration",3]]]],[11,"ne","","",34,[[["webassemblyconfiguration",3]]]],[11,"eq","","",31,[[["applicationconfiguration",3]]]],[11,"ne","","",31,[[["applicationconfiguration",3]]]],[11,"eq","","",32,[[["nodeconfiguration",3]]]],[11,"ne","","",32,[[["nodeconfiguration",3]]]],[11,"eq","oak::proto::oak::label::tag","",44,[[["tag",4]]]],[11,"ne","","",44,[[["tag",4]]]],[11,"eq","oak::proto::oak::label","",0,[[["label",3]]]],[11,"ne","","",0,[[["label",3]]]],[11,"eq","oak::proto::oak::application","",75,[[["logconfiguration",3]]]],[11,"eq","","",39,[[["httpserverconfiguration",3]]]],[11,"ne","","",39,[[["httpserverconfiguration",3]]]],[11,"eq","oak","",1,[[["channelreadstatus",4]]]],[11,"eq","","",2,[[["oakstatus",4]]]],[11,"eq","oak::proto::oak::application","",41,[[["roughtimeserver",3]]]],[11,"ne","","",41,[[["roughtimeserver",3]]]],[11,"serialize","oak::proto::oak::label","",46,[[],["result",4]]],[11,"serialize","","",76,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","oak::proto::oak::label::tag","",44,[[],["result",4]]],[11,"serialize","oak::proto::oak::label","",48,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"partial_cmp","oak","",2,[[["oakstatus",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["channelreadstatus",4]],[["option",4],["ordering",4]]]],[11,"encode_raw","oak::proto::oak::application","",75,[[]]],[11,"merge_field","","",75,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",75,[[]]],[11,"clear","","",75,[[]]],[11,"encode_raw","","",34,[[]]],[11,"merge_field","","",34,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",34,[[]]],[11,"clear","","",34,[[]]],[11,"encode_raw","","",40,[[]]],[11,"merge_field","","",40,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",40,[[]]],[11,"clear","","",40,[[]]],[11,"encode_raw","oak::proto::oak::label","",49,[[]]],[11,"merge_field","","",49,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",49,[[]]],[11,"clear","","",49,[[]]],[11,"encode_raw","oak::proto::oak::application","",42,[[]]],[11,"merge_field","","",42,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",42,[[]]],[11,"clear","","",42,[[]]],[11,"encode_raw","","",31,[[]]],[11,"merge_field","","",31,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",31,[[]]],[11,"clear","","",31,[[]]],[11,"encode_raw","oak::proto::oak::label","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","","",47,[[]]],[11,"merge_field","","",47,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",47,[[]]],[11,"clear","","",47,[[]]],[11,"encode_raw","oak::proto::oak::application","",35,[[]]],[11,"merge_field","","",35,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",35,[[]]],[11,"clear","","",35,[[]]],[11,"encode_raw","","",32,[[]]],[11,"merge_field","","",32,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",32,[[]]],[11,"clear","","",32,[[]]],[11,"encode_raw","","",38,[[]]],[11,"merge_field","","",38,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",38,[[]]],[11,"clear","","",38,[[]]],[11,"encode_raw","oak::proto::oak::label","",45,[[]]],[11,"merge_field","","",45,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",45,[[]]],[11,"clear","","",45,[[]]],[11,"encode_raw","","",43,[[]]],[11,"merge_field","","",43,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",43,[[]]],[11,"clear","","",43,[[]]],[11,"encode_raw","oak::proto::oak::application","",36,[[]]],[11,"merge_field","","",36,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",36,[[]]],[11,"clear","","",36,[[]]],[11,"encode_raw","","",41,[[]]],[11,"merge_field","","",41,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",41,[[]]],[11,"clear","","",41,[[]]],[11,"encode_raw","oak::proto::oak::label","",48,[[]]],[11,"merge_field","","",48,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",48,[[]]],[11,"clear","","",48,[[]]],[11,"encode_raw","oak::proto::oak::application","",37,[[]]],[11,"merge_field","","",37,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",37,[[]]],[11,"clear","","",37,[[]]],[11,"encode_raw","oak::proto::oak::label","",76,[[]]],[11,"merge_field","","",76,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",76,[[]]],[11,"clear","","",76,[[]]],[11,"encode_raw","oak::proto::oak::application","",39,[[]]],[11,"merge_field","","",39,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",39,[[]]],[11,"clear","","",39,[[]]],[11,"encode_raw","oak::proto::oak::label","",46,[[]]],[11,"merge_field","","",46,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",46,[[]]],[11,"clear","","",46,[[]]],[11,"clone","oak","",1,[[],["channelreadstatus",4]]],[11,"clone","oak::proto::oak::label","",76,[[],["top",3]]],[11,"clone","","",46,[[],["webassemblymoduletag",3]]],[11,"clone","oak::proto::oak::application","",34,[[],["webassemblyconfiguration",3]]],[11,"clone","oak::proto::oak::label","",0,[[],["label",3]]],[11,"clone","oak::proto::oak::application","",37,[[],["grpcclientconfiguration",3]]],[11,"clone","","",41,[[],["roughtimeserver",3]]],[11,"clone","","",38,[[],["roughtimeclientconfiguration",3]]],[11,"clone","oak::proto::oak::label","",48,[[],["tlsendpointtag",3]]],[11,"clone","","",49,[[],["publickeyidentitytag",3]]],[11,"clone","oak::proto::oak::application::node_configuration","",33,[[],["configtype",4]]],[11,"clone","oak","",2,[[],["oakstatus",4]]],[11,"clone","oak::proto::oak::application","",36,[[],["grpcserverconfiguration",3]]],[11,"clone","","",32,[[],["nodeconfiguration",3]]],[11,"clone","","",42,[[],["configmap",3]]],[11,"clone","oak::proto::oak::label","",47,[[],["webassemblymodulesignaturetag",3]]],[11,"clone","","",45,[[],["grpctag",3]]],[11,"clone","oak::proto::oak::label::tag","",44,[[],["tag",4]]],[11,"clone","oak::proto::oak::application","",31,[[],["applicationconfiguration",3]]],[11,"clone","","",40,[[],["httpclientconfiguration",3]]],[11,"clone","","",39,[[],["httpserverconfiguration",3]]],[11,"clone","","",35,[[],["storageproxyconfiguration",3]]],[11,"clone","","",75,[[],["logconfiguration",3]]],[11,"clone","oak::proto::oak::label","",43,[[],["tag",3]]],[11,"default","","",45,[[],["grpctag",3]]],[11,"default","oak::proto::oak::application","",36,[[],["grpcserverconfiguration",3]]],[11,"default","oak","",1,[[],["channelreadstatus",4]]],[11,"default","oak::proto::oak::application","",35,[[],["storageproxyconfiguration",3]]],[11,"default","oak::proto::oak::label","",48,[[],["tlsendpointtag",3]]],[11,"default","oak::proto::oak::application","",32,[[],["nodeconfiguration",3]]],[11,"default","","",37,[[],["grpcclientconfiguration",3]]],[11,"default","oak","",2,[[],["oakstatus",4]]],[11,"default","oak::proto::oak::application","",38,[[],["roughtimeclientconfiguration",3]]],[11,"default","oak::proto::oak::label","",47,[[],["webassemblymodulesignaturetag",3]]],[11,"default","oak::proto::oak::application","",31,[[],["applicationconfiguration",3]]],[11,"default","oak::proto::oak::label","",49,[[],["publickeyidentitytag",3]]],[11,"default","oak::proto::oak::application","",41,[[],["roughtimeserver",3]]],[11,"default","","",42,[[],["configmap",3]]],[11,"default","oak::proto::oak::label","",43,[[],["tag",3]]],[11,"default","","",76,[[],["top",3]]],[11,"default","","",46,[[],["webassemblymoduletag",3]]],[11,"default","","",0,[[],["label",3]]],[11,"default","oak::proto::oak::application","",34,[[],["webassemblyconfiguration",3]]],[11,"default","","",75,[[],["logconfiguration",3]]],[11,"default","","",40,[[],["httpclientconfiguration",3]]],[11,"default","","",39,[[],["httpserverconfiguration",3]]],[11,"deserialize","oak::proto::oak::label","",49,[[],[["result",4],["publickeyidentitytag",3]]]],[11,"deserialize","","",48,[[],[["tlsendpointtag",3],["result",4]]]],[11,"deserialize","","",45,[[],[["grpctag",3],["result",4]]]],[11,"deserialize","","",0,[[],[["label",3],["result",4]]]],[11,"deserialize","","",47,[[],[["result",4],["webassemblymodulesignaturetag",3]]]],[11,"deserialize","","",76,[[],[["result",4],["top",3]]]],[11,"deserialize","oak::proto::oak::label::tag","",44,[[],[["tag",4],["result",4]]]],[11,"deserialize","oak::proto::oak::label","",43,[[],[["tag",3],["result",4]]]],[11,"deserialize","","",46,[[],[["result",4],["webassemblymoduletag",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label::tag","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application::node_configuration","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","oak::io","",25,[[["readhandle",3]],["receiver",3]]],[11,"from","oak","",5,[[["encodeerror",3]],["oakerror",4]]],[11,"from","","",5,[[["error",3]],["oakerror",4]]],[11,"from","","",5,[[["decodeerror",3]],["oakerror",4]]],[11,"from","","",5,[[["oakstatus",4]],["oakerror",4]]],[11,"from","","",4,[[],["writehandle",3]]],[11,"from","","",3,[[],["readhandle",3]]],[11,"eq","oak::handle","",17,[[["sender",3]]]],[11,"ne","","",17,[[["sender",3]]]],[11,"eq","oak","",3,[[["readhandle",3]]]],[11,"ne","","",3,[[["readhandle",3]]]],[11,"eq","oak::io","",26,[[["sender",3]]]],[11,"ne","","",26,[[["sender",3]]]],[11,"eq","oak::handle","",16,[[["receiver",3]]]],[11,"ne","","",16,[[["receiver",3]]]],[11,"eq","oak::io","",25,[[["receiver",3]]]],[11,"ne","","",25,[[["receiver",3]]]],[11,"eq","oak","",4,[[["writehandle",3]]]],[11,"ne","","",4,[[["writehandle",3]]]],[11,"eq","oak::io","",24,[[["message",3]]]],[11,"ne","","",24,[[["message",3]]]],[11,"clone","oak::handle","",17,[[],["sender",3]]],[11,"clone","oak","",3,[[],["readhandle",3]]],[11,"clone","","",4,[[],["writehandle",3]]],[11,"clone","oak::io","",24,[[],["message",3]]],[11,"clone","","",25,[[],["receiver",3]]],[11,"clone","","",26,[[],["sender",3]]],[11,"clone","oak::handle","",16,[[],["receiver",3]]],[11,"fold","oak::io","",25,[[]]],[11,"fold","oak::proto::oak::application","",42,[[]]],[11,"fold","oak::io","",26,[[]]],[11,"fold","oak::proto::oak::label","",0,[[]]],[11,"encoded_len","oak::io","",25,[[]]],[11,"clear","","",25,[[]]],[11,"encode_raw","","",25,[[]]],[11,"merge_field","","",25,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encode_raw","oak::handle","",17,[[]]],[11,"merge_field","","",17,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",17,[[]]],[11,"clear","","",17,[[]]],[11,"encode_raw","","",16,[[]]],[11,"merge_field","","",16,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",16,[[]]],[11,"clear","","",16,[[]]],[11,"encoded_len","oak::io","",26,[[]]],[11,"clear","","",26,[[]]],[11,"encode_raw","","",26,[[]]],[11,"merge_field","","",26,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"default","","",26,[[],["sender",3]]],[11,"default","oak::handle","",17,[[],["sender",3]]],[11,"default","","",16,[[],["receiver",3]]],[11,"default","oak::io","",25,[[],["receiver",3]]],[11,"fmt","oak::handle","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::io","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::io","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::handle","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"into_iter","oak::http","Convert into an iterator over (http::header::HeaderName,…",18,[[]]],[11,"from","","",18,[[["headervalue",3],["headermap",3]],["headermap",3]]],[11,"from","","",20,[[["response",3]],["httpresponse",3]]],[11,"hash","oak::grpc","",7,[[]]],[11,"cmp","","",7,[[["code",4]],["ordering",4]]],[11,"eq","oak::http","",20,[[["httpresponse",3]]]],[11,"ne","","",20,[[["httpresponse",3]]]],[11,"eq","oak::grpc","",7,[[["code",4]]]],[11,"eq","","",9,[[["grpcresponse",3]]]],[11,"ne","","",9,[[["grpcresponse",3]]]],[11,"eq","oak::http","",19,[[["httprequest",3]]]],[11,"ne","","",19,[[["httprequest",3]]]],[11,"eq","oak::grpc","",6,[[["status",3]]]],[11,"ne","","",6,[[["status",3]]]],[11,"eq","oak::http","",18,[[["headermap",3]]]],[11,"ne","","",18,[[["headermap",3]]]],[11,"eq","oak::grpc","",8,[[["grpcrequest",3]]]],[11,"ne","","",8,[[["grpcrequest",3]]]],[11,"partial_cmp","","",7,[[["code",4]],[["option",4],["ordering",4]]]],[11,"fold","oak::http","",20,[[]]],[11,"fold","oak::grpc","",8,[[]]],[11,"fold","","",9,[[]]],[11,"fold","oak::http","",19,[[]]],[11,"clone","oak::grpc","",9,[[],["grpcresponse",3]]],[11,"clone","oak::http","",19,[[],["httprequest",3]]],[11,"clone","oak::grpc","",8,[[],["grpcrequest",3]]],[11,"clone","","",6,[[],["status",3]]],[11,"clone","oak::http","",18,[[],["headermap",3]]],[11,"clone","oak::grpc","",7,[[],["code",4]]],[11,"clone","oak::http","",20,[[],["httpresponse",3]]],[11,"default","oak::grpc","",8,[[],["grpcrequest",3]]],[11,"default","oak::http","",18,[[],["headermap",3]]],[11,"default","","",20,[[],["httpresponse",3]]],[11,"default","oak::grpc","",9,[[],["grpcresponse",3]]],[11,"default","","",7,[[],["code",4]]],[11,"default","","",6,[[],["status",3]]],[11,"default","oak::http","",19,[[],["httprequest",3]]],[11,"fmt","oak::grpc","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::http","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::grpc","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"encode_raw","oak::http","",18,[[]]],[11,"merge_field","","",18,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",18,[[]]],[11,"clear","","",18,[[]]],[11,"encode_raw","oak::grpc","",8,[[]]],[11,"merge_field","","",8,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","oak::http","",19,[[]]],[11,"merge_field","","",19,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",19,[[]]],[11,"clear","","",19,[[]]],[11,"encode_raw","oak::grpc","",9,[[]]],[11,"merge_field","","",9,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"encode_raw","oak::http","",20,[[]]],[11,"merge_field","","",20,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",20,[[]]],[11,"clear","","",20,[[]]],[11,"encode_raw","oak::grpc","",6,[[]]],[11,"merge_field","","",6,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"invoke","","",11,[[["channelresponsewriter",3]]]],[11,"close","oak::io","",25,[[],[["oakstatus",4],["result",4]]]],[11,"receive","","",25,[[],[["result",4],["oakerror",4]]]],[11,"try_receive","","",25,[[],[["result",4],["oakerror",4]]]],[11,"label","","",25,[[],[["result",4],["label",3],["oakerror",4]]]],[11,"wait","","",25,[[],[["oakstatus",4],["channelreadstatus",4],["result",4]]]],[11,"iter","","",25,[[],["receiveriterator",3]]],[11,"close","","",26,[[],[["oakstatus",4],["result",4]]]],[11,"send","","",26,[[],[["result",4],["oakerror",4]]]],[11,"send_with_downgrade","","",26,[[],[["result",4],["oakerror",4]]]],[11,"label","","",26,[[],[["result",4],["label",3],["oakerror",4]]]],[11,"clone","oak::grpc","",10,[[],["writemode",4]]],[11,"clone","oak::rand","",74,[[],["oakrng",3]]],[11,"clone","oak::proto::oak::invocation","",50,[[],["grpcinvocation",3]]],[11,"clone","","",51,[[],["grpcinvocationsender",3]]],[11,"clone","","",52,[[],["grpcinvocationreceiver",3]]],[11,"clone","","",53,[[],["httpinvocation",3]]],[11,"clone","","",54,[[],["httpinvocationsender",3]]],[11,"clone","oak::proto::oak::storage","",55,[[],["storageitem",3]]],[11,"clone","","",56,[[],["storagechannelreadrequest",3]]],[11,"clone","","",57,[[],["storagechannelreadresponse",3]]],[11,"clone","","",58,[[],["storagechannelwriterequest",3]]],[11,"clone","","",77,[[],["storagechannelwriteresponse",3]]],[11,"clone","","",59,[[],["storagechanneldeleterequest",3]]],[11,"clone","","",78,[[],["storagechanneldeleteresponse",3]]],[11,"clone","","",60,[[],["storagechannelbeginrequest",3]]],[11,"clone","","",61,[[],["storagechannelbeginresponse",3]]],[11,"clone","","",62,[[],["storagechannelcommitrequest",3]]],[11,"clone","","",79,[[],["storagechannelcommitresponse",3]]],[11,"clone","","",63,[[],["storagechannelrollbackrequest",3]]],[11,"clone","","",80,[[],["storagechannelrollbackresponse",3]]],[11,"clone","oak::proto::oak::roughtime","",81,[[],["getroughtimerequest",3]]],[11,"clone","","",67,[[],["roughtime",3]]],[11,"default","oak::proto::oak::invocation","",50,[[],["grpcinvocation",3]]],[11,"default","","",51,[[],["grpcinvocationsender",3]]],[11,"default","","",52,[[],["grpcinvocationreceiver",3]]],[11,"default","","",53,[[],["httpinvocation",3]]],[11,"default","","",54,[[],["httpinvocationsender",3]]],[11,"default","oak::proto::oak::storage","",55,[[],["storageitem",3]]],[11,"default","","",56,[[],["storagechannelreadrequest",3]]],[11,"default","","",57,[[],["storagechannelreadresponse",3]]],[11,"default","","",58,[[],["storagechannelwriterequest",3]]],[11,"default","","",77,[[],["storagechannelwriteresponse",3]]],[11,"default","","",59,[[],["storagechanneldeleterequest",3]]],[11,"default","","",78,[[],["storagechanneldeleteresponse",3]]],[11,"default","","",60,[[],["storagechannelbeginrequest",3]]],[11,"default","","",61,[[],["storagechannelbeginresponse",3]]],[11,"default","","",62,[[],["storagechannelcommitrequest",3]]],[11,"default","","",79,[[],["storagechannelcommitresponse",3]]],[11,"default","","",63,[[],["storagechannelrollbackrequest",3]]],[11,"default","","",80,[[],["storagechannelrollbackresponse",3]]],[11,"default","oak::proto::oak::roughtime","",81,[[],["getroughtimerequest",3]]],[11,"default","","",67,[[],["roughtime",3]]],[11,"eq","oak::grpc","",10,[[["writemode",4]]]],[11,"eq","oak::proto::oak::invocation","",50,[[["grpcinvocation",3]]]],[11,"ne","","",50,[[["grpcinvocation",3]]]],[11,"eq","","",51,[[["grpcinvocationsender",3]]]],[11,"ne","","",51,[[["grpcinvocationsender",3]]]],[11,"eq","","",52,[[["grpcinvocationreceiver",3]]]],[11,"ne","","",52,[[["grpcinvocationreceiver",3]]]],[11,"eq","","",53,[[["httpinvocation",3]]]],[11,"ne","","",53,[[["httpinvocation",3]]]],[11,"eq","","",54,[[["httpinvocationsender",3]]]],[11,"ne","","",54,[[["httpinvocationsender",3]]]],[11,"eq","oak::proto::oak::storage","",55,[[["storageitem",3]]]],[11,"ne","","",55,[[["storageitem",3]]]],[11,"eq","","",56,[[["storagechannelreadrequest",3]]]],[11,"ne","","",56,[[["storagechannelreadrequest",3]]]],[11,"eq","","",57,[[["storagechannelreadresponse",3]]]],[11,"ne","","",57,[[["storagechannelreadresponse",3]]]],[11,"eq","","",58,[[["storagechannelwriterequest",3]]]],[11,"ne","","",58,[[["storagechannelwriterequest",3]]]],[11,"eq","","",77,[[["storagechannelwriteresponse",3]]]],[11,"eq","","",59,[[["storagechanneldeleterequest",3]]]],[11,"ne","","",59,[[["storagechanneldeleterequest",3]]]],[11,"eq","","",78,[[["storagechanneldeleteresponse",3]]]],[11,"eq","","",60,[[["storagechannelbeginrequest",3]]]],[11,"ne","","",60,[[["storagechannelbeginrequest",3]]]],[11,"eq","","",61,[[["storagechannelbeginresponse",3]]]],[11,"ne","","",61,[[["storagechannelbeginresponse",3]]]],[11,"eq","","",62,[[["storagechannelcommitrequest",3]]]],[11,"ne","","",62,[[["storagechannelcommitrequest",3]]]],[11,"eq","","",79,[[["storagechannelcommitresponse",3]]]],[11,"eq","","",63,[[["storagechannelrollbackrequest",3]]]],[11,"ne","","",63,[[["storagechannelrollbackrequest",3]]]],[11,"eq","","",80,[[["storagechannelrollbackresponse",3]]]],[11,"eq","oak::proto::oak::roughtime","",81,[[["getroughtimerequest",3]]]],[11,"eq","","",67,[[["roughtime",3]]]],[11,"ne","","",67,[[["roughtime",3]]]],[11,"fmt","oak::grpc","",10,[[["formatter",3]],["result",6]]],[11,"fmt","oak::rand","",74,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::invocation","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::storage","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::roughtime","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"encode_raw","oak::proto::oak::invocation","",50,[[]]],[11,"merge_field","","",50,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",50,[[]]],[11,"clear","","",50,[[]]],[11,"encode_raw","","",51,[[]]],[11,"merge_field","","",51,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",51,[[]]],[11,"clear","","",51,[[]]],[11,"encode_raw","","",52,[[]]],[11,"merge_field","","",52,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",52,[[]]],[11,"clear","","",52,[[]]],[11,"encode_raw","","",53,[[]]],[11,"merge_field","","",53,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",53,[[]]],[11,"clear","","",53,[[]]],[11,"encode_raw","","",54,[[]]],[11,"merge_field","","",54,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",54,[[]]],[11,"clear","","",54,[[]]],[11,"encode_raw","oak::proto::oak::storage","",55,[[]]],[11,"merge_field","","",55,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",55,[[]]],[11,"clear","","",55,[[]]],[11,"encode_raw","","",56,[[]]],[11,"merge_field","","",56,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",56,[[]]],[11,"clear","","",56,[[]]],[11,"encode_raw","","",57,[[]]],[11,"merge_field","","",57,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",57,[[]]],[11,"clear","","",57,[[]]],[11,"encode_raw","","",58,[[]]],[11,"merge_field","","",58,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",58,[[]]],[11,"clear","","",58,[[]]],[11,"encode_raw","","",77,[[]]],[11,"merge_field","","",77,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",77,[[]]],[11,"clear","","",77,[[]]],[11,"encode_raw","","",59,[[]]],[11,"merge_field","","",59,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",59,[[]]],[11,"clear","","",59,[[]]],[11,"encode_raw","","",78,[[]]],[11,"merge_field","","",78,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",78,[[]]],[11,"clear","","",78,[[]]],[11,"encode_raw","","",60,[[]]],[11,"merge_field","","",60,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",60,[[]]],[11,"clear","","",60,[[]]],[11,"encode_raw","","",61,[[]]],[11,"merge_field","","",61,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",61,[[]]],[11,"clear","","",61,[[]]],[11,"encode_raw","","",62,[[]]],[11,"merge_field","","",62,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",62,[[]]],[11,"clear","","",62,[[]]],[11,"encode_raw","","",79,[[]]],[11,"merge_field","","",79,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",79,[[]]],[11,"clear","","",79,[[]]],[11,"encode_raw","","",63,[[]]],[11,"merge_field","","",63,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",63,[[]]],[11,"clear","","",63,[[]]],[11,"encode_raw","","",80,[[]]],[11,"merge_field","","",80,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",80,[[]]],[11,"clear","","",80,[[]]],[11,"encode_raw","oak::proto::oak::roughtime","",81,[[]]],[11,"merge_field","","",81,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",81,[[]]],[11,"clear","","",81,[[]]],[11,"encode_raw","","",67,[[]]],[11,"merge_field","","",67,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",67,[[]]],[11,"clear","","",67,[[]]],[11,"fold","oak::proto::oak::invocation","",50,[[]]],[11,"fold","","",51,[[]]],[11,"fold","","",52,[[]]],[11,"fold","","",53,[[]]],[11,"fold","","",54,[[]]],[11,"fold","oak::proto::oak::storage","",55,[[]]],[11,"fold","","",56,[[]]],[11,"fold","","",57,[[]]],[11,"fold","","",58,[[]]],[11,"fold","","",77,[[]]],[11,"fold","","",59,[[]]],[11,"fold","","",78,[[]]],[11,"fold","","",60,[[]]],[11,"fold","","",61,[[]]],[11,"fold","","",62,[[]]],[11,"fold","","",79,[[]]],[11,"fold","","",63,[[]]],[11,"fold","","",80,[[]]],[11,"fold","oak::proto::oak::roughtime","",81,[[]]],[11,"fold","","",67,[[]]],[11,"next_u32","oak::rand","",74,[[]]],[11,"next_u64","","",74,[[]]],[11,"fill_bytes","","",74,[[]]],[11,"try_fill_bytes","","",74,[[],[["error",3],["result",4]]]],[11,"serialize","oak::proto::oak::label","Convert a label to bytes.",0,[[],["vec",3]]],[11,"deserialize","","Build the label from bytes.",0,[[],[["option",4],["label",3]]]],[11,"public_untrusted","","Return the least privileged label.",0,[[],["label",3]]],[11,"flows_to","","Compare two labels according to the lattice structure: L_0…",0,[[["label",3]]]],[11,"is_valid","oak","Returns `true` if `value` is a variant of…",1,[[]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` if…",1,[[],[["option",4],["channelreadstatus",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `OakStatus`.",2,[[]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`…",2,[[],[["option",4],["oakstatus",4]]]],[11,"is_valid","oak::grpc","Returns `true` if `value` is a variant of `Code`.",7,[[]]],[11,"from_i32","","Converts an `i32` to a `Code`, or `None` if `value` is not…",7,[[],[["option",4],["code",4]]]],[11,"receive","oak::proto::oak::invocation","",53,[[],[["request",3],["result",4],["oakerror",4]]]],[11,"send","","",53,[[["response",3]],[["result",4],["oakerror",4]]]],[11,"close_channels","","",53,[[]]],[11,"new","oak::io","",25,[[["readhandle",3]],["receiver",3]]],[11,"as_proto_handle","","",25,[[],["receiver",3]]],[11,"new","","",26,[[["writehandle",3]],["sender",3]]],[11,"as_proto_handle","","",26,[[],["sender",3]]],[11,"encode","oak::proto::oak::application::node_configuration","",33,[[]]],[11,"merge","","",33,[[["wiretype",4],["option",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",33,[[]]],[11,"encode","oak::proto::oak::label::tag","",44,[[]]],[11,"merge","","",44,[[["wiretype",4],["decodecontext",3],["option",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",44,[[]]]],"p":[[3,"Label"],[4,"ChannelReadStatus"],[4,"OakStatus"],[3,"ReadHandle"],[3,"WriteHandle"],[4,"OakError"],[3,"Status"],[4,"Code"],[3,"GrpcRequest"],[3,"GrpcResponse"],[4,"WriteMode"],[4,"ServerMethod"],[8,"ServerNode"],[8,"Invocable"],[3,"ChannelResponseWriter"],[8,"HandleVisit"],[3,"Receiver"],[3,"Sender"],[3,"HeaderMap"],[3,"HttpRequest"],[3,"HttpResponse"],[6,"Invocation"],[8,"Decodable"],[8,"Encodable"],[3,"Message"],[3,"Receiver"],[3,"Sender"],[8,"ReceiverExt"],[8,"SenderExt"],[3,"Roughtime"],[3,"Storage"],[3,"ApplicationConfiguration"],[3,"NodeConfiguration"],[4,"ConfigType"],[3,"WebAssemblyConfiguration"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"HttpServerConfiguration"],[3,"HttpClientConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[3,"Tag"],[4,"Tag"],[3,"GrpcTag"],[3,"WebAssemblyModuleTag"],[3,"WebAssemblyModuleSignatureTag"],[3,"TlsEndpointTag"],[3,"PublicKeyIdentityTag"],[3,"GrpcInvocation"],[3,"GrpcInvocationSender"],[3,"GrpcInvocationReceiver"],[3,"HttpInvocation"],[3,"HttpInvocationSender"],[3,"StorageItem"],[3,"StorageChannelReadRequest"],[3,"StorageChannelReadResponse"],[3,"StorageChannelWriteRequest"],[3,"StorageChannelDeleteRequest"],[3,"StorageChannelBeginRequest"],[3,"StorageChannelBeginResponse"],[3,"StorageChannelCommitRequest"],[3,"StorageChannelRollbackRequest"],[3,"StorageServiceClient"],[8,"StorageService"],[3,"StorageServiceDispatcher"],[3,"Roughtime"],[3,"RoughtimeServiceClient"],[8,"RoughtimeService"],[3,"RoughtimeServiceDispatcher"],[8,"CommandHandler"],[8,"WasmEntrypoint"],[8,"WithInit"],[3,"OakRng"],[3,"LogConfiguration"],[3,"Top"],[3,"StorageChannelWriteResponse"],[3,"StorageChannelDeleteResponse"],[3,"StorageChannelCommitResponse"],[3,"StorageChannelRollbackResponse"],[3,"GetRoughtimeRequest"]]},\
"oak_app_build":{"doc":"An utility for building an Oak application from a manifest…","i":[[3,"Opt","oak_app_build","Command line options for the Oak Application builder.",null,null],[12,"manifest_path","","",0,null],[3,"Manifest","","",null,null],[12,"name","","",1,null],[12,"modules","","",1,null],[12,"initial_node_configuration","","",1,null],[3,"External","","",null,null],[12,"url","","",2,null],[12,"sha256","","",2,null],[3,"InitialNodeConfig","","",null,null],[12,"wasm_module_name","","",3,null],[12,"wasm_entrypoint_name","","",3,null],[4,"Module","","",null,null],[13,"Path","","",4,null],[13,"External","","",4,null],[5,"get_module_cache_path","","Get path for caching a downloaded file in…",null,[[["path",3]],["pathbuf",3]]],[5,"get_output_path","","Get path for the output application file in…",null,[[["path",3]],["pathbuf",3]]],[5,"get_sha256","","Computes SHA256 sum from `data` and returns it as a HEX…",null,[[],["string",3]]],[5,"download_file_from_url","","Download file from `url`.",null,[[]]],[5,"load_module","","Load Wasm module from file or URL if specified. If the…",null,[[["module",4],["path",3]]]],[5,"write_config_to_file","","Serializes an application configuration from `app_config`…",null,[[["applicationconfiguration",3],["path",3]],["result",6]]],[5,"main","","",null,[[],["result",6]]],[17,"OUTPUT_DIRECTORY","","Directory used to save build artifacts.",null,null],[17,"CACHE_DIRECTORY","","Directory used to save downloaded Wasm modules.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"clone","","",0,[[],["opt",3]]],[11,"default","","",3,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"Opt"],[3,"Manifest"],[3,"External"],[3,"InitialNodeConfig"],[4,"Module"]]},\
"oak_tests":{"doc":"Test utilities to help with unit testing of Oak SDK code.","i":[[4,"Profile","oak_tests","",null,null],[13,"Release","","",0,null],[13,"Debug","","",0,null],[5,"compile_rust_wasm","","Uses cargo to compile a Rust manifest to Wasm bytes.",null,[[["profile",4]],[["vec",3],["result",6]]]],[5,"run_single_module_default","","Convenience helper to build and run a single-Node…",null,[[],[["oakerror",4],["result",4],["arc",3]]]],[5,"run_single_module","","Convenience helper to build and run a single-Node…",null,[[],[["oakerror",4],["result",4],["arc",3]]]],[5,"run_single_module_with_config","","Convenience helper to build and run a single-Node…",null,[[["configmap",3]],[["oakerror",4],["result",4],["arc",3]]]],[5,"runtime_config","","Build the configuration needed to launch a test Runtime…",null,[[["configmap",3]],["runtimeconfiguration",3]]],[5,"runtime_config_wasm","","Build the configuration needed to launch a test Runtime…",null,[[["vec",3],["string",3],["hashmap",3],["configmap",3],["signaturetable",3]],["runtimeconfiguration",3]]],[5,"channel_and_interceptor","","Build a labeled channel and interceptor suitable for…",null,[[["label",3]]]],[5,"public_channel_and_interceptor","","Build a public-untrusted channel and interceptor suitable…",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]]],"p":[[4,"Profile"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);