var searchIndex = JSON.parse('{\
"oak":{"doc":"SDK functionality that provides idiomatic Rust wrappers…","i":[[3,"Label","oak","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",0,null],[12,"integrity_tags","","",0,null],[4,"ChannelReadStatus","","Single byte values used to indicate the read status of a…",null,null],[13,"NotReady","","No pending messages available on channel.",1,null],[13,"ReadReady","","Pending message available on channel.",1,null],[13,"InvalidChannel","","Channel handle does not identify the read half of a…",1,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",1,null],[13,"PermissionDenied","","A node trying to access the channel does not have the…",1,null],[6,"Handle","","Handle used to identify read or write channel halves.",null,null],[4,"OakStatus","","Status values exchanged as i32 values across the Node Wasm…",null,null],[13,"Unspecified","","",2,null],[13,"Ok","","Success.",2,null],[13,"ErrBadHandle","","Invalid handle provided.",2,null],[13,"ErrInvalidArgs","","Arguments invalid.",2,null],[13,"ErrChannelClosed","","Channel has been closed.",2,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an output…",2,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (an…",2,null],[13,"ErrOutOfRange","","Argument out of valid range.",2,null],[13,"ErrInternal","","Internal error.",2,null],[13,"ErrTerminated","","Node terminated.",2,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",2,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to perform…",2,null],[3,"ReadHandle","","Wrapper for a handle to the read half of a channel.",null,null],[12,"handle","","",3,null],[3,"WriteHandle","","Wrapper for a handle to the send half of a channel.",null,null],[12,"handle","","",4,null],[4,"OakError","","Generic Oak error.",null,null],[13,"ProtobufDecodeError","","",5,null],[13,"ProtobufEncodeError","","",5,null],[13,"OakStatus","","",5,null],[13,"IoError","","",5,null],[5,"wait_on_channels","","Wait for one or more of the provided handles to become…",null,[[],[["oakstatus",4],["result",4],["vec",3]]]],[5,"channel_read","","Read a message from a channel without blocking.",null,[[["readhandle",3],["vec",3],["vec",3]],[["result",4],["oakstatus",4]]]],[5,"channel_read_with_downgrade","","The same as `channel_read`, but also applies the current…",null,[[["readhandle",3],["vec",3],["vec",3]],[["result",4],["oakstatus",4]]]],[5,"channel_write","","Write a message to a channel.",null,[[["writehandle",3]],[["result",4],["oakstatus",4]]]],[5,"channel_write_with_downgrade","","The same as `channel_write`, but also applies the current…",null,[[["writehandle",3]],[["result",4],["oakstatus",4]]]],[5,"channel_create","","Create a new unidirectional channel.",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[5,"channel_create_with_downgrade","","The same as `channel_create`, but also applies the current…",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[5,"channel_close","","Close the specified channel [`Handle`].",null,[[["handle",6]],[["result",4],["oakstatus",4]]]],[5,"node_create","","Creates a new Node running the configuration identified by…",null,[[["readhandle",3],["nodeconfiguration",3],["label",3]],[["result",4],["oakstatus",4]]]],[5,"node_create_with_downgrade","","The same as `node_create`, but also applies the current…",null,[[["readhandle",3],["nodeconfiguration",3],["label",3]],[["result",4],["oakstatus",4]]]],[5,"channel_label_read","","Get the [`Label`] for the channel associated with the…",null,[[["handle",6]],[["label",3],["oakstatus",4],["result",4]]]],[5,"node_label_read","","Get the [`Label`] for the current node.",null,[[],[["label",3],["oakstatus",4],["result",4]]]],[5,"node_privilege_read","","Get the downgrade privilege for the current node…",null,[[],[["label",3],["oakstatus",4],["result",4]]]],[5,"random_get","","Fill a buffer with random data.",null,[[],[["result",4],["oakstatus",4]]]],[5,"result_from_status","","Convert a status returned from a host function call to a…",null,[[],[["result",4],["oakstatus",4]]]],[5,"set_panic_hook","","Install a panic hook that logs panic information.",null,[[]]],[5,"run_command_loop","","Runs a command loop on the provided [`CommandHandler`]:",null,[[["iterator",8],["commandhandler",8]]]],[0,"crypto","","Helper library for accessing the Oak cryptography service.",null,null],[3,"Crypto","oak::crypto","Local representation of the connection to an external…",null,null],[4,"KeysetFormat","","Format of an encrypted keyset.",null,null],[13,"Binary","","Binary-encoded protobuf.",6,null],[13,"Json","","JSON-encoded protobuf.",6,null],[6,"KeysetHandle","","Opaque handle for a keyset, which is a collection of key…",null,null],[11,"new","","Creates a [`Crypto`] instance using the given…",7,[[["cryptoconfiguration",3],["label",3]],[["option",4],["crypto",3]]]],[11,"generate","","Generate a new keyset with a single fresh key that matches…",7,[[["keytemplate",3]],[["keysethandle",6],["result",6]]]],[11,"generate_named","","Generate a new keyset with a single fresh key that matches…",7,[[],[["keysethandle",6],["result",6]]]],[11,"public","","Generate a new keyset that just holds public key…",7,[[["keysethandle",6]],[["keysethandle",6],["result",6]]]],[11,"bind","","Convert a keyset to an encrypted form using another keyset.",7,[[["keysethandle",6],["keysetformat",4]],[["vec",3],["result",6]]]],[11,"unbind","","Retrieve a keyset from an encrypted form using another…",7,[[["keysethandle",6],["keysetformat",4]],[["keysethandle",6],["result",6]]]],[11,"kms_proxy","","Return a keyset that acts as a proxy to key material held…",7,[[],[["keysethandle",6],["result",6]]]],[11,"encrypt","","AEAD encryption.",7,[[["keysethandle",6]],[["vec",3],["result",6]]]],[11,"decrypt","","AEAD decryption.",7,[[["keysethandle",6]],[["vec",3],["result",6]]]],[11,"encrypt_deterministically","","Deterministic AEAD encryption.",7,[[["keysethandle",6]],[["vec",3],["result",6]]]],[11,"decrypt_deterministically","","Deterministic AEAD decryption.",7,[[["keysethandle",6]],[["vec",3],["result",6]]]],[11,"compute_mac","","Compute MAC.",7,[[["keysethandle",6]],[["vec",3],["result",6]]]],[11,"verify_mac","","Verify MAC.",7,[[["keysethandle",6]],["result",6]]],[11,"compute_prf","","Compute PRF.",7,[[["keysethandle",6]],[["vec",3],["result",6]]]],[11,"sign","","Generate signature.",7,[[["keysethandle",6]],[["vec",3],["result",6]]]],[11,"verify","","Verify signature.",7,[[["keysethandle",6]],["result",6]]],[0,"grpc","oak","Functionality to help Oak Nodes interact with gRPC.",null,null],[3,"Status","oak::grpc","The `Status` type defines a logical error model that is…",null,null],[12,"code","","The status code, which should be an enum value of…",8,null],[12,"message","","A developer-facing error message, which should be in…",8,null],[12,"details","","A list of messages that carry the error details. There is…",8,null],[4,"Code","","The canonical error codes for Google APIs.",null,null],[13,"Ok","","Not an error; returned on success",9,null],[13,"Cancelled","","The operation was cancelled, typically by the caller.",9,null],[13,"Unknown","","Unknown error. For example, this error may be returned…",9,null],[13,"InvalidArgument","","The client specified an invalid argument. Note that this…",9,null],[13,"DeadlineExceeded","","The deadline expired before the operation could complete.…",9,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was not…",9,null],[13,"AlreadyExists","","The entity that a client attempted to create (e.g., file…",9,null],[13,"PermissionDenied","","The caller does not have permission to execute the…",9,null],[13,"Unauthenticated","","The request does not have valid authentication credentials…",9,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-user…",9,null],[13,"FailedPrecondition","","The operation was rejected because the system is not in a…",9,null],[13,"Aborted","","The operation was aborted, typically due to a concurrency…",9,null],[13,"OutOfRange","","The operation was attempted past the valid range. E.g.,…",9,null],[13,"Unimplemented","","The operation is not implemented or is not…",9,null],[13,"Internal","","Internal errors. This means that some invariants expected…",9,null],[13,"Unavailable","","The service is currently unavailable. This is most likely…",9,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",9,null],[3,"GrpcRequest","","",null,null],[12,"method_name","","",10,null],[12,"req_msg","","The body of the request. Usually a serialized protobuf…",10,null],[12,"last","","",10,null],[3,"GrpcResponse","","",null,null],[12,"rsp_msg","","The body of the response. Usually a serialized protobuf…",11,null],[12,"status","","",11,null],[12,"last","","The last field indicates that this is definitely the final…",11,null],[3,"ChannelResponseWriter","","Channel-holding object that encapsulates response messages…",null,null],[4,"WriteMode","","Indicate whether a write method should leave the current…",null,null],[13,"KeepOpen","","",12,null],[13,"Close","","",12,null],[4,"ServerMethod","","Enum with variants for all combinations of {request,…",null,null],[13,"UnaryUnary","","",13,null],[13,"UnaryStream","","",13,null],[13,"StreamUnary","","",13,null],[13,"StreamStream","","",13,null],[5,"build_status","","Helper to create a gRPC status object.",null,[[["code",4]],["status",3]]],[5,"decap_response","","Extract a protocol buffer message from a GrpcResponse…",null,[[["grpcresponse",3]],["result",6]]],[5,"invoke_grpc_method_stream","","Helper to inject a (single) gRPC request message via a…",null,[[["sender",3]],[["result",6],["receiver",3]]]],[5,"invoke_grpc_method","","Helper to inject a (single) gRPC request message via a…",null,[[["sender",3]],["result",6]]],[0,"client","","",null,null],[5,"init","oak::grpc::client","Initializes a gRPC client pseudo-Node connecting to the…",null,[[],[["result",4],["oakstatus",4],["sender",3]]]],[0,"server","oak::grpc","Functionality to help Oak Nodes create gRPC server…",null,null],[5,"init","oak::grpc::server","Initializes a gRPC server pseudo-Node listening on the…",null,[[],[["result",4],["oakstatus",4],["receiver",3]]]],[5,"init_with_sender","","Initializes a gRPC server pseudo-Node listening on the…",null,[[["invocation",6],["sender",3]],[["result",4],["oakstatus",4]]]],[6,"Result","oak::grpc","Result type that uses a `Status` type for error values.",null,null],[6,"Invocation","","",null,null],[8,"ServerNode","","Trait for Oak Nodes that act as a gRPC services.",null,null],[10,"invoke","","Process a single gRPC method invocation.",14,[[["channelresponsewriter",3]]]],[8,"Invocable","","Trait implemented by all server method variants, applied…",null,null],[10,"invoke","","Generic function that handles request deserialization and…",15,[[["channelresponsewriter",3]]]],[11,"new","","",16,[[["grpcresponse",3],["sender",3]]]],[11,"handle","","Retrieve the Oak handle underlying the writer object.",16,[[],["writehandle",3]]],[11,"write","","Write out a gRPC response and optionally close out the…",16,[[["writemode",4]],[["result",4],["oakerror",4]]]],[11,"write_empty","","Write an empty gRPC response and optionally close out the…",16,[[["writemode",4]],[["result",4],["oakerror",4]]]],[11,"close","","Close out the gRPC method invocation with the given final…",16,[[["result",6]],[["result",4],["oakerror",4]]]],[0,"handle","oak","Utilities for visiting, extract and injecting handles.",null,null],[5,"extract_handles","oak::handle","Return all handles in `T`.",null,[[],["vec",3]]],[5,"inject_handles","","Inject handles into a message.",null,[[],[["result",4],["oakerror",4]]]],[8,"HandleVisit","","Visit all handles present in a type.",null,null],[10,"fold","","Invokes the provided closure on every handle contained in…",17,[[]]],[24,"HandleVisit","","Automatically derives the `HandleVisit` trait for structs…",null,null],[3,"Receiver","","Receiver handle for an Oak channel. This type is sent over…",null,null],[12,"id","","",18,null],[3,"Sender","","Sender handle for an Oak channel. This type is sent over…",null,null],[12,"id","","",19,null],[5,"is_valid","","Check this handle is valid.",null,[[["handle",6]]]],[5,"invalid","","Returns an intentionally invalid handle.",null,[[],["handle",6]]],[0,"http","oak","Functionality to help Oak Nodes create HTTP server and…",null,null],[3,"HeaderMap","oak::http","Wrapper around a HashMap representing the headers in…",null,null],[12,"headers","","",20,null],[3,"HttpRequest","","Protocol buffer encoding representing an HTTP request.",null,null],[12,"uri","","The URI (including scheme and authority) to which the…",21,null],[12,"method","","The HTTP request method used.",21,null],[12,"body","","The body of the request.",21,null],[12,"headers","","The HTTP request headers.",21,null],[3,"HttpResponse","","Protocol buffer encoding representing an HTTP response.",null,null],[12,"body","","The body of the response.",22,null],[12,"status","","The HTTP status code.",22,null],[12,"headers","","The HTTP response headers.",22,null],[5,"create_http_invocation","","Creates an `HttpInvocation` and a corresponding…",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[0,"client","","",null,null],[5,"init","oak::http::client","Initializes an HTTP client pseudo-Node serving requests…",null,[[],[["result",4],["sender",3],["oakstatus",4]]]],[0,"server","oak::http","",null,null],[3,"HeaderMap","oak::http::server","Wrapper around a HashMap representing the headers in…",null,null],[12,"headers","","",20,null],[3,"HttpRequest","","Protocol buffer encoding representing an HTTP request.",null,null],[12,"uri","","The URI (including scheme and authority) to which the…",21,null],[12,"method","","The HTTP request method used.",21,null],[12,"body","","The body of the request.",21,null],[12,"headers","","The HTTP request headers.",21,null],[3,"HttpResponse","","Protocol buffer encoding representing an HTTP response.",null,null],[12,"body","","The body of the response.",22,null],[12,"status","","The HTTP status code.",22,null],[12,"headers","","The HTTP response headers.",22,null],[5,"init","","Initializes an HTTP server pseudo-Node listening on the…",null,[[],[["result",4],["receiver",3],["oakstatus",4]]]],[5,"init_with_sender","","Initializes an HTTP server pseudo-Node listening on the…",null,[[["sender",3],["invocation",6]],[["result",4],["oakstatus",4]]]],[6,"Invocation","","",null,null],[0,"io","oak","Wrappers for Oak SDK types to allow their use with…",null,null],[8,"Decodable","oak::io","A trait for objects that can be decoded from bytes +…",null,null],[10,"decode","","",23,[[["message",3]],[["oakerror",4],["result",4]]]],[8,"Encodable","","A trait for objects that can be encoded as bytes + handles.",null,null],[10,"encode","","",24,[[],[["oakerror",4],["result",4],["message",3]]]],[3,"Message","","A simple holder for bytes + handles, using internally…",null,null],[12,"bytes","","",25,null],[12,"handles","","",25,null],[3,"Receiver","","Wrapper for a handle to the read half of a channel,…",null,null],[12,"handle","","",26,null],[3,"Sender","","Wrapper for a handle to the send half of a channel,…",null,null],[12,"handle","","",27,null],[5,"channel_create","","Creates a new channel for transmission of [`Encodable`]…",null,[[["label",3]],[["result",4],["oakstatus",4]]]],[5,"channel_create_with_downgrade","","Uses the current node\'s label-downgrading privilege to…",null,[[["label",3]],[["result",4],["oakstatus",4]]]],[5,"node_create","","Creates a node and corresponding inbound channel of the…",null,[[["label",3],["nodeconfiguration",3]],[["sender",3],["oakstatus",4],["result",4]]]],[5,"node_create_with_downgrade","","Uses the current node\'s label-downgrading privilege to…",null,[[["label",3],["nodeconfiguration",3]],[["sender",3],["oakstatus",4],["result",4]]]],[5,"entrypoint_node_create","","Creates a node and corresponding inbound channel of the…",null,[[["decodable",8],["label",3],["encodable",8]],[["sender",3],["result",4],["oakerror",4]]]],[5,"forward_invocation","","Sends [`crate::grpc::Invocation`] (containing…",null,[[["invocation",6],["sender",3]],["result",6]]],[5,"error_from_nonok_status","","Map a non-OK [`OakStatus`] value to the nearest available…",null,[[["oakstatus",4]],["error",3]]],[8,"ReceiverExt","","SDK-specific functionality provided by a receiver.",null,null],[10,"close","","Closes the underlying channel used by the receiver.",28,[[],[["result",4],["oakstatus",4]]]],[10,"receive","","Attempts to wait for a value on the receiver, blocking if…",28,[[],[["result",4],["oakerror",4]]]],[10,"receive_with_downgrade","","The same as `receive`, but also applies the current Node\'s…",28,[[],[["result",4],["oakerror",4]]]],[10,"try_receive","","Attempts to read a value from the receiver, without…",28,[[],[["result",4],["oakerror",4]]]],[10,"try_receive_with_downgrade","","The same as `try_receive`, but also applies the current…",28,[[],[["result",4],["oakerror",4]]]],[10,"label","","Retrieves the label associated with the underlying channel.",28,[[],[["result",4],["label",3],["oakerror",4]]]],[10,"wait","","Waits for a value to be available from the receiver.",28,[[],[["result",4],["channelreadstatus",4],["oakstatus",4]]]],[10,"iter","","Consumes the receiver and returns an iterator that will…",28,[[],["receiveriterator",3]]],[8,"SenderExt","","Trait for context-dependent functionality on a `Sender`.",null,null],[10,"close","","Closes the underlying channel used by the sender.",29,[[],[["result",4],["oakstatus",4]]]],[10,"send","","Attempts to send a value on the sender.",29,[[],[["result",4],["oakerror",4]]]],[10,"send_with_downgrade","","The same as `send`, but also applies the current Node\'s…",29,[[],[["result",4],["oakerror",4]]]],[10,"label","","Retrieves the label associated with the underlying channel.",29,[[],[["result",4],["label",3],["oakerror",4]]]],[0,"logger","oak","A logger that sends output to an Oak logging channel, for…",null,null],[5,"init","oak::logger","Initialize Node-wide logging via a channel to a logging…",null,[[["logmessage",3],["level",4],["sender",3]],[["setloggererror",3],["result",4]]]],[5,"create","","",null,[[],[["result",4],["oakstatus",4],["sender",3]]]],[0,"node_config","oak","Helper methods for creating common [`NodeConfiguration`]…",null,null],[5,"grpc_client","oak::node_config","",null,[[],["nodeconfiguration",3]]],[5,"grpc_server","","",null,[[],["nodeconfiguration",3]]],[5,"http_client","","",null,[[],["nodeconfiguration",3]]],[5,"http_server","","",null,[[],["nodeconfiguration",3]]],[5,"wasm","","",null,[[],["nodeconfiguration",3]]],[5,"log","","",null,[[],["nodeconfiguration",3]]],[0,"rand","oak","Functionality to allow use of the rand crate in Oak.",null,null],[3,"OakRng","oak::rand","",null,null],[0,"roughtime","oak","Helper library for accessing the Oak Roughtime service.",null,null],[3,"Roughtime","oak::roughtime","Local representation of the connection to an external…",null,null],[11,"new","","Creates a [`Roughtime`] instance using the given…",30,[[["roughtimeclientconfiguration",3]],[["option",4],["roughtime",3]]]],[11,"get_roughtime","","Get the current Roughtime value as a Duration since UNIX…",30,[[],[["duration",3],["result",6]]]],[0,"storage","oak","Helper library for accessing Oak storage services.",null,null],[3,"Storage","oak::storage","Local representation of the connection to an external…",null,null],[11,"new","","Creates a [`Storage`] instance using the given…",31,[[["storageproxyconfiguration",3]],[["option",4],["storage",3]]]],[11,"read","","Read the value associated with the given `name` from the…",31,[[],[["vec",3],["result",6]]]],[11,"write","","Set the value associated with the given `name` from the…",31,[[],["result",6]]],[11,"delete","","Delete the value associated with the given `name` from the…",31,[[],["result",6]]],[0,"proto","oak","Auto-generated code derived from protocol buffer…",null,null],[0,"oak","oak::proto","",null,null],[0,"application","oak::proto::oak","",null,null],[3,"ApplicationConfiguration","oak::proto::oak::application","An ApplicationConfiguration represents a unit of…",null,null],[12,"wasm_modules","","Map from Wasm module names to their bytecode representation.",32,null],[12,"initial_node_configuration","","Indication of what configuration the initial Node should…",32,null],[12,"module_signatures","","The bundled signatures for validating Wasm module hashes.",32,null],[3,"ModuleSignature","","Bundled signature of the SHA-256 hash of a Wasm module.…",null,null],[12,"public_key","","",33,null],[12,"signed_hash","","",33,null],[12,"module_hash","","",33,null],[3,"NodeConfiguration","","NodeConfiguration indicates the configuration of a created…",null,null],[12,"config_type","","",34,null],[0,"node_configuration","","Nested message and enum types in `NodeConfiguration`.",null,null],[4,"ConfigType","oak::proto::oak::application::node_configuration","",null,null],[13,"WasmConfig","","",35,null],[13,"LogConfig","","",35,null],[13,"StorageConfig","","",35,null],[13,"GrpcServerConfig","","",35,null],[13,"GrpcClientConfig","","",35,null],[13,"RoughtimeClientConfig","","",35,null],[13,"HttpServerConfig","","",35,null],[13,"HttpClientConfig","","",35,null],[13,"CryptoConfig","","",35,null],[3,"WebAssemblyConfiguration","oak::proto::oak::application","WebAssemblyConfiguration describes the configuration of a…",null,null],[12,"wasm_module_name","","The name of one of the entries in the…",36,null],[12,"wasm_entrypoint_name","","The name of an exported WebAssembly function to invoke as…",36,null],[3,"LogConfiguration","","LogConfiguration describes the configuration of a logging…",null,null],[3,"StorageProxyConfiguration","","StorageProxyConfiguration describes the configuration of a…",null,null],[12,"address","","The address of the external storage provider.",37,null],[3,"GrpcServerConfiguration","","GrpcServerConfiguration describes the configuration of a…",null,null],[12,"address","","The endpoint address for the gRPC server to listen on.…",38,null],[3,"GrpcClientConfiguration","","GrpcClientConfiguration describes the configuration of a…",null,null],[12,"uri","","The URI component of a gRPC server endpoint. Must contain…",39,null],[3,"RoughtimeClientConfiguration","","RoughtimeClientConfiguration describes the configuration…",null,null],[12,"servers","","The collection of Roughtime servers to query. A default…",40,null],[12,"min_overlapping_intervals","","Connection parameters; default values will be used if any…",40,null],[12,"timeout_seconds","","",40,null],[12,"server_retries","","",40,null],[12,"max_radius_microseconds","","",40,null],[3,"HttpServerConfiguration","","HttpServerConfiguration describes the configuration of an…",null,null],[12,"address","","The endpoint address for the HTTP server to listen on.…",41,null],[3,"HttpClientConfiguration","","HttpClientConfiguration describes the configuration of an…",null,null],[12,"authority","","The authority supported by this client. The authority must…",42,null],[3,"CryptoConfiguration","","CryptoConfiguration describes the configuration of a…",null,null],[3,"RoughtimeServer","","Information to identify a particular Roughtime server.…",null,null],[12,"name","","",43,null],[12,"host","","",43,null],[12,"port","","",43,null],[12,"public_key_base64","","",43,null],[3,"ConfigMap","","A serialized list of key-value pairs that are specified as…",null,null],[12,"items","","",44,null],[0,"label","oak::proto::oak","",null,null],[3,"Label","oak::proto::oak::label","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",0,null],[12,"integrity_tags","","",0,null],[3,"Tag","","Tag represents a category of confidentiality or integrity…",null,null],[12,"tag","","",45,null],[0,"tag","","Nested message and enum types in `Tag`.",null,null],[4,"Tag","oak::proto::oak::label::tag","",null,null],[13,"WebAssemblyModuleTag","","",46,null],[13,"WebAssemblyModuleSignatureTag","","",46,null],[13,"TlsEndpointTag","","",46,null],[13,"PublicKeyIdentityTag","","",46,null],[13,"TopTag","","",46,null],[3,"WebAssemblyModuleTag","oak::proto::oak::label","Policies related to modules, referring to the native…",null,null],[12,"web_assembly_module_hash_sha_256","","The attestation for a single WebAssembly module, a SHA256…",47,null],[3,"WebAssemblyModuleSignatureTag","","Policies related to modules, referring to the signature of…",null,null],[12,"public_key","","Public key counterpart of the private key used to sign…",48,null],[3,"TlsEndpointTag","","Policies related to HTTPS communication.",null,null],[12,"authority","","The TLS authority (host:port) of the remote endpoint,…",49,null],[3,"PublicKeyIdentityTag","","Policies related to identities, specified using a…",null,null],[12,"public_key","","Public key counterpart of the private key that is used to…",50,null],[3,"Top","","Message representing top element of the principal lattice.…",null,null],[0,"crypto","oak::proto::oak","",null,null],[3,"KeyTemplate","oak::proto::oak::crypto","Local copy of Tink key template definition, to prevent…",null,null],[12,"type_url","","in format type.googleapis.com/packagename.messagename",51,null],[12,"value","","contains specific serialized *KeyFormat proto",51,null],[12,"output_prefix_type","","",51,null],[3,"KeysetGenerateRequest","","",null,null],[12,"template_id","","",52,null],[3,"KeysetResponse","","Common response type for acquiring keyset handles",null,null],[12,"keyset_handle","","",53,null],[3,"KeysetPublicRequest","","",null,null],[12,"private_keyset_handle","","",54,null],[3,"KeysetUnbindRequest","","",null,null],[12,"keyset_handle","","",55,null],[12,"encrypted_keyset","","",55,null],[12,"format","","",55,null],[3,"KeysetBindRequest","","",null,null],[12,"keyset_handle","","",56,null],[12,"inner_keyset_handle","","",56,null],[12,"format","","",56,null],[3,"KeysetBindResponse","","",null,null],[12,"encrypted_keyset","","",57,null],[3,"KmsProxyRequest","","",null,null],[12,"kms_identifier","","",58,null],[3,"AeadEncryptRequest","","",null,null],[12,"keyset_handle","","",59,null],[12,"plaintext","","",59,null],[12,"associated_data","","",59,null],[3,"AeadEncryptResponse","","",null,null],[12,"ciphertext","","",60,null],[3,"AeadDecryptRequest","","",null,null],[12,"keyset_handle","","",61,null],[12,"ciphertext","","",61,null],[12,"associated_data","","",61,null],[3,"AeadDecryptResponse","","",null,null],[12,"plaintext","","",62,null],[3,"DeterministicAeadEncryptRequest","","",null,null],[12,"keyset_handle","","",63,null],[12,"plaintext","","",63,null],[12,"associated_data","","",63,null],[3,"DeterministicAeadEncryptResponse","","",null,null],[12,"ciphertext","","",64,null],[3,"DeterministicAeadDecryptRequest","","",null,null],[12,"keyset_handle","","",65,null],[12,"ciphertext","","",65,null],[12,"associated_data","","",65,null],[3,"DeterministicAeadDecryptResponse","","",null,null],[12,"plaintext","","",66,null],[3,"VerifyMacRequest","","",null,null],[12,"keyset_handle","","",67,null],[12,"mac_value","","",67,null],[12,"data","","",67,null],[3,"VerifyMacResponse","","",null,null],[3,"ComputeMacRequest","","",null,null],[12,"keyset_handle","","",68,null],[12,"data","","",68,null],[3,"ComputeMacResponse","","",null,null],[12,"mac_value","","",69,null],[3,"ComputePrfRequest","","",null,null],[12,"keyset_handle","","",70,null],[12,"data","","",70,null],[12,"output_length","","",70,null],[3,"ComputePrfResponse","","",null,null],[12,"prf_value","","",71,null],[3,"SignatureSignRequest","","",null,null],[12,"private_keyset_handle","","",72,null],[12,"data","","",72,null],[3,"SignatureSignResponse","","",null,null],[12,"signature","","",73,null],[3,"SignatureVerifyRequest","","",null,null],[12,"public_keyset_handle","","",74,null],[12,"signature","","",74,null],[12,"data","","",74,null],[3,"SignatureVerifyResponse","","",null,null],[3,"OakCryptoDispatcher","","",null,null],[3,"OakCryptoClient","","",null,null],[12,"0","","",75,null],[4,"OutputPrefixType","","",null,null],[13,"UnknownPrefix","","",76,null],[13,"Tink","","",76,null],[13,"Legacy","","",76,null],[13,"Raw","","",76,null],[13,"Crunchy","","",76,null],[4,"KeysetFormat","","",null,null],[13,"UnknownFormat","","",77,null],[13,"Binary","","",77,null],[13,"Json","","",77,null],[0,"keyset_generate_request","","Nested message and enum types in `KeysetGenerateRequest`.",null,null],[4,"TemplateId","oak::proto::oak::crypto::keyset_generate_request","",null,null],[13,"TemplateData","","serialized KeyTemplate",78,null],[13,"TemplateName","","",78,null],[11,"encode","","",78,[[]]],[11,"merge","","",78,[[["option",4],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",78,[[]]],[8,"OakCrypto","oak::proto::oak::crypto","",null,null],[10,"generate","","",79,[[["keysetgeneraterequest",3]],[["result",6],["keysetresponse",3]]]],[10,"public","","",79,[[["keysetpublicrequest",3]],[["result",6],["keysetresponse",3]]]],[10,"bind","","",79,[[["keysetbindrequest",3]],[["keysetbindresponse",3],["result",6]]]],[10,"unbind","","",79,[[["keysetunbindrequest",3]],[["result",6],["keysetresponse",3]]]],[10,"kms_proxy","","",79,[[["kmsproxyrequest",3]],[["result",6],["keysetresponse",3]]]],[10,"encrypt","","",79,[[["aeadencryptrequest",3]],[["aeadencryptresponse",3],["result",6]]]],[10,"decrypt","","",79,[[["aeaddecryptrequest",3]],[["aeaddecryptresponse",3],["result",6]]]],[10,"encrypt_deterministically","","",79,[[["deterministicaeadencryptrequest",3]],[["result",6],["deterministicaeadencryptresponse",3]]]],[10,"decrypt_deterministically","","",79,[[["deterministicaeaddecryptrequest",3]],[["deterministicaeaddecryptresponse",3],["result",6]]]],[10,"compute_mac","","",79,[[["computemacrequest",3]],[["result",6],["computemacresponse",3]]]],[10,"verify_mac","","",79,[[["verifymacrequest",3]],[["verifymacresponse",3],["result",6]]]],[10,"compute_prf","","",79,[[["computeprfrequest",3]],[["result",6],["computeprfresponse",3]]]],[10,"sign","","",79,[[["signaturesignrequest",3]],[["signaturesignresponse",3],["result",6]]]],[10,"verify","","",79,[[["signatureverifyrequest",3]],[["signatureverifyresponse",3],["result",6]]]],[11,"output_prefix_type","","Returns the enum value of `output_prefix_type`, or the…",51,[[],["outputprefixtype",4]]],[11,"set_output_prefix_type","","Sets `output_prefix_type` to the provided enum value.",51,[[["outputprefixtype",4]]]],[11,"format","","Returns the enum value of `format`, or the default if the…",55,[[],["keysetformat",4]]],[11,"set_format","","Sets `format` to the provided enum value.",55,[[["keysetformat",4]]]],[11,"format","","Returns the enum value of `format`, or the default if the…",56,[[],["keysetformat",4]]],[11,"set_format","","Sets `format` to the provided enum value.",56,[[["keysetformat",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of…",76,[[]]],[11,"from_i32","","Converts an `i32` to a `OutputPrefixType`, or `None` if…",76,[[],[["outputprefixtype",4],["option",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `KeysetFormat`.",77,[[]]],[11,"from_i32","","Converts an `i32` to a `KeysetFormat`, or `None` if…",77,[[],[["keysetformat",4],["option",4]]]],[11,"server_method","","",80,[[],[["option",4],["invocable",8]]]],[11,"generate","","",75,[[["keysetgeneraterequest",3]],[["result",6],["keysetresponse",3]]]],[11,"public","","",75,[[["keysetpublicrequest",3]],[["result",6],["keysetresponse",3]]]],[11,"bind","","",75,[[["keysetbindrequest",3]],[["keysetbindresponse",3],["result",6]]]],[11,"unbind","","",75,[[["keysetunbindrequest",3]],[["result",6],["keysetresponse",3]]]],[11,"kms_proxy","","",75,[[["kmsproxyrequest",3]],[["result",6],["keysetresponse",3]]]],[11,"encrypt","","",75,[[["aeadencryptrequest",3]],[["aeadencryptresponse",3],["result",6]]]],[11,"decrypt","","",75,[[["aeaddecryptrequest",3]],[["aeaddecryptresponse",3],["result",6]]]],[11,"encrypt_deterministically","","",75,[[["deterministicaeadencryptrequest",3]],[["result",6],["deterministicaeadencryptresponse",3]]]],[11,"decrypt_deterministically","","",75,[[["deterministicaeaddecryptrequest",3]],[["deterministicaeaddecryptresponse",3],["result",6]]]],[11,"compute_mac","","",75,[[["computemacrequest",3]],[["result",6],["computemacresponse",3]]]],[11,"verify_mac","","",75,[[["verifymacrequest",3]],[["verifymacresponse",3],["result",6]]]],[11,"compute_prf","","",75,[[["computeprfrequest",3]],[["result",6],["computeprfresponse",3]]]],[11,"sign","","",75,[[["signaturesignrequest",3]],[["signaturesignresponse",3],["result",6]]]],[11,"verify","","",75,[[["signatureverifyrequest",3]],[["signatureverifyresponse",3],["result",6]]]],[0,"invocation","oak::proto::oak","",null,null],[3,"GrpcInvocation","oak::proto::oak::invocation","A gRPC invocation, consisting of exactly two channels: one…",null,null],[12,"receiver","","",81,null],[12,"sender","","",81,null],[3,"GrpcInvocationSender","","A wrapper for sending a [`GrpcInvocation`] over a channel.",null,null],[12,"sender","","",82,null],[3,"GrpcInvocationReceiver","","A wrapper for receiving a [`GrpcInvocation`] from a channel.",null,null],[12,"receiver","","",83,null],[3,"HttpInvocation","","An HTTP invocation, consisting of exactly two channels:…",null,null],[12,"receiver","","",84,null],[12,"sender","","",84,null],[3,"HttpInvocationSource","","Source of an HTTP invocation, consisting of exactly two…",null,null],[12,"sender","","",85,null],[12,"receiver","","",85,null],[3,"HttpInvocationSender","","A wrapper for sending an [`HttpInvocation`] over a channel.",null,null],[12,"sender","","",86,null],[0,"storage","oak::proto::oak","",null,null],[3,"StorageItem","oak::proto::oak::storage","",null,null],[12,"name","","",87,null],[12,"value","","",87,null],[12,"label","","",87,null],[3,"StorageChannelReadRequest","","",null,null],[12,"storage_name","","",88,null],[12,"transaction_id","","",88,null],[12,"item","","",88,null],[3,"StorageChannelReadResponse","","",null,null],[12,"item","","",89,null],[3,"StorageChannelWriteRequest","","",null,null],[12,"storage_name","","",90,null],[12,"transaction_id","","",90,null],[12,"item","","",90,null],[3,"StorageChannelWriteResponse","","",null,null],[3,"StorageChannelDeleteRequest","","",null,null],[12,"storage_name","","",91,null],[12,"transaction_id","","",91,null],[12,"item","","",91,null],[3,"StorageChannelDeleteResponse","","",null,null],[3,"StorageChannelBeginRequest","","",null,null],[12,"storage_name","","",92,null],[3,"StorageChannelBeginResponse","","",null,null],[12,"transaction_id","","",93,null],[3,"StorageChannelCommitRequest","","",null,null],[12,"storage_name","","",94,null],[12,"transaction_id","","",94,null],[3,"StorageChannelCommitResponse","","",null,null],[3,"StorageChannelRollbackRequest","","",null,null],[12,"storage_name","","",95,null],[12,"storage_id","","",95,null],[12,"transaction_id","","",95,null],[3,"StorageChannelRollbackResponse","","",null,null],[3,"StorageServiceDispatcher","","",null,null],[3,"StorageServiceClient","","",null,null],[12,"0","","",96,null],[8,"StorageService","","",null,null],[10,"read","","",97,[[["storagechannelreadrequest",3]],[["result",6],["storagechannelreadresponse",3]]]],[10,"write","","",97,[[["storagechannelwriterequest",3]],[["result",6],["storagechannelwriteresponse",3]]]],[10,"delete","","",97,[[["storagechanneldeleterequest",3]],[["storagechanneldeleteresponse",3],["result",6]]]],[10,"begin","","",97,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelbeginresponse",3]]]],[10,"commit","","",97,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelcommitresponse",3]]]],[10,"rollback","","",97,[[["storagechannelrollbackrequest",3]],[["result",6],["storagechannelrollbackresponse",3]]]],[11,"server_method","","",98,[[],[["option",4],["invocable",8]]]],[11,"read","","",96,[[["storagechannelreadrequest",3]],[["result",6],["storagechannelreadresponse",3]]]],[11,"write","","",96,[[["storagechannelwriterequest",3]],[["result",6],["storagechannelwriteresponse",3]]]],[11,"delete","","",96,[[["storagechanneldeleterequest",3]],[["storagechanneldeleteresponse",3],["result",6]]]],[11,"begin","","",96,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelbeginresponse",3]]]],[11,"commit","","",96,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelcommitresponse",3]]]],[11,"rollback","","",96,[[["storagechannelrollbackrequest",3]],[["result",6],["storagechannelrollbackresponse",3]]]],[0,"roughtime","oak::proto::oak","",null,null],[3,"GetRoughtimeRequest","oak::proto::oak::roughtime","",null,null],[3,"Roughtime","","",null,null],[12,"roughtime_usec","","Time is UTC and is given as microseconds since the UNIX…",99,null],[3,"RoughtimeServiceDispatcher","","",null,null],[3,"RoughtimeServiceClient","","",null,null],[12,"0","","",100,null],[8,"RoughtimeService","","",null,null],[10,"get_roughtime","","",101,[[["getroughtimerequest",3]],[["roughtime",3],["result",6]]]],[11,"server_method","","",102,[[],[["option",4],["invocable",8]]]],[11,"get_roughtime","","",100,[[["getroughtimerequest",3]],[["roughtime",3],["result",6]]]],[8,"CommandHandler","oak","Trait implemented by Oak Nodes (or parts thereof) that…",null,null],[16,"Command","","Type of the command that is handled by this instance.",103,null],[10,"handle_command","","Handles a single command instance.",103,[[],["result",6]]],[8,"WasmEntrypoint","","Trait implemented by structs that correspond to entrypoint…",null,null],[18,"ENTRYPOINT_NAME","","Name of the WebAssembly exported function that corresponds…",104,null],[16,"Message","","Type of message that the Node accepts on its inbound…",104,null],[8,"WithInit","","Trait implemented by structs that require an…",null,null],[16,"Init","","",105,null],[10,"create","","Creates an instance of this struct based on the provided…",105,[[]]],[14,"impl_dispatcher","","Implements the [`ServerNode`] trait for the specified type…",null,null],[14,"entrypoint","","Register a new Node entrypoint.",null,null],[14,"entrypoint_command_handler","","Similar to [`entrypoint`], but offers a less verbose API…",null,null],[14,"entrypoint_command_handler_init","","Similar to [`entrypoint_command_handler`], but for nodes…",null,null],[11,"from","oak::proto::oak::label","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"decode","","",0,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",0,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","oak::crypto","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","oak::grpc","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"decode","","",10,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",10,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"decode","","",11,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",11,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","oak::handle","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","oak::http::server","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"decode","","",21,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",21,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"decode","","",22,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",22,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak::io","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"decode","","",26,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",26,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"decode","","",27,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",27,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak::rand","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","oak::roughtime","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","oak::storage","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","oak::proto::oak::application","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","oak::proto::oak::application::node_configuration","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","oak::proto::oak::application","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"decode","","",44,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",44,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak::proto::oak::label","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","oak::proto::oak::label::tag","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","oak::proto::oak::label","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","oak::proto::oak::crypto","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"decode","","",51,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",51,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"decode","","",52,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",52,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"decode","","",53,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",53,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"decode","","",54,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",54,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"decode","","",55,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",55,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"decode","","",56,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",56,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"decode","","",57,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",57,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"decode","","",58,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",58,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"decode","","",59,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",59,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"decode","","",60,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",60,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"decode","","",61,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",61,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"decode","","",62,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",62,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"decode","","",63,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",63,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"decode","","",64,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",64,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"decode","","",65,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",65,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"decode","","",66,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",66,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"decode","","",67,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",67,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"decode","","",110,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",110,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"decode","","",68,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",68,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"decode","","",69,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",69,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"decode","","",70,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",70,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"decode","","",71,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",71,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"decode","","",72,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",72,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"decode","","",73,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",73,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"decode","","",74,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",74,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"decode","","",111,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",111,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","oak::proto::oak::crypto::keyset_generate_request","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","oak::proto::oak::invocation","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"decode","","",81,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",81,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"decode","","",82,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",82,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"decode","","",83,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",83,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"decode","","",84,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",84,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"decode","","",85,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",85,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"decode","","",86,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",86,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak::proto::oak::storage","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"decode","","",87,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",87,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"decode","","",88,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",88,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"decode","","",89,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",89,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"decode","","",90,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",90,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"decode","","",112,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",112,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"decode","","",91,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",91,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"decode","","",113,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",113,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"decode","","",92,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",92,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"decode","","",93,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",93,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"decode","","",94,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",94,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"decode","","",114,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",114,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"decode","","",95,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",95,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"decode","","",115,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",115,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","oak::proto::oak::roughtime","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"decode","","",116,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",116,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"decode","","",99,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",99,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"serialize","oak::proto::oak::label","",49,[[],["result",4]]],[11,"serialize","oak::proto::oak::label::tag","",46,[[],["result",4]]],[11,"serialize","oak::proto::oak::label","",45,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",109,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"hash","","",49,[[]]],[11,"hash","oak","",1,[[]]],[11,"hash","oak::proto::oak::label","",50,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",48,[[]]],[11,"hash","oak::proto::oak::label::tag","",46,[[]]],[11,"hash","oak","",2,[[]]],[11,"hash","oak::proto::oak::label","",109,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",0,[[]]],[11,"cmp","oak","",2,[[["oakstatus",4]],["ordering",4]]],[11,"cmp","","",1,[[["channelreadstatus",4]],["ordering",4]]],[11,"eq","oak::proto::oak::application","",41,[[["httpserverconfiguration",3]]]],[11,"ne","","",41,[[["httpserverconfiguration",3]]]],[11,"eq","","",40,[[["roughtimeclientconfiguration",3]]]],[11,"ne","","",40,[[["roughtimeclientconfiguration",3]]]],[11,"eq","","",39,[[["grpcclientconfiguration",3]]]],[11,"ne","","",39,[[["grpcclientconfiguration",3]]]],[11,"eq","","",38,[[["grpcserverconfiguration",3]]]],[11,"ne","","",38,[[["grpcserverconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",109,[[["top",3]]]],[11,"eq","oak::proto::oak::application","",42,[[["httpclientconfiguration",3]]]],[11,"ne","","",42,[[["httpclientconfiguration",3]]]],[11,"eq","","",43,[[["roughtimeserver",3]]]],[11,"ne","","",43,[[["roughtimeserver",3]]]],[11,"eq","oak::proto::oak::label","",47,[[["webassemblymoduletag",3]]]],[11,"ne","","",47,[[["webassemblymoduletag",3]]]],[11,"eq","oak::proto::oak::application","",36,[[["webassemblyconfiguration",3]]]],[11,"ne","","",36,[[["webassemblyconfiguration",3]]]],[11,"eq","oak::proto::oak::application::node_configuration","",35,[[["configtype",4]]]],[11,"ne","","",35,[[["configtype",4]]]],[11,"eq","oak","",1,[[["channelreadstatus",4]]]],[11,"eq","oak::proto::oak::application","",34,[[["nodeconfiguration",3]]]],[11,"ne","","",34,[[["nodeconfiguration",3]]]],[11,"eq","","",107,[[["logconfiguration",3]]]],[11,"eq","","",32,[[["applicationconfiguration",3]]]],[11,"ne","","",32,[[["applicationconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",45,[[["tag",3]]]],[11,"ne","","",45,[[["tag",3]]]],[11,"eq","oak::proto::oak::application","",33,[[["modulesignature",3]]]],[11,"ne","","",33,[[["modulesignature",3]]]],[11,"eq","oak::proto::oak::label","",49,[[["tlsendpointtag",3]]]],[11,"ne","","",49,[[["tlsendpointtag",3]]]],[11,"eq","oak::proto::oak::application","",37,[[["storageproxyconfiguration",3]]]],[11,"ne","","",37,[[["storageproxyconfiguration",3]]]],[11,"eq","","",44,[[["configmap",3]]]],[11,"ne","","",44,[[["configmap",3]]]],[11,"eq","oak::proto::oak::label","",0,[[["label",3]]]],[11,"ne","","",0,[[["label",3]]]],[11,"eq","oak::proto::oak::label::tag","",46,[[["tag",4]]]],[11,"ne","","",46,[[["tag",4]]]],[11,"eq","oak","",2,[[["oakstatus",4]]]],[11,"eq","oak::proto::oak::label","",48,[[["webassemblymodulesignaturetag",3]]]],[11,"ne","","",48,[[["webassemblymodulesignaturetag",3]]]],[11,"eq","","",50,[[["publickeyidentitytag",3]]]],[11,"ne","","",50,[[["publickeyidentitytag",3]]]],[11,"eq","oak::proto::oak::application","",108,[[["cryptoconfiguration",3]]]],[11,"partial_cmp","oak","",1,[[["channelreadstatus",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["oakstatus",4]],[["option",4],["ordering",4]]]],[11,"encode_raw","oak::proto::oak::label","",47,[[]]],[11,"merge_field","","",47,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",47,[[]]],[11,"clear","","",47,[[]]],[11,"encode_raw","oak::proto::oak::application","",43,[[]]],[11,"merge_field","","",43,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",43,[[]]],[11,"clear","","",43,[[]]],[11,"encode_raw","oak::proto::oak::label","",49,[[]]],[11,"merge_field","","",49,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",49,[[]]],[11,"clear","","",49,[[]]],[11,"encode_raw","oak::proto::oak::application","",108,[[]]],[11,"merge_field","","",108,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",108,[[]]],[11,"clear","","",108,[[]]],[11,"encode_raw","oak::proto::oak::label","",48,[[]]],[11,"merge_field","","",48,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",48,[[]]],[11,"clear","","",48,[[]]],[11,"encode_raw","oak::proto::oak::application","",37,[[]]],[11,"merge_field","","",37,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",37,[[]]],[11,"clear","","",37,[[]]],[11,"encode_raw","oak::proto::oak::label","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","oak::proto::oak::application","",42,[[]]],[11,"merge_field","","",42,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",42,[[]]],[11,"clear","","",42,[[]]],[11,"encode_raw","","",36,[[]]],[11,"merge_field","","",36,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",36,[[]]],[11,"clear","","",36,[[]]],[11,"encode_raw","","",33,[[]]],[11,"merge_field","","",33,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",33,[[]]],[11,"clear","","",33,[[]]],[11,"encode_raw","","",39,[[]]],[11,"merge_field","","",39,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",39,[[]]],[11,"clear","","",39,[[]]],[11,"encode_raw","","",41,[[]]],[11,"merge_field","","",41,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",41,[[]]],[11,"clear","","",41,[[]]],[11,"encode_raw","","",44,[[]]],[11,"merge_field","","",44,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",44,[[]]],[11,"clear","","",44,[[]]],[11,"encode_raw","","",38,[[]]],[11,"merge_field","","",38,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",38,[[]]],[11,"clear","","",38,[[]]],[11,"encode_raw","","",34,[[]]],[11,"merge_field","","",34,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",34,[[]]],[11,"clear","","",34,[[]]],[11,"encode_raw","","",32,[[]]],[11,"merge_field","","",32,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",32,[[]]],[11,"clear","","",32,[[]]],[11,"encode_raw","","",107,[[]]],[11,"merge_field","","",107,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",107,[[]]],[11,"clear","","",107,[[]]],[11,"encode_raw","oak::proto::oak::label","",109,[[]]],[11,"merge_field","","",109,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",109,[[]]],[11,"clear","","",109,[[]]],[11,"encode_raw","","",45,[[]]],[11,"merge_field","","",45,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",45,[[]]],[11,"clear","","",45,[[]]],[11,"encode_raw","","",50,[[]]],[11,"merge_field","","",50,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",50,[[]]],[11,"clear","","",50,[[]]],[11,"encode_raw","oak::proto::oak::application","",40,[[]]],[11,"merge_field","","",40,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",40,[[]]],[11,"clear","","",40,[[]]],[11,"clone","oak::proto::oak::application::node_configuration","",35,[[],["configtype",4]]],[11,"clone","oak::proto::oak::application","",43,[[],["roughtimeserver",3]]],[11,"clone","","",44,[[],["configmap",3]]],[11,"clone","oak::proto::oak::label","",45,[[],["tag",3]]],[11,"clone","oak::proto::oak::application","",37,[[],["storageproxyconfiguration",3]]],[11,"clone","","",38,[[],["grpcserverconfiguration",3]]],[11,"clone","oak","",2,[[],["oakstatus",4]]],[11,"clone","oak::proto::oak::application","",39,[[],["grpcclientconfiguration",3]]],[11,"clone","oak::proto::oak::label","",48,[[],["webassemblymodulesignaturetag",3]]],[11,"clone","oak","",1,[[],["channelreadstatus",4]]],[11,"clone","oak::proto::oak::label","",50,[[],["publickeyidentitytag",3]]],[11,"clone","oak::proto::oak::application","",36,[[],["webassemblyconfiguration",3]]],[11,"clone","oak::proto::oak::label","",49,[[],["tlsendpointtag",3]]],[11,"clone","oak::proto::oak::label::tag","",46,[[],["tag",4]]],[11,"clone","oak::proto::oak::label","",109,[[],["top",3]]],[11,"clone","oak::proto::oak::application","",40,[[],["roughtimeclientconfiguration",3]]],[11,"clone","","",42,[[],["httpclientconfiguration",3]]],[11,"clone","oak::proto::oak::label","",0,[[],["label",3]]],[11,"clone","oak::proto::oak::application","",33,[[],["modulesignature",3]]],[11,"clone","","",34,[[],["nodeconfiguration",3]]],[11,"clone","","",108,[[],["cryptoconfiguration",3]]],[11,"clone","oak::proto::oak::label","",47,[[],["webassemblymoduletag",3]]],[11,"clone","oak::proto::oak::application","",41,[[],["httpserverconfiguration",3]]],[11,"clone","","",32,[[],["applicationconfiguration",3]]],[11,"clone","","",107,[[],["logconfiguration",3]]],[11,"default","oak::proto::oak::label","",47,[[],["webassemblymoduletag",3]]],[11,"default","oak::proto::oak::application","",40,[[],["roughtimeclientconfiguration",3]]],[11,"default","oak::proto::oak::label","",0,[[],["label",3]]],[11,"default","","",109,[[],["top",3]]],[11,"default","","",49,[[],["tlsendpointtag",3]]],[11,"default","oak::proto::oak::application","",39,[[],["grpcclientconfiguration",3]]],[11,"default","oak::proto::oak::label","",48,[[],["webassemblymodulesignaturetag",3]]],[11,"default","oak::proto::oak::application","",36,[[],["webassemblyconfiguration",3]]],[11,"default","","",32,[[],["applicationconfiguration",3]]],[11,"default","oak::proto::oak::label","",45,[[],["tag",3]]],[11,"default","oak::proto::oak::application","",44,[[],["configmap",3]]],[11,"default","oak","",2,[[],["oakstatus",4]]],[11,"default","oak::proto::oak::application","",42,[[],["httpclientconfiguration",3]]],[11,"default","oak::proto::oak::label","",50,[[],["publickeyidentitytag",3]]],[11,"default","oak::proto::oak::application","",37,[[],["storageproxyconfiguration",3]]],[11,"default","","",33,[[],["modulesignature",3]]],[11,"default","oak","",1,[[],["channelreadstatus",4]]],[11,"default","oak::proto::oak::application","",34,[[],["nodeconfiguration",3]]],[11,"default","","",41,[[],["httpserverconfiguration",3]]],[11,"default","","",38,[[],["grpcserverconfiguration",3]]],[11,"default","","",43,[[],["roughtimeserver",3]]],[11,"default","","",108,[[],["cryptoconfiguration",3]]],[11,"default","","",107,[[],["logconfiguration",3]]],[11,"deserialize","oak::proto::oak::label","",45,[[],[["tag",3],["result",4]]]],[11,"deserialize","","",50,[[],[["result",4],["publickeyidentitytag",3]]]],[11,"deserialize","","",109,[[],[["result",4],["top",3]]]],[11,"deserialize","","",49,[[],[["tlsendpointtag",3],["result",4]]]],[11,"deserialize","","",48,[[],[["webassemblymodulesignaturetag",3],["result",4]]]],[11,"deserialize","","",47,[[],[["webassemblymoduletag",3],["result",4]]]],[11,"deserialize","oak::proto::oak::label::tag","",46,[[],[["result",4],["tag",4]]]],[11,"deserialize","oak::proto::oak::label","",0,[[],[["label",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application::node_configuration","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label::tag","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::application","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::proto::oak::label","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",5,[[["error",3]],["oakerror",4]]],[11,"from","","",5,[[["oakstatus",4]],["oakerror",4]]],[11,"from","","",5,[[["decodeerror",3]],["oakerror",4]]],[11,"from","oak::io","",26,[[["readhandle",3]],["receiver",3]]],[11,"from","oak","",4,[[],["writehandle",3]]],[11,"from","","",3,[[],["readhandle",3]]],[11,"from","","",5,[[["encodeerror",3]],["oakerror",4]]],[11,"eq","","",4,[[["writehandle",3]]]],[11,"ne","","",4,[[["writehandle",3]]]],[11,"eq","oak::io","",25,[[["message",3]]]],[11,"ne","","",25,[[["message",3]]]],[11,"eq","oak","",3,[[["readhandle",3]]]],[11,"ne","","",3,[[["readhandle",3]]]],[11,"eq","oak::handle","",18,[[["receiver",3]]]],[11,"ne","","",18,[[["receiver",3]]]],[11,"eq","","",19,[[["sender",3]]]],[11,"ne","","",19,[[["sender",3]]]],[11,"eq","oak::io","",27,[[["sender",3]]]],[11,"ne","","",27,[[["sender",3]]]],[11,"eq","","",26,[[["receiver",3]]]],[11,"ne","","",26,[[["receiver",3]]]],[11,"clone","oak::handle","",18,[[],["receiver",3]]],[11,"clone","oak::io","",27,[[],["sender",3]]],[11,"clone","oak","",4,[[],["writehandle",3]]],[11,"clone","oak::io","",25,[[],["message",3]]],[11,"clone","","",26,[[],["receiver",3]]],[11,"clone","oak","",3,[[],["readhandle",3]]],[11,"clone","oak::handle","",19,[[],["sender",3]]],[11,"fold","oak::proto::oak::label","",0,[[]]],[11,"fold","oak::io","",26,[[]]],[11,"fold","oak::proto::oak::application","",44,[[]]],[11,"fold","oak::io","",27,[[]]],[11,"encoded_len","","",26,[[]]],[11,"clear","","",26,[[]]],[11,"encode_raw","","",26,[[]]],[11,"merge_field","","",26,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encode_raw","oak::handle","",18,[[]]],[11,"merge_field","","",18,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",18,[[]]],[11,"clear","","",18,[[]]],[11,"encode_raw","","",19,[[]]],[11,"merge_field","","",19,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",19,[[]]],[11,"clear","","",19,[[]]],[11,"encoded_len","oak::io","",27,[[]]],[11,"clear","","",27,[[]]],[11,"encode_raw","","",27,[[]]],[11,"merge_field","","",27,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"default","oak::handle","",19,[[],["sender",3]]],[11,"default","oak::io","",27,[[],["sender",3]]],[11,"default","","",26,[[],["receiver",3]]],[11,"default","oak::handle","",18,[[],["receiver",3]]],[11,"fmt","oak::io","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::handle","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::io","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::io","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"into_iter","oak::http::server","Convert into an iterator over (http::header::HeaderName,…",20,[[]]],[11,"from","","",22,[[["response",3]],["httpresponse",3]]],[11,"from","","",20,[[["headervalue",3],["headermap",3]],["headermap",3]]],[11,"from","","",21,[[["request",3],["vec",3]],["httprequest",3]]],[11,"hash","oak::grpc","",9,[[]]],[11,"cmp","","",9,[[["code",4]],["ordering",4]]],[11,"eq","","",8,[[["status",3]]]],[11,"ne","","",8,[[["status",3]]]],[11,"eq","","",11,[[["grpcresponse",3]]]],[11,"ne","","",11,[[["grpcresponse",3]]]],[11,"eq","","",10,[[["grpcrequest",3]]]],[11,"ne","","",10,[[["grpcrequest",3]]]],[11,"eq","","",9,[[["code",4]]]],[11,"eq","oak::http::server","",21,[[["httprequest",3]]]],[11,"ne","","",21,[[["httprequest",3]]]],[11,"eq","","",20,[[["headermap",3]]]],[11,"ne","","",20,[[["headermap",3]]]],[11,"eq","","",22,[[["httpresponse",3]]]],[11,"ne","","",22,[[["httpresponse",3]]]],[11,"partial_cmp","oak::grpc","",9,[[["code",4]],[["option",4],["ordering",4]]]],[11,"fold","oak::http::server","",21,[[]]],[11,"fold","oak::grpc","",10,[[]]],[11,"fold","oak::http::server","",22,[[]]],[11,"fold","oak::grpc","",11,[[]]],[11,"clone","oak::http::server","",22,[[],["httpresponse",3]]],[11,"clone","oak::grpc","",9,[[],["code",4]]],[11,"clone","oak::http::server","",21,[[],["httprequest",3]]],[11,"clone","oak::grpc","",11,[[],["grpcresponse",3]]],[11,"clone","","",8,[[],["status",3]]],[11,"clone","","",10,[[],["grpcrequest",3]]],[11,"clone","oak::http::server","",20,[[],["headermap",3]]],[11,"default","","",20,[[],["headermap",3]]],[11,"default","","",22,[[],["httpresponse",3]]],[11,"default","oak::grpc","",10,[[],["grpcrequest",3]]],[11,"default","","",11,[[],["grpcresponse",3]]],[11,"default","","",9,[[],["code",4]]],[11,"default","oak::http::server","",21,[[],["httprequest",3]]],[11,"default","oak::grpc","",8,[[],["status",3]]],[11,"fmt","oak::http::server","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::grpc","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"encode_raw","","",11,[[]]],[11,"merge_field","","",11,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",11,[[]]],[11,"clear","","",11,[[]]],[11,"encode_raw","","",8,[[]]],[11,"merge_field","","",8,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","oak::http::server","",21,[[]]],[11,"merge_field","","",21,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",21,[[]]],[11,"clear","","",21,[[]]],[11,"encode_raw","oak::grpc","",10,[[]]],[11,"merge_field","","",10,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",10,[[]]],[11,"clear","","",10,[[]]],[11,"encode_raw","oak::http::server","",22,[[]]],[11,"merge_field","","",22,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",22,[[]]],[11,"clear","","",22,[[]]],[11,"encode_raw","","",20,[[]]],[11,"merge_field","","",20,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",20,[[]]],[11,"clear","","",20,[[]]],[11,"invoke","oak::grpc","",13,[[["channelresponsewriter",3]]]],[11,"close","oak::io","",26,[[],[["result",4],["oakstatus",4]]]],[11,"receive","","",26,[[],[["result",4],["oakerror",4]]]],[11,"receive_with_downgrade","","",26,[[],[["result",4],["oakerror",4]]]],[11,"try_receive","","",26,[[],[["result",4],["oakerror",4]]]],[11,"try_receive_with_downgrade","","",26,[[],[["result",4],["oakerror",4]]]],[11,"label","","",26,[[],[["result",4],["label",3],["oakerror",4]]]],[11,"wait","","",26,[[],[["result",4],["channelreadstatus",4],["oakstatus",4]]]],[11,"iter","","",26,[[],["receiveriterator",3]]],[11,"close","","",27,[[],[["result",4],["oakstatus",4]]]],[11,"send","","",27,[[],[["result",4],["oakerror",4]]]],[11,"send_with_downgrade","","",27,[[],[["result",4],["oakerror",4]]]],[11,"label","","",27,[[],[["result",4],["label",3],["oakerror",4]]]],[11,"drop","oak::proto::oak::invocation","",84,[[]]],[11,"drop","","",85,[[]]],[11,"clone","oak::grpc","",12,[[],["writemode",4]]],[11,"clone","oak::rand","",106,[[],["oakrng",3]]],[11,"clone","oak::proto::oak::crypto","",51,[[],["keytemplate",3]]],[11,"clone","","",52,[[],["keysetgeneraterequest",3]]],[11,"clone","oak::proto::oak::crypto::keyset_generate_request","",78,[[],["templateid",4]]],[11,"clone","oak::proto::oak::crypto","",53,[[],["keysetresponse",3]]],[11,"clone","","",54,[[],["keysetpublicrequest",3]]],[11,"clone","","",55,[[],["keysetunbindrequest",3]]],[11,"clone","","",56,[[],["keysetbindrequest",3]]],[11,"clone","","",57,[[],["keysetbindresponse",3]]],[11,"clone","","",58,[[],["kmsproxyrequest",3]]],[11,"clone","","",59,[[],["aeadencryptrequest",3]]],[11,"clone","","",60,[[],["aeadencryptresponse",3]]],[11,"clone","","",61,[[],["aeaddecryptrequest",3]]],[11,"clone","","",62,[[],["aeaddecryptresponse",3]]],[11,"clone","","",63,[[],["deterministicaeadencryptrequest",3]]],[11,"clone","","",64,[[],["deterministicaeadencryptresponse",3]]],[11,"clone","","",65,[[],["deterministicaeaddecryptrequest",3]]],[11,"clone","","",66,[[],["deterministicaeaddecryptresponse",3]]],[11,"clone","","",67,[[],["verifymacrequest",3]]],[11,"clone","","",110,[[],["verifymacresponse",3]]],[11,"clone","","",68,[[],["computemacrequest",3]]],[11,"clone","","",69,[[],["computemacresponse",3]]],[11,"clone","","",70,[[],["computeprfrequest",3]]],[11,"clone","","",71,[[],["computeprfresponse",3]]],[11,"clone","","",72,[[],["signaturesignrequest",3]]],[11,"clone","","",73,[[],["signaturesignresponse",3]]],[11,"clone","","",74,[[],["signatureverifyrequest",3]]],[11,"clone","","",111,[[],["signatureverifyresponse",3]]],[11,"clone","","",76,[[],["outputprefixtype",4]]],[11,"clone","","",77,[[],["keysetformat",4]]],[11,"clone","oak::proto::oak::invocation","",81,[[],["grpcinvocation",3]]],[11,"clone","","",82,[[],["grpcinvocationsender",3]]],[11,"clone","","",83,[[],["grpcinvocationreceiver",3]]],[11,"clone","","",84,[[],["httpinvocation",3]]],[11,"clone","","",85,[[],["httpinvocationsource",3]]],[11,"clone","","",86,[[],["httpinvocationsender",3]]],[11,"clone","oak::proto::oak::storage","",87,[[],["storageitem",3]]],[11,"clone","","",88,[[],["storagechannelreadrequest",3]]],[11,"clone","","",89,[[],["storagechannelreadresponse",3]]],[11,"clone","","",90,[[],["storagechannelwriterequest",3]]],[11,"clone","","",112,[[],["storagechannelwriteresponse",3]]],[11,"clone","","",91,[[],["storagechanneldeleterequest",3]]],[11,"clone","","",113,[[],["storagechanneldeleteresponse",3]]],[11,"clone","","",92,[[],["storagechannelbeginrequest",3]]],[11,"clone","","",93,[[],["storagechannelbeginresponse",3]]],[11,"clone","","",94,[[],["storagechannelcommitrequest",3]]],[11,"clone","","",114,[[],["storagechannelcommitresponse",3]]],[11,"clone","","",95,[[],["storagechannelrollbackrequest",3]]],[11,"clone","","",115,[[],["storagechannelrollbackresponse",3]]],[11,"clone","oak::proto::oak::roughtime","",116,[[],["getroughtimerequest",3]]],[11,"clone","","",99,[[],["roughtime",3]]],[11,"default","oak::proto::oak::crypto","",51,[[],["keytemplate",3]]],[11,"default","","",52,[[],["keysetgeneraterequest",3]]],[11,"default","","",53,[[],["keysetresponse",3]]],[11,"default","","",54,[[],["keysetpublicrequest",3]]],[11,"default","","",55,[[],["keysetunbindrequest",3]]],[11,"default","","",56,[[],["keysetbindrequest",3]]],[11,"default","","",57,[[],["keysetbindresponse",3]]],[11,"default","","",58,[[],["kmsproxyrequest",3]]],[11,"default","","",59,[[],["aeadencryptrequest",3]]],[11,"default","","",60,[[],["aeadencryptresponse",3]]],[11,"default","","",61,[[],["aeaddecryptrequest",3]]],[11,"default","","",62,[[],["aeaddecryptresponse",3]]],[11,"default","","",63,[[],["deterministicaeadencryptrequest",3]]],[11,"default","","",64,[[],["deterministicaeadencryptresponse",3]]],[11,"default","","",65,[[],["deterministicaeaddecryptrequest",3]]],[11,"default","","",66,[[],["deterministicaeaddecryptresponse",3]]],[11,"default","","",67,[[],["verifymacrequest",3]]],[11,"default","","",110,[[],["verifymacresponse",3]]],[11,"default","","",68,[[],["computemacrequest",3]]],[11,"default","","",69,[[],["computemacresponse",3]]],[11,"default","","",70,[[],["computeprfrequest",3]]],[11,"default","","",71,[[],["computeprfresponse",3]]],[11,"default","","",72,[[],["signaturesignrequest",3]]],[11,"default","","",73,[[],["signaturesignresponse",3]]],[11,"default","","",74,[[],["signatureverifyrequest",3]]],[11,"default","","",111,[[],["signatureverifyresponse",3]]],[11,"default","","",76,[[],["outputprefixtype",4]]],[11,"default","","",77,[[],["keysetformat",4]]],[11,"default","oak::proto::oak::invocation","",81,[[],["grpcinvocation",3]]],[11,"default","","",82,[[],["grpcinvocationsender",3]]],[11,"default","","",83,[[],["grpcinvocationreceiver",3]]],[11,"default","","",84,[[],["httpinvocation",3]]],[11,"default","","",85,[[],["httpinvocationsource",3]]],[11,"default","","",86,[[],["httpinvocationsender",3]]],[11,"default","oak::proto::oak::storage","",87,[[],["storageitem",3]]],[11,"default","","",88,[[],["storagechannelreadrequest",3]]],[11,"default","","",89,[[],["storagechannelreadresponse",3]]],[11,"default","","",90,[[],["storagechannelwriterequest",3]]],[11,"default","","",112,[[],["storagechannelwriteresponse",3]]],[11,"default","","",91,[[],["storagechanneldeleterequest",3]]],[11,"default","","",113,[[],["storagechanneldeleteresponse",3]]],[11,"default","","",92,[[],["storagechannelbeginrequest",3]]],[11,"default","","",93,[[],["storagechannelbeginresponse",3]]],[11,"default","","",94,[[],["storagechannelcommitrequest",3]]],[11,"default","","",114,[[],["storagechannelcommitresponse",3]]],[11,"default","","",95,[[],["storagechannelrollbackrequest",3]]],[11,"default","","",115,[[],["storagechannelrollbackresponse",3]]],[11,"default","oak::proto::oak::roughtime","",116,[[],["getroughtimerequest",3]]],[11,"default","","",99,[[],["roughtime",3]]],[11,"cmp","oak::proto::oak::crypto","",76,[[["outputprefixtype",4]],["ordering",4]]],[11,"cmp","","",77,[[["keysetformat",4]],["ordering",4]]],[11,"eq","oak::grpc","",12,[[["writemode",4]]]],[11,"eq","oak::proto::oak::crypto","",51,[[["keytemplate",3]]]],[11,"ne","","",51,[[["keytemplate",3]]]],[11,"eq","","",52,[[["keysetgeneraterequest",3]]]],[11,"ne","","",52,[[["keysetgeneraterequest",3]]]],[11,"eq","oak::proto::oak::crypto::keyset_generate_request","",78,[[["templateid",4]]]],[11,"ne","","",78,[[["templateid",4]]]],[11,"eq","oak::proto::oak::crypto","",53,[[["keysetresponse",3]]]],[11,"ne","","",53,[[["keysetresponse",3]]]],[11,"eq","","",54,[[["keysetpublicrequest",3]]]],[11,"ne","","",54,[[["keysetpublicrequest",3]]]],[11,"eq","","",55,[[["keysetunbindrequest",3]]]],[11,"ne","","",55,[[["keysetunbindrequest",3]]]],[11,"eq","","",56,[[["keysetbindrequest",3]]]],[11,"ne","","",56,[[["keysetbindrequest",3]]]],[11,"eq","","",57,[[["keysetbindresponse",3]]]],[11,"ne","","",57,[[["keysetbindresponse",3]]]],[11,"eq","","",58,[[["kmsproxyrequest",3]]]],[11,"ne","","",58,[[["kmsproxyrequest",3]]]],[11,"eq","","",59,[[["aeadencryptrequest",3]]]],[11,"ne","","",59,[[["aeadencryptrequest",3]]]],[11,"eq","","",60,[[["aeadencryptresponse",3]]]],[11,"ne","","",60,[[["aeadencryptresponse",3]]]],[11,"eq","","",61,[[["aeaddecryptrequest",3]]]],[11,"ne","","",61,[[["aeaddecryptrequest",3]]]],[11,"eq","","",62,[[["aeaddecryptresponse",3]]]],[11,"ne","","",62,[[["aeaddecryptresponse",3]]]],[11,"eq","","",63,[[["deterministicaeadencryptrequest",3]]]],[11,"ne","","",63,[[["deterministicaeadencryptrequest",3]]]],[11,"eq","","",64,[[["deterministicaeadencryptresponse",3]]]],[11,"ne","","",64,[[["deterministicaeadencryptresponse",3]]]],[11,"eq","","",65,[[["deterministicaeaddecryptrequest",3]]]],[11,"ne","","",65,[[["deterministicaeaddecryptrequest",3]]]],[11,"eq","","",66,[[["deterministicaeaddecryptresponse",3]]]],[11,"ne","","",66,[[["deterministicaeaddecryptresponse",3]]]],[11,"eq","","",67,[[["verifymacrequest",3]]]],[11,"ne","","",67,[[["verifymacrequest",3]]]],[11,"eq","","",110,[[["verifymacresponse",3]]]],[11,"eq","","",68,[[["computemacrequest",3]]]],[11,"ne","","",68,[[["computemacrequest",3]]]],[11,"eq","","",69,[[["computemacresponse",3]]]],[11,"ne","","",69,[[["computemacresponse",3]]]],[11,"eq","","",70,[[["computeprfrequest",3]]]],[11,"ne","","",70,[[["computeprfrequest",3]]]],[11,"eq","","",71,[[["computeprfresponse",3]]]],[11,"ne","","",71,[[["computeprfresponse",3]]]],[11,"eq","","",72,[[["signaturesignrequest",3]]]],[11,"ne","","",72,[[["signaturesignrequest",3]]]],[11,"eq","","",73,[[["signaturesignresponse",3]]]],[11,"ne","","",73,[[["signaturesignresponse",3]]]],[11,"eq","","",74,[[["signatureverifyrequest",3]]]],[11,"ne","","",74,[[["signatureverifyrequest",3]]]],[11,"eq","","",111,[[["signatureverifyresponse",3]]]],[11,"eq","","",76,[[["outputprefixtype",4]]]],[11,"eq","","",77,[[["keysetformat",4]]]],[11,"eq","oak::proto::oak::invocation","",81,[[["grpcinvocation",3]]]],[11,"ne","","",81,[[["grpcinvocation",3]]]],[11,"eq","","",82,[[["grpcinvocationsender",3]]]],[11,"ne","","",82,[[["grpcinvocationsender",3]]]],[11,"eq","","",83,[[["grpcinvocationreceiver",3]]]],[11,"ne","","",83,[[["grpcinvocationreceiver",3]]]],[11,"eq","","",84,[[["httpinvocation",3]]]],[11,"ne","","",84,[[["httpinvocation",3]]]],[11,"eq","","",85,[[["httpinvocationsource",3]]]],[11,"ne","","",85,[[["httpinvocationsource",3]]]],[11,"eq","","",86,[[["httpinvocationsender",3]]]],[11,"ne","","",86,[[["httpinvocationsender",3]]]],[11,"eq","oak::proto::oak::storage","",87,[[["storageitem",3]]]],[11,"ne","","",87,[[["storageitem",3]]]],[11,"eq","","",88,[[["storagechannelreadrequest",3]]]],[11,"ne","","",88,[[["storagechannelreadrequest",3]]]],[11,"eq","","",89,[[["storagechannelreadresponse",3]]]],[11,"ne","","",89,[[["storagechannelreadresponse",3]]]],[11,"eq","","",90,[[["storagechannelwriterequest",3]]]],[11,"ne","","",90,[[["storagechannelwriterequest",3]]]],[11,"eq","","",112,[[["storagechannelwriteresponse",3]]]],[11,"eq","","",91,[[["storagechanneldeleterequest",3]]]],[11,"ne","","",91,[[["storagechanneldeleterequest",3]]]],[11,"eq","","",113,[[["storagechanneldeleteresponse",3]]]],[11,"eq","","",92,[[["storagechannelbeginrequest",3]]]],[11,"ne","","",92,[[["storagechannelbeginrequest",3]]]],[11,"eq","","",93,[[["storagechannelbeginresponse",3]]]],[11,"ne","","",93,[[["storagechannelbeginresponse",3]]]],[11,"eq","","",94,[[["storagechannelcommitrequest",3]]]],[11,"ne","","",94,[[["storagechannelcommitrequest",3]]]],[11,"eq","","",114,[[["storagechannelcommitresponse",3]]]],[11,"eq","","",95,[[["storagechannelrollbackrequest",3]]]],[11,"ne","","",95,[[["storagechannelrollbackrequest",3]]]],[11,"eq","","",115,[[["storagechannelrollbackresponse",3]]]],[11,"eq","oak::proto::oak::roughtime","",116,[[["getroughtimerequest",3]]]],[11,"eq","","",99,[[["roughtime",3]]]],[11,"ne","","",99,[[["roughtime",3]]]],[11,"partial_cmp","oak::proto::oak::crypto","",76,[[["outputprefixtype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",77,[[["keysetformat",4]],[["ordering",4],["option",4]]]],[11,"fmt","oak::grpc","",12,[[["formatter",3]],["result",6]]],[11,"fmt","oak::rand","",106,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::crypto","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::crypto::keyset_generate_request","",78,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::crypto","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::invocation","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::storage","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::roughtime","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"hash","oak::proto::oak::crypto","",76,[[]]],[11,"hash","","",77,[[]]],[11,"encode_raw","","",51,[[]]],[11,"merge_field","","",51,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",51,[[]]],[11,"clear","","",51,[[]]],[11,"encode_raw","","",52,[[]]],[11,"merge_field","","",52,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",52,[[]]],[11,"clear","","",52,[[]]],[11,"encode_raw","","",53,[[]]],[11,"merge_field","","",53,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",53,[[]]],[11,"clear","","",53,[[]]],[11,"encode_raw","","",54,[[]]],[11,"merge_field","","",54,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",54,[[]]],[11,"clear","","",54,[[]]],[11,"encode_raw","","",55,[[]]],[11,"merge_field","","",55,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",55,[[]]],[11,"clear","","",55,[[]]],[11,"encode_raw","","",56,[[]]],[11,"merge_field","","",56,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",56,[[]]],[11,"clear","","",56,[[]]],[11,"encode_raw","","",57,[[]]],[11,"merge_field","","",57,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",57,[[]]],[11,"clear","","",57,[[]]],[11,"encode_raw","","",58,[[]]],[11,"merge_field","","",58,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",58,[[]]],[11,"clear","","",58,[[]]],[11,"encode_raw","","",59,[[]]],[11,"merge_field","","",59,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",59,[[]]],[11,"clear","","",59,[[]]],[11,"encode_raw","","",60,[[]]],[11,"merge_field","","",60,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",60,[[]]],[11,"clear","","",60,[[]]],[11,"encode_raw","","",61,[[]]],[11,"merge_field","","",61,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",61,[[]]],[11,"clear","","",61,[[]]],[11,"encode_raw","","",62,[[]]],[11,"merge_field","","",62,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",62,[[]]],[11,"clear","","",62,[[]]],[11,"encode_raw","","",63,[[]]],[11,"merge_field","","",63,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",63,[[]]],[11,"clear","","",63,[[]]],[11,"encode_raw","","",64,[[]]],[11,"merge_field","","",64,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",64,[[]]],[11,"clear","","",64,[[]]],[11,"encode_raw","","",65,[[]]],[11,"merge_field","","",65,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",65,[[]]],[11,"clear","","",65,[[]]],[11,"encode_raw","","",66,[[]]],[11,"merge_field","","",66,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",66,[[]]],[11,"clear","","",66,[[]]],[11,"encode_raw","","",67,[[]]],[11,"merge_field","","",67,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",67,[[]]],[11,"clear","","",67,[[]]],[11,"encode_raw","","",110,[[]]],[11,"merge_field","","",110,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",110,[[]]],[11,"clear","","",110,[[]]],[11,"encode_raw","","",68,[[]]],[11,"merge_field","","",68,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",68,[[]]],[11,"clear","","",68,[[]]],[11,"encode_raw","","",69,[[]]],[11,"merge_field","","",69,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",69,[[]]],[11,"clear","","",69,[[]]],[11,"encode_raw","","",70,[[]]],[11,"merge_field","","",70,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",70,[[]]],[11,"clear","","",70,[[]]],[11,"encode_raw","","",71,[[]]],[11,"merge_field","","",71,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",71,[[]]],[11,"clear","","",71,[[]]],[11,"encode_raw","","",72,[[]]],[11,"merge_field","","",72,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",72,[[]]],[11,"clear","","",72,[[]]],[11,"encode_raw","","",73,[[]]],[11,"merge_field","","",73,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",73,[[]]],[11,"clear","","",73,[[]]],[11,"encode_raw","","",74,[[]]],[11,"merge_field","","",74,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",74,[[]]],[11,"clear","","",74,[[]]],[11,"encode_raw","","",111,[[]]],[11,"merge_field","","",111,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",111,[[]]],[11,"clear","","",111,[[]]],[11,"encode_raw","oak::proto::oak::invocation","",81,[[]]],[11,"merge_field","","",81,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",81,[[]]],[11,"clear","","",81,[[]]],[11,"encode_raw","","",82,[[]]],[11,"merge_field","","",82,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",82,[[]]],[11,"clear","","",82,[[]]],[11,"encode_raw","","",83,[[]]],[11,"merge_field","","",83,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",83,[[]]],[11,"clear","","",83,[[]]],[11,"encode_raw","","",84,[[]]],[11,"merge_field","","",84,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",84,[[]]],[11,"clear","","",84,[[]]],[11,"encode_raw","","",85,[[]]],[11,"merge_field","","",85,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",85,[[]]],[11,"clear","","",85,[[]]],[11,"encode_raw","","",86,[[]]],[11,"merge_field","","",86,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",86,[[]]],[11,"clear","","",86,[[]]],[11,"encode_raw","oak::proto::oak::storage","",87,[[]]],[11,"merge_field","","",87,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",87,[[]]],[11,"clear","","",87,[[]]],[11,"encode_raw","","",88,[[]]],[11,"merge_field","","",88,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",88,[[]]],[11,"clear","","",88,[[]]],[11,"encode_raw","","",89,[[]]],[11,"merge_field","","",89,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",89,[[]]],[11,"clear","","",89,[[]]],[11,"encode_raw","","",90,[[]]],[11,"merge_field","","",90,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",90,[[]]],[11,"clear","","",90,[[]]],[11,"encode_raw","","",112,[[]]],[11,"merge_field","","",112,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",112,[[]]],[11,"clear","","",112,[[]]],[11,"encode_raw","","",91,[[]]],[11,"merge_field","","",91,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",91,[[]]],[11,"clear","","",91,[[]]],[11,"encode_raw","","",113,[[]]],[11,"merge_field","","",113,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",113,[[]]],[11,"clear","","",113,[[]]],[11,"encode_raw","","",92,[[]]],[11,"merge_field","","",92,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",92,[[]]],[11,"clear","","",92,[[]]],[11,"encode_raw","","",93,[[]]],[11,"merge_field","","",93,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",93,[[]]],[11,"clear","","",93,[[]]],[11,"encode_raw","","",94,[[]]],[11,"merge_field","","",94,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",94,[[]]],[11,"clear","","",94,[[]]],[11,"encode_raw","","",114,[[]]],[11,"merge_field","","",114,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",114,[[]]],[11,"clear","","",114,[[]]],[11,"encode_raw","","",95,[[]]],[11,"merge_field","","",95,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",95,[[]]],[11,"clear","","",95,[[]]],[11,"encode_raw","","",115,[[]]],[11,"merge_field","","",115,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",115,[[]]],[11,"clear","","",115,[[]]],[11,"encode_raw","oak::proto::oak::roughtime","",116,[[]]],[11,"merge_field","","",116,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",116,[[]]],[11,"clear","","",116,[[]]],[11,"encode_raw","","",99,[[]]],[11,"merge_field","","",99,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",99,[[]]],[11,"clear","","",99,[[]]],[11,"fold","oak::proto::oak::crypto","",51,[[]]],[11,"fold","","",52,[[]]],[11,"fold","oak::proto::oak::crypto::keyset_generate_request","",78,[[]]],[11,"fold","oak::proto::oak::crypto","",53,[[]]],[11,"fold","","",54,[[]]],[11,"fold","","",55,[[]]],[11,"fold","","",56,[[]]],[11,"fold","","",57,[[]]],[11,"fold","","",58,[[]]],[11,"fold","","",59,[[]]],[11,"fold","","",60,[[]]],[11,"fold","","",61,[[]]],[11,"fold","","",62,[[]]],[11,"fold","","",63,[[]]],[11,"fold","","",64,[[]]],[11,"fold","","",65,[[]]],[11,"fold","","",66,[[]]],[11,"fold","","",67,[[]]],[11,"fold","","",110,[[]]],[11,"fold","","",68,[[]]],[11,"fold","","",69,[[]]],[11,"fold","","",70,[[]]],[11,"fold","","",71,[[]]],[11,"fold","","",72,[[]]],[11,"fold","","",73,[[]]],[11,"fold","","",74,[[]]],[11,"fold","","",111,[[]]],[11,"fold","","",76,[[]]],[11,"fold","","",77,[[]]],[11,"fold","oak::proto::oak::invocation","",81,[[]]],[11,"fold","","",82,[[]]],[11,"fold","","",83,[[]]],[11,"fold","","",84,[[]]],[11,"fold","","",85,[[]]],[11,"fold","","",86,[[]]],[11,"fold","oak::proto::oak::storage","",87,[[]]],[11,"fold","","",88,[[]]],[11,"fold","","",89,[[]]],[11,"fold","","",90,[[]]],[11,"fold","","",112,[[]]],[11,"fold","","",91,[[]]],[11,"fold","","",113,[[]]],[11,"fold","","",92,[[]]],[11,"fold","","",93,[[]]],[11,"fold","","",94,[[]]],[11,"fold","","",114,[[]]],[11,"fold","","",95,[[]]],[11,"fold","","",115,[[]]],[11,"fold","oak::proto::oak::roughtime","",116,[[]]],[11,"fold","","",99,[[]]],[11,"next_u32","oak::rand","",106,[[]]],[11,"next_u64","","",106,[[]]],[11,"fill_bytes","","",106,[[]]],[11,"try_fill_bytes","","",106,[[],[["result",4],["error",3]]]],[11,"serialize","oak::proto::oak::label","Convert a label to bytes.",0,[[],["vec",3]]],[11,"deserialize","","Build the label from bytes.",0,[[],[["label",3],["option",4]]]],[11,"public_untrusted","","Return the least privileged label.",0,[[],["label",3]]],[11,"flows_to","","Compare two labels according to the lattice structure: L_0…",0,[[["label",3]]]],[11,"is_valid","oak","Returns `true` if `value` is a variant of…",1,[[]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` if…",1,[[],[["option",4],["channelreadstatus",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `OakStatus`.",2,[[]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`…",2,[[],[["option",4],["oakstatus",4]]]],[11,"is_valid","oak::grpc","Returns `true` if `value` is a variant of `Code`.",9,[[]]],[11,"from_i32","","Converts an `i32` to a `Code`, or `None` if `value` is not…",9,[[],[["code",4],["option",4]]]],[11,"receive","oak::proto::oak::invocation","",84,[[],[["request",3],["result",4],["oakerror",4]]]],[11,"send","","",84,[[["response",3]],[["result",4],["oakerror",4]]]],[11,"close_channels","","",84,[[]]],[11,"receive","","",85,[[],[["result",4],["response",3],["oakerror",4]]]],[11,"send","","",85,[[["request",3],["vec",3]],[["result",4],["oakerror",4]]]],[11,"close_channels","","",85,[[]]],[11,"new","oak::io","",26,[[["readhandle",3]],["receiver",3]]],[11,"as_proto_handle","","",26,[[],["receiver",3]]],[11,"new","","",27,[[["writehandle",3]],["sender",3]]],[11,"as_proto_handle","","",27,[[],["sender",3]]],[11,"encode","oak::proto::oak::application::node_configuration","",35,[[]]],[11,"merge","","",35,[[["wiretype",4],["decodecontext",3],["option",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",35,[[]]],[11,"encode","oak::proto::oak::label::tag","",46,[[]]],[11,"merge","","",46,[[["wiretype",4],["decodecontext",3],["option",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",46,[[]]]],"p":[[3,"Label"],[4,"ChannelReadStatus"],[4,"OakStatus"],[3,"ReadHandle"],[3,"WriteHandle"],[4,"OakError"],[4,"KeysetFormat"],[3,"Crypto"],[3,"Status"],[4,"Code"],[3,"GrpcRequest"],[3,"GrpcResponse"],[4,"WriteMode"],[4,"ServerMethod"],[8,"ServerNode"],[8,"Invocable"],[3,"ChannelResponseWriter"],[8,"HandleVisit"],[3,"Receiver"],[3,"Sender"],[3,"HeaderMap"],[3,"HttpRequest"],[3,"HttpResponse"],[8,"Decodable"],[8,"Encodable"],[3,"Message"],[3,"Receiver"],[3,"Sender"],[8,"ReceiverExt"],[8,"SenderExt"],[3,"Roughtime"],[3,"Storage"],[3,"ApplicationConfiguration"],[3,"ModuleSignature"],[3,"NodeConfiguration"],[4,"ConfigType"],[3,"WebAssemblyConfiguration"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"HttpServerConfiguration"],[3,"HttpClientConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[3,"Tag"],[4,"Tag"],[3,"WebAssemblyModuleTag"],[3,"WebAssemblyModuleSignatureTag"],[3,"TlsEndpointTag"],[3,"PublicKeyIdentityTag"],[3,"KeyTemplate"],[3,"KeysetGenerateRequest"],[3,"KeysetResponse"],[3,"KeysetPublicRequest"],[3,"KeysetUnbindRequest"],[3,"KeysetBindRequest"],[3,"KeysetBindResponse"],[3,"KmsProxyRequest"],[3,"AeadEncryptRequest"],[3,"AeadEncryptResponse"],[3,"AeadDecryptRequest"],[3,"AeadDecryptResponse"],[3,"DeterministicAeadEncryptRequest"],[3,"DeterministicAeadEncryptResponse"],[3,"DeterministicAeadDecryptRequest"],[3,"DeterministicAeadDecryptResponse"],[3,"VerifyMacRequest"],[3,"ComputeMacRequest"],[3,"ComputeMacResponse"],[3,"ComputePrfRequest"],[3,"ComputePrfResponse"],[3,"SignatureSignRequest"],[3,"SignatureSignResponse"],[3,"SignatureVerifyRequest"],[3,"OakCryptoClient"],[4,"OutputPrefixType"],[4,"KeysetFormat"],[4,"TemplateId"],[8,"OakCrypto"],[3,"OakCryptoDispatcher"],[3,"GrpcInvocation"],[3,"GrpcInvocationSender"],[3,"GrpcInvocationReceiver"],[3,"HttpInvocation"],[3,"HttpInvocationSource"],[3,"HttpInvocationSender"],[3,"StorageItem"],[3,"StorageChannelReadRequest"],[3,"StorageChannelReadResponse"],[3,"StorageChannelWriteRequest"],[3,"StorageChannelDeleteRequest"],[3,"StorageChannelBeginRequest"],[3,"StorageChannelBeginResponse"],[3,"StorageChannelCommitRequest"],[3,"StorageChannelRollbackRequest"],[3,"StorageServiceClient"],[8,"StorageService"],[3,"StorageServiceDispatcher"],[3,"Roughtime"],[3,"RoughtimeServiceClient"],[8,"RoughtimeService"],[3,"RoughtimeServiceDispatcher"],[8,"CommandHandler"],[8,"WasmEntrypoint"],[8,"WithInit"],[3,"OakRng"],[3,"LogConfiguration"],[3,"CryptoConfiguration"],[3,"Top"],[3,"VerifyMacResponse"],[3,"SignatureVerifyResponse"],[3,"StorageChannelWriteResponse"],[3,"StorageChannelDeleteResponse"],[3,"StorageChannelCommitResponse"],[3,"StorageChannelRollbackResponse"],[3,"GetRoughtimeRequest"]]},\
"oak_app_build":{"doc":"An utility for building an Oak application from a manifest…","i":[[3,"Opt","oak_app_build","Command line options for the Oak Application builder.",null,null],[12,"manifest_path","","",0,null],[3,"Manifest","","",null,null],[12,"name","","",1,null],[12,"modules","","",1,null],[12,"initial_node_configuration","","",1,null],[12,"signature_manifests","","",1,null],[3,"External","","",null,null],[12,"url","","",2,null],[12,"sha256","","",2,null],[3,"InitialNodeConfig","","",null,null],[12,"wasm_module_name","","",3,null],[12,"wasm_entrypoint_name","","",3,null],[3,"SignatureManifest","","",null,null],[12,"signatures","","",4,null],[4,"Module","","",null,null],[13,"Path","","",5,null],[13,"External","","",5,null],[4,"FileLocation","","",null,null],[13,"Path","","",6,null],[13,"Url","","",6,null],[5,"get_module_cache_path","","Get path for caching a downloaded file in…",null,[[["path",3]],["pathbuf",3]]],[5,"get_output_path","","Get path for the output application file in…",null,[[["path",3]],["pathbuf",3]]],[5,"get_sha256","","Computes SHA256 sum from `data` and returns it as a HEX…",null,[[],["string",3]]],[5,"download_file_from_url","","Download file from `url`.",null,[[]]],[5,"load_module","","Load Wasm module from file or URL if specified. If the…",null,[[["module",4],["path",3]]]],[5,"load_file_from_location","","Loads a file from the file path or URL specified in the…",null,[[["filelocation",4]]]],[5,"write_config_to_file","","Serializes an application configuration from `app_config`…",null,[[["applicationconfiguration",3],["path",3]],["result",6]]],[5,"main","","",null,[[],["result",6]]],[17,"OUTPUT_DIRECTORY","","Directory used to save build artifacts.",null,null],[17,"CACHE_DIRECTORY","","Directory used to save downloaded Wasm modules.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"clone","","",0,[[],["opt",3]]],[11,"default","","",3,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"Opt"],[3,"Manifest"],[3,"External"],[3,"InitialNodeConfig"],[3,"SignatureManifest"],[4,"Module"],[4,"FileLocation"]]},\
"oak_tests":{"doc":"Test utilities to help with unit testing of Oak SDK code.","i":[[4,"Profile","oak_tests","",null,null],[13,"Release","","",0,null],[13,"Debug","","",0,null],[5,"compile_rust_wasm","","Uses cargo to compile a Rust manifest to Wasm bytes.",null,[[["profile",4]],[["vec",3],["result",6]]]],[5,"run_single_module_default","","Convenience helper to build and run a single-Node…",null,[[["permissionsconfiguration",3]],[["arc",3],["result",4],["oakerror",4]]]],[5,"run_single_module","","Convenience helper to build and run a single-Node…",null,[[["permissionsconfiguration",3]],[["arc",3],["result",4],["oakerror",4]]]],[5,"run_single_module_with_config","","Convenience helper to build and run a single-Node…",null,[[["permissionsconfiguration",3],["configmap",3]],[["arc",3],["result",4],["oakerror",4]]]],[5,"runtime_config","","Build the configuration needed to launch a test Runtime…",null,[[["permissionsconfiguration",3],["configmap",3]],["runtimeconfiguration",3]]],[5,"runtime_config_wasm","","Build the configuration needed to launch a test Runtime…",null,[[["vec",3],["string",3],["hashmap",3],["permissionsconfiguration",3],["signaturetable",3],["configmap",3]],["runtimeconfiguration",3]]],[5,"channel_and_interceptor","","Build a labeled channel and interceptor suitable for…",null,[[["label",3]]]],[5,"public_channel_and_interceptor","","Build a public-untrusted channel and interceptor suitable…",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_any","","",0,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]]],"p":[[4,"Profile"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);