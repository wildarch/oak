var searchIndex = JSON.parse('{\
"oak":{"doc":"SDK functionality that provides idiomatic Rust wrappers…","i":[[3,"Label","oak","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",0,null],[12,"integrity_tags","","",0,null],[4,"ChannelReadStatus","","Single byte values used to indicate the read status of a…",null,null],[13,"NotReady","","No pending messages available on channel.",1,null],[13,"ReadReady","","Pending message available on channel.",1,null],[13,"InvalidChannel","","Channel handle does not identify the read half of a…",1,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",1,null],[13,"PermissionDenied","","A node trying to access the channel does not have the…",1,null],[6,"Handle","","Handle used to identify read or write channel halves.",null,null],[4,"OakStatus","","Status values exchanged as i32 values across the Node Wasm…",null,null],[13,"Unspecified","","",2,null],[13,"Ok","","Success.",2,null],[13,"ErrBadHandle","","Invalid handle provided.",2,null],[13,"ErrInvalidArgs","","Arguments invalid.",2,null],[13,"ErrChannelClosed","","Channel has been closed.",2,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an output…",2,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (an…",2,null],[13,"ErrOutOfRange","","Argument out of valid range.",2,null],[13,"ErrInternal","","Internal error.",2,null],[13,"ErrTerminated","","Node terminated.",2,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",2,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to perform…",2,null],[3,"ReadHandle","","Wrapper for a handle to the read half of a channel.",null,null],[12,"handle","","",3,null],[3,"WriteHandle","","Wrapper for a handle to the send half of a channel.",null,null],[12,"handle","","",4,null],[4,"OakError","","Generic Oak error.",null,null],[13,"ProtobufDecodeError","","",5,null],[13,"ProtobufEncodeError","","",5,null],[13,"OakStatus","","",5,null],[13,"IoError","","",5,null],[5,"wait_on_channels","","Wait for one or more of the provided handles to become…",null,[[],[["oakstatus",4],["vec",3],["result",4]]]],[5,"channel_read","","Read a message from a channel without blocking.",null,[[["vec",3],["vec",3],["readhandle",3]],[["oakstatus",4],["result",4]]]],[5,"channel_write","","Write a message to a channel.",null,[[["writehandle",3]],[["oakstatus",4],["result",4]]]],[5,"channel_create","","Similar to [`channel_create_with_label`], but with a fixed…",null,[[],[["oakstatus",4],["result",4]]]],[5,"channel_create_with_label","","Create a new unidirectional channel.",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[5,"channel_close","","Close the specified channel [`Handle`].",null,[[["handle",6]],[["oakstatus",4],["result",4]]]],[5,"node_create","","Similar to [`node_create_with_label`], but with a fixed…",null,[[["nodeconfiguration",3],["readhandle",3]],[["oakstatus",4],["result",4]]]],[5,"node_create_with_label","","Creates a new Node running the configuration identified by…",null,[[["label",3],["nodeconfiguration",3],["readhandle",3]],[["oakstatus",4],["result",4]]]],[5,"random_get","","Fill a buffer with random data.",null,[[],[["oakstatus",4],["result",4]]]],[5,"result_from_status","","Convert a status returned from a host function call to a…",null,[[],[["result",4],["oakstatus",4]]]],[5,"set_panic_hook","","Install a panic hook that logs [panic information].",null,[[]]],[5,"app_config_map","","Retrieve the Application\'s `ConfigMap` from the read…",null,[[["readhandle",3]],[["oakerror",4],["result",4],["configmap",3]]]],[5,"run_event_loop","","Run an event loop on the provided `node`:",null,[[["receiver",3],["decodable",8],["node",8]]]],[0,"grpc","","Functionality to help Oak Nodes interact with gRPC.",null,null],[3,"Status","oak::grpc","The `Status` type defines a logical error model that is…",null,null],[12,"code","","The status code, which should be an enum value of…",6,null],[12,"message","","A developer-facing error message, which should be in…",6,null],[12,"details","","A list of messages that carry the error details. There is…",6,null],[4,"Code","","The canonical error codes for Google APIs.",null,null],[13,"Ok","","Not an error; returned on success",7,null],[13,"Cancelled","","The operation was cancelled, typically by the caller.",7,null],[13,"Unknown","","Unknown error. For example, this error may be returned…",7,null],[13,"InvalidArgument","","The client specified an invalid argument. Note that this…",7,null],[13,"DeadlineExceeded","","The deadline expired before the operation could complete.…",7,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was not…",7,null],[13,"AlreadyExists","","The entity that a client attempted to create (e.g., file…",7,null],[13,"PermissionDenied","","The caller does not have permission to execute the…",7,null],[13,"Unauthenticated","","The request does not have valid authentication credentials…",7,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-user…",7,null],[13,"FailedPrecondition","","The operation was rejected because the system is not in a…",7,null],[13,"Aborted","","The operation was aborted, typically due to a concurrency…",7,null],[13,"OutOfRange","","The operation was attempted past the valid range. E.g.,…",7,null],[13,"Unimplemented","","The operation is not implemented or is not…",7,null],[13,"Internal","","Internal errors. This means that some invariants expected…",7,null],[13,"Unavailable","","The service is currently unavailable. This is most likely…",7,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",7,null],[3,"GrpcRequest","","",null,null],[12,"method_name","","",8,null],[12,"req_msg","","The body of the request. Usually a serialized protobuf…",8,null],[12,"last","","",8,null],[3,"GrpcResponse","","",null,null],[12,"rsp_msg","","The body of the response. Usually a serialized protobuf…",9,null],[12,"status","","",9,null],[12,"last","","The last field indicates that this is definitely the final…",9,null],[3,"ChannelResponseWriter","","Channel-holding object that encapsulates response messages…",null,null],[4,"WriteMode","","Indicate whether a write method should leave the current…",null,null],[13,"KeepOpen","","",10,null],[13,"Close","","",10,null],[5,"build_status","","Helper to create a gRPC status object.",null,[[["code",4]],["status",3]]],[5,"decap_response","","Extract a protocol buffer message from a GrpcResponse…",null,[[["grpcresponse",3]],["result",6]]],[5,"invoke_grpc_method_stream","","Helper to inject a (single) gRPC request message via a…",null,[[["sender",3]],[["receiver",3],["result",6]]]],[5,"invoke_grpc_method","","Helper to inject a (single) gRPC request message via a…",null,[[["sender",3]],["result",6]]],[5,"handle_req_rsp","","Generic function that handles request deserialization and…",null,[[["channelresponsewriter",3]]]],[5,"handle_req_stream","","Generic function that handles request deserialization and…",null,[[["channelresponsewriter",3]]]],[5,"handle_stream_rsp","","Generic function that handles request deserialization and…",null,[[["channelresponsewriter",3]]]],[5,"handle_stream_stream","","Generic function that handles request deserialization and…",null,[[["channelresponsewriter",3]]]],[0,"client","","",null,null],[3,"Client","oak::grpc::client","Client for a gRPC service in another Node.",null,null],[12,"invocation_sender","","",11,null],[11,"new","","Similar to [`Client::new_with_label`] but with a fixed…",11,[[["nodeconfiguration",3]],[["option",4],["client",3]]]],[11,"new_with_label","","Creates a new Node that implements a gRPC service, and if…",11,[[["label",3],["nodeconfiguration",3]],[["option",4],["client",3]]]],[0,"server","oak::grpc","Functionality to help Oak Nodes create gRPC server…",null,null],[5,"init","oak::grpc::server","Initializes a gRPC server pseudo-Node listening on the…",null,[[],[["result",4],["oakstatus",4],["receiver",3]]]],[6,"Result","oak::grpc","Result type that uses a [`Status`] type for error values.",null,null],[6,"Invocation","","",null,null],[8,"ServerNode","","Trait for Oak Nodes that act as a gRPC services.",null,null],[10,"invoke","","Process a single gRPC method invocation.",12,[[["channelresponsewriter",3]]]],[11,"new","","",13,[[["sender",3],["grpcresponse",3]]]],[11,"handle","","Retrieve the Oak handle underlying the writer object.",13,[[],["writehandle",3]]],[11,"write","","Write out a gRPC response and optionally close out the…",13,[[["writemode",4]],[["oakerror",4],["result",4]]]],[11,"write_empty","","Write an empty gRPC response and optionally close out the…",13,[[["writemode",4]],[["oakerror",4],["result",4]]]],[11,"close","","Close out the gRPC method invocation with the given final…",13,[[["result",6]],[["oakerror",4],["result",4]]]],[0,"handle","oak","Utilities for visiting, extract and injecting handles.",null,null],[24,"HandleVisit","oak::handle","Automatically derives the `HandleVisit` trait for structs…",null,null],[3,"Sender","","Sender handle for an Oak channel. This type is sent over…",null,null],[12,"id","","",14,null],[3,"Receiver","","Receiver handle for an Oak channel. This type is sent over…",null,null],[12,"id","","",15,null],[5,"is_valid","","Check this handle is valid.",null,[[["handle",6]]]],[5,"invalid","","Returns an intentionally invalid handle.",null,[[],["handle",6]]],[5,"extract_handles","","Return all handles in `T`.",null,[[],[["vec",3],["handle",6]]]],[5,"inject_handles","","Inject handles into a message.",null,[[],[["oakerror",4],["result",4]]]],[8,"HandleVisit","","Visit all handles present in a type.",null,null],[10,"visit","","Invokes the provided closure on every handle contained in…",16,[[["fnmut",8]],["fnmut",8]]],[0,"http","oak","Functionality to help Oak Nodes create HTTP server…",null,null],[5,"init","oak::http","Initializes an HTTP server pseudo-Node listening on the…",null,[[],[["receiver",3],["result",4],["oakstatus",4]]]],[6,"Invocation","","",null,null],[0,"invocations","oak","",null,null],[3,"Invocation","oak::invocations","An invocation, consisting of exactly two channels: one to…",null,null],[12,"request_receiver","","",17,null],[12,"response_sender","","",17,null],[3,"ServerInvocationChannel","","Wrapper for a sender that can be used to send invocations…",null,null],[11,"receive","","",17,[[],[["result",4],["oakerror",4]]]],[11,"send","","",17,[[],[["result",4],["oakerror",4]]]],[11,"close_channels","","",17,[[]]],[11,"new","","",18,[[["sender",3],["invocation",3]]]],[0,"io","oak","Wrappers for Oak SDK types to allow their use with…",null,null],[3,"Receiver","oak::io","Wrapper for a handle to the read half of a channel,…",null,null],[12,"handle","","",19,null],[3,"Sender","","Wrapper for a handle to the send half of a channel,…",null,null],[12,"handle","","",20,null],[3,"Message","","A simple holder for bytes + handles, using internally…",null,null],[12,"bytes","","",21,null],[12,"handles","","",21,null],[5,"channel_create","","Create a new channel for transmission of `Encodable` and…",null,[[],[["oakstatus",4],["result",4]]]],[5,"channel_create_with_label","","",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[5,"error_from_nonok_status","","Map a non-OK [`OakStatus`] value to the nearest available…",null,[[["oakstatus",4]],["error",3]]],[11,"new","","",19,[[["readhandle",3]]]],[11,"as_proto_handle","","",19,[[],["receiver",3]]],[11,"new","","",20,[[["writehandle",3]]]],[11,"as_proto_handle","","",20,[[],["sender",3]]],[8,"Decodable","","A trait for objects that can be decoded from bytes +…",null,null],[10,"decode","","",22,[[["message",3]],[["result",4],["oakerror",4]]]],[8,"Encodable","","A trait for objects that can be encoded as bytes + handles.",null,null],[10,"encode","","",23,[[],[["message",3],["oakerror",4],["result",4]]]],[8,"ReceiverExt","","",null,null],[10,"close","","Close the underlying channel used by the receiver.",24,[[],[["oakstatus",4],["result",4]]]],[10,"receive","","Attempt to wait for a value on the receiver, blocking if…",24,[[],[["result",4],["oakerror",4]]]],[10,"try_receive","","Attempt to read a value from the receiver, without blocking.",24,[[],[["result",4],["oakerror",4]]]],[10,"wait","","Wait for a value to be available from the receiver.",24,[[],[["result",4],["oakstatus",4],["channelreadstatus",4]]]],[8,"SenderExt","","Trait for context-dependent functionality on a `Sender`.",null,null],[10,"send","","Close the underlying channel used by the sender.",25,[[],[["oakerror",4],["result",4]]]],[10,"close","","Attempt to send a value on the sender.",25,[[],[["oakstatus",4],["result",4]]]],[0,"logger","oak","A logger that sends output to an Oak logging channel, for…",null,null],[5,"init_default","oak::logger","Initialize Node-wide default logging.",null,[[]]],[5,"init","","Initialize Node-wide logging via a channel to a logging…",null,[[["level",4]],[["result",4],["setloggererror",3]]]],[0,"node_config","oak","Helper methods for creating common [`NodeConfiguration`]…",null,null],[5,"grpc_client","oak::node_config","",null,[[],["nodeconfiguration",3]]],[5,"grpc_server","","",null,[[],["nodeconfiguration",3]]],[5,"http_server","","",null,[[],["nodeconfiguration",3]]],[5,"wasm","","",null,[[],["nodeconfiguration",3]]],[5,"log","","",null,[[],["nodeconfiguration",3]]],[0,"rand","oak","Functionality to allow use of the rand crate in Oak.",null,null],[3,"OakRng","oak::rand","",null,null],[0,"roughtime","oak","Helper library for accessing the Oak Roughtime service.",null,null],[3,"Roughtime","oak::roughtime","Local representation of the connection to an external…",null,null],[11,"new","","Creates a [`Roughtime`] instance using the given…",26,[[["roughtimeclientconfiguration",3]],[["option",4],["roughtime",3]]]],[11,"get_roughtime","","Get the current Roughtime value as a Duration since UNIX…",26,[[],[["result",6],["duration",3]]]],[0,"storage","oak","Helper library for accessing Oak storage services.",null,null],[3,"Storage","oak::storage","Local representation of the connection to an external…",null,null],[11,"new","","Creates a [`Storage`] instance using the given…",27,[[["storageproxyconfiguration",3]],[["storage",3],["option",4]]]],[11,"read","","Read the value associated with the given `name` from the…",27,[[],[["vec",3],["result",6]]]],[11,"write","","Set the value associated with the given `name` from the…",27,[[],["result",6]]],[11,"delete","","Delete the value associated with the given `name` from the…",27,[[],["result",6]]],[0,"proto","oak","Auto-generated code derived from protocol buffer…",null,null],[0,"oak","oak::proto","",null,null],[0,"application","oak::proto::oak","",null,null],[3,"ApplicationConfiguration","oak::proto::oak::application","An ApplicationConfiguration represents a unit of…",null,null],[12,"wasm_modules","","Map from Wasm module names to their bytecode representation.",28,null],[12,"initial_node_configuration","","Indication of what configuration the initial Node should…",28,null],[3,"NodeConfiguration","","NodeConfiguration indicates the configuration of a created…",null,null],[12,"name","","Display name of the newly created node instance, for…",29,null],[12,"config_type","","",29,null],[0,"node_configuration","","Nested message and enum types in `NodeConfiguration`.",null,null],[4,"ConfigType","oak::proto::oak::application::node_configuration","",null,null],[13,"WasmConfig","","",30,null],[13,"LogConfig","","",30,null],[13,"StorageConfig","","",30,null],[13,"GrpcServerConfig","","",30,null],[13,"GrpcClientConfig","","",30,null],[13,"RoughtimeClientConfig","","",30,null],[13,"HttpServerConfig","","",30,null],[3,"WebAssemblyConfiguration","oak::proto::oak::application","WebAssemblyConfiguration describes the configuration of a…",null,null],[12,"wasm_module_name","","The name of one of the entries in the…",31,null],[12,"wasm_entrypoint_name","","The name of an exported WebAssembly function to invoke as…",31,null],[3,"LogConfiguration","","LogConfiguration describes the configuration of a logging…",null,null],[3,"StorageProxyConfiguration","","StorageProxyConfiguration describes the configuration of a…",null,null],[12,"address","","The address of the external storage provider.",32,null],[3,"GrpcServerConfiguration","","GrpcServerConfiguration describes the configuration of a…",null,null],[12,"address","","The endpoint address for the gRPC server to listen on.…",33,null],[3,"GrpcClientConfiguration","","GrpcClientConfiguration describes the configuration of a…",null,null],[12,"uri","","The URI component of a gRPC server endpoint. Must contain…",34,null],[3,"RoughtimeClientConfiguration","","RoughtimeClientConfiguration describes the configuration…",null,null],[12,"servers","","The collection of Roughtime servers to query. A default…",35,null],[12,"min_overlapping_intervals","","Connection parameters; default values will be used if any…",35,null],[12,"timeout_seconds","","",35,null],[12,"server_retries","","",35,null],[12,"max_radius_microseconds","","",35,null],[3,"HttpServerConfiguration","","HttpServerConfiguration describes the configuration of an…",null,null],[12,"address","","The endpoint address for the HTTP server to listen on.…",36,null],[3,"RoughtimeServer","","Information to identify a particular Roughtime server.…",null,null],[12,"name","","",37,null],[12,"host","","",37,null],[12,"port","","",37,null],[12,"public_key_base64","","",37,null],[3,"ConfigMap","","A serialized list of key-value pairs that are specified as…",null,null],[12,"items","","",38,null],[0,"label","oak::proto::oak","",null,null],[3,"Label","oak::proto::oak::label","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",0,null],[12,"integrity_tags","","",0,null],[3,"Tag","","Tag represents a category of confidentiality or integrity…",null,null],[12,"tag","","",39,null],[0,"tag","","Nested message and enum types in `Tag`.",null,null],[4,"Tag","oak::proto::oak::label::tag","",null,null],[13,"GrpcTag","","",40,null],[13,"WebAssemblyModuleTag","","",40,null],[13,"TlsEndpointTag","","",40,null],[3,"GrpcTag","oak::proto::oak::label","Policies related to gRPC communication, referring to the…",null,null],[12,"authorization_bearer_token_hmac","","In order for a client to be authorized to fulfill a tag…",41,null],[3,"WebAssemblyModuleTag","","Policies related to modules, referring to the native…",null,null],[12,"web_assembly_module_hash_sha_256","","The attestation for a single WebAssembly module, a SHA256…",42,null],[3,"TlsEndpointTag","","Policies related to HTTPS communication.",null,null],[12,"authority","","The TLS authority (host:port) of the remote endpoint,…",43,null],[0,"storage","oak::proto::oak","",null,null],[3,"StorageItem","oak::proto::oak::storage","",null,null],[12,"name","","",44,null],[12,"value","","",44,null],[12,"label","","",44,null],[3,"StorageChannelReadRequest","","",null,null],[12,"storage_name","","",45,null],[12,"transaction_id","","",45,null],[12,"item","","",45,null],[3,"StorageChannelReadResponse","","",null,null],[12,"item","","",46,null],[3,"StorageChannelWriteRequest","","",null,null],[12,"storage_name","","",47,null],[12,"transaction_id","","",47,null],[12,"item","","",47,null],[3,"StorageChannelWriteResponse","","",null,null],[3,"StorageChannelDeleteRequest","","",null,null],[12,"storage_name","","",48,null],[12,"transaction_id","","",48,null],[12,"item","","",48,null],[3,"StorageChannelDeleteResponse","","",null,null],[3,"StorageChannelBeginRequest","","",null,null],[12,"storage_name","","",49,null],[3,"StorageChannelBeginResponse","","",null,null],[12,"transaction_id","","",50,null],[3,"StorageChannelCommitRequest","","",null,null],[12,"storage_name","","",51,null],[12,"transaction_id","","",51,null],[3,"StorageChannelCommitResponse","","",null,null],[3,"StorageChannelRollbackRequest","","",null,null],[12,"storage_name","","",52,null],[12,"storage_id","","",52,null],[12,"transaction_id","","",52,null],[3,"StorageChannelRollbackResponse","","",null,null],[3,"StorageServiceDispatcher","","",null,null],[3,"StorageServiceClient","","",null,null],[12,"0","","",53,null],[8,"StorageService","","",null,null],[10,"read","","",54,[[["storagechannelreadrequest",3]],[["result",6],["storagechannelreadresponse",3]]]],[10,"write","","",54,[[["storagechannelwriterequest",3]],[["result",6],["storagechannelwriteresponse",3]]]],[10,"delete","","",54,[[["storagechanneldeleterequest",3]],[["result",6],["storagechanneldeleteresponse",3]]]],[10,"begin","","",54,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelbeginresponse",3]]]],[10,"commit","","",54,[[["storagechannelbeginrequest",3]],[["storagechannelcommitresponse",3],["result",6]]]],[10,"rollback","","",54,[[["storagechannelrollbackrequest",3]],[["storagechannelrollbackresponse",3],["result",6]]]],[11,"new","","",55,[[],["storageservicedispatcher",3]]],[11,"read","","",53,[[["storagechannelreadrequest",3]],[["result",6],["storagechannelreadresponse",3]]]],[11,"write","","",53,[[["storagechannelwriterequest",3]],[["result",6],["storagechannelwriteresponse",3]]]],[11,"delete","","",53,[[["storagechanneldeleterequest",3]],[["result",6],["storagechanneldeleteresponse",3]]]],[11,"begin","","",53,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelbeginresponse",3]]]],[11,"commit","","",53,[[["storagechannelbeginrequest",3]],[["storagechannelcommitresponse",3],["result",6]]]],[11,"rollback","","",53,[[["storagechannelrollbackrequest",3]],[["storagechannelrollbackresponse",3],["result",6]]]],[0,"roughtime","oak::proto::oak","",null,null],[3,"GetRoughtimeRequest","oak::proto::oak::roughtime","",null,null],[3,"Roughtime","","",null,null],[12,"roughtime_usec","","Time is UTC and is given as microseconds since the UNIX…",56,null],[3,"RoughtimeServiceDispatcher","","",null,null],[3,"RoughtimeServiceClient","","",null,null],[12,"0","","",57,null],[8,"RoughtimeService","","",null,null],[10,"get_roughtime","","",58,[[["getroughtimerequest",3]],[["roughtime",3],["result",6]]]],[11,"new","","",59,[[],["roughtimeservicedispatcher",3]]],[11,"get_roughtime","","",57,[[["getroughtimerequest",3]],[["roughtime",3],["result",6]]]],[8,"Node","oak","Trait implemented by Oak Nodes that operate on commands.",null,null],[10,"handle_command","","",60,[[],[["result",4],["oakerror",4]]]],[14,"entrypoint","","Register a new Node entrypoint.",null,null],[11,"from","oak::proto::oak::label","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","oak","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","oak::grpc","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","oak::grpc::client","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","oak::handle","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","oak::invocations","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","oak::io","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","oak::rand","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","oak::roughtime","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","oak::storage","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","oak::proto::oak::application","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","oak::proto::oak::application::node_configuration","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","oak::proto::oak::application","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","oak::proto::oak::label","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","oak::proto::oak::label::tag","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","oak::proto::oak::label","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","oak::proto::oak::storage","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"handle_command","","Handle incoming gRPC events for a [`ServerNode`].",55,[[["invocation",3],["grpcrequest",3],["grpcresponse",3]],[["result",4],["oakerror",4]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","oak::proto::oak::roughtime","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"handle_command","","Handle incoming gRPC events for a [`ServerNode`].",59,[[["invocation",3],["grpcrequest",3],["grpcresponse",3]],[["result",4],["oakerror",4]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"eq","oak::proto::oak::application","",28,[[["applicationconfiguration",3]]]],[11,"ne","","",28,[[["applicationconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",0,[[["label",3]]]],[11,"ne","","",0,[[["label",3]]]],[11,"eq","oak::proto::oak::application::node_configuration","",30,[[["configtype",4]]]],[11,"ne","","",30,[[["configtype",4]]]],[11,"eq","oak::grpc","",9,[[["grpcresponse",3]]]],[11,"ne","","",9,[[["grpcresponse",3]]]],[11,"eq","oak::proto::oak::label::tag","",40,[[["tag",4]]]],[11,"ne","","",40,[[["tag",4]]]],[11,"eq","oak::proto::oak::application","",62,[[["logconfiguration",3]]]],[11,"eq","oak::grpc","",8,[[["grpcrequest",3]]]],[11,"ne","","",8,[[["grpcrequest",3]]]],[11,"eq","oak::proto::oak::application","",34,[[["grpcclientconfiguration",3]]]],[11,"ne","","",34,[[["grpcclientconfiguration",3]]]],[11,"eq","","",33,[[["grpcserverconfiguration",3]]]],[11,"ne","","",33,[[["grpcserverconfiguration",3]]]],[11,"eq","","",31,[[["webassemblyconfiguration",3]]]],[11,"ne","","",31,[[["webassemblyconfiguration",3]]]],[11,"eq","","",32,[[["storageproxyconfiguration",3]]]],[11,"ne","","",32,[[["storageproxyconfiguration",3]]]],[11,"eq","oak::proto::oak::label","",39,[[["tag",3]]]],[11,"ne","","",39,[[["tag",3]]]],[11,"eq","oak::grpc","",6,[[["status",3]]]],[11,"ne","","",6,[[["status",3]]]],[11,"eq","oak::proto::oak::label","",42,[[["webassemblymoduletag",3]]]],[11,"ne","","",42,[[["webassemblymoduletag",3]]]],[11,"eq","oak::proto::oak::application","",35,[[["roughtimeclientconfiguration",3]]]],[11,"ne","","",35,[[["roughtimeclientconfiguration",3]]]],[11,"eq","","",38,[[["configmap",3]]]],[11,"ne","","",38,[[["configmap",3]]]],[11,"eq","oak::proto::oak::label","",43,[[["tlsendpointtag",3]]]],[11,"ne","","",43,[[["tlsendpointtag",3]]]],[11,"eq","oak::grpc","",7,[[["code",4]]]],[11,"eq","oak::proto::oak::application","",29,[[["nodeconfiguration",3]]]],[11,"ne","","",29,[[["nodeconfiguration",3]]]],[11,"eq","","",37,[[["roughtimeserver",3]]]],[11,"ne","","",37,[[["roughtimeserver",3]]]],[11,"eq","oak::proto::oak::label","",41,[[["grpctag",3]]]],[11,"ne","","",41,[[["grpctag",3]]]],[11,"eq","oak::proto::oak::application","",36,[[["httpserverconfiguration",3]]]],[11,"ne","","",36,[[["httpserverconfiguration",3]]]],[11,"eq","oak","",1,[[["channelreadstatus",4]]]],[11,"eq","","",2,[[["oakstatus",4]]]],[11,"partial_cmp","","",1,[[["channelreadstatus",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",2,[[["oakstatus",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","oak::grpc","",7,[[["code",4]],[["ordering",4],["option",4]]]],[11,"default","oak::proto::oak::application","",36,[[],["httpserverconfiguration",3]]],[11,"default","oak::proto::oak::label","",42,[[],["webassemblymoduletag",3]]],[11,"default","oak::proto::oak::application","",31,[[],["webassemblyconfiguration",3]]],[11,"default","","",34,[[],["grpcclientconfiguration",3]]],[11,"default","oak","",1,[[],["channelreadstatus",4]]],[11,"default","oak::proto::oak::application","",35,[[],["roughtimeclientconfiguration",3]]],[11,"default","oak::grpc","",9,[[],["grpcresponse",3]]],[11,"default","oak::proto::oak::application","",38,[[],["configmap",3]]],[11,"default","","",62,[[],["logconfiguration",3]]],[11,"default","oak::proto::oak::label","",43,[[],["tlsendpointtag",3]]],[11,"default","oak::proto::oak::application","",29,[[],["nodeconfiguration",3]]],[11,"default","oak","",2,[[],["oakstatus",4]]],[11,"default","oak::proto::oak::application","",32,[[],["storageproxyconfiguration",3]]],[11,"default","","",28,[[],["applicationconfiguration",3]]],[11,"default","oak::proto::oak::label","",0,[[],["label",3]]],[11,"default","","",39,[[],["tag",3]]],[11,"default","oak::grpc","",7,[[],["code",4]]],[11,"default","","",8,[[],["grpcrequest",3]]],[11,"default","oak::proto::oak::label","",41,[[],["grpctag",3]]],[11,"default","oak::grpc","",6,[[],["status",3]]],[11,"default","oak::proto::oak::application","",33,[[],["grpcserverconfiguration",3]]],[11,"default","","",37,[[],["roughtimeserver",3]]],[11,"cmp","oak::grpc","",7,[[["code",4]],["ordering",4]]],[11,"cmp","oak","",2,[[["oakstatus",4]],["ordering",4]]],[11,"cmp","","",1,[[["channelreadstatus",4]],["ordering",4]]],[11,"fmt","oak::proto::oak::application","",38,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",62,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::grpc","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",37,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label::tag","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::grpc","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::grpc","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application::node_configuration","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::label","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::grpc","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak::proto::oak::application","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","oak::proto::oak::application","",28,[[],["applicationconfiguration",3]]],[11,"clone","oak::proto::oak::label::tag","",40,[[],["tag",4]]],[11,"clone","oak::proto::oak::label","",42,[[],["webassemblymoduletag",3]]],[11,"clone","oak::proto::oak::application","",29,[[],["nodeconfiguration",3]]],[11,"clone","oak::proto::oak::label","",41,[[],["grpctag",3]]],[11,"clone","oak::grpc","",6,[[],["status",3]]],[11,"clone","oak::proto::oak::label","",39,[[],["tag",3]]],[11,"clone","oak::proto::oak::application","",34,[[],["grpcclientconfiguration",3]]],[11,"clone","oak::grpc","",8,[[],["grpcrequest",3]]],[11,"clone","oak::proto::oak::label","",43,[[],["tlsendpointtag",3]]],[11,"clone","oak::proto::oak::application","",31,[[],["webassemblyconfiguration",3]]],[11,"clone","oak::grpc","",9,[[],["grpcresponse",3]]],[11,"clone","","",7,[[],["code",4]]],[11,"clone","oak::proto::oak::application","",33,[[],["grpcserverconfiguration",3]]],[11,"clone","oak","",1,[[],["channelreadstatus",4]]],[11,"clone","oak::proto::oak::application","",35,[[],["roughtimeclientconfiguration",3]]],[11,"clone","","",36,[[],["httpserverconfiguration",3]]],[11,"clone","oak::proto::oak::label","",0,[[],["label",3]]],[11,"clone","oak::proto::oak::application","",62,[[],["logconfiguration",3]]],[11,"clone","","",37,[[],["roughtimeserver",3]]],[11,"clone","oak","",2,[[],["oakstatus",4]]],[11,"clone","oak::proto::oak::application","",32,[[],["storageproxyconfiguration",3]]],[11,"clone","oak::proto::oak::application::node_configuration","",30,[[],["configtype",4]]],[11,"clone","oak::proto::oak::application","",38,[[],["configmap",3]]],[11,"hash","oak","",2,[[]]],[11,"hash","","",1,[[]]],[11,"hash","oak::proto::oak::label","",43,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",39,[[]]],[11,"hash","oak::proto::oak::label::tag","",40,[[]]],[11,"hash","oak::grpc","",7,[[]]],[11,"hash","oak::proto::oak::label","",42,[[]]],[11,"hash","","",0,[[]]],[11,"encode_raw","oak::proto::oak::application","",38,[[]]],[11,"merge_field","","",38,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",38,[[]]],[11,"clear","","",38,[[]]],[11,"encode_raw","","",37,[[]]],[11,"merge_field","","",37,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",37,[[]]],[11,"clear","","",37,[[]]],[11,"encode_raw","","",33,[[]]],[11,"merge_field","","",33,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",33,[[]]],[11,"clear","","",33,[[]]],[11,"encode_raw","","",31,[[]]],[11,"merge_field","","",31,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",31,[[]]],[11,"clear","","",31,[[]]],[11,"encode_raw","oak::grpc","",9,[[]]],[11,"merge_field","","",9,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"encode_raw","oak::proto::oak::label","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","oak::grpc","",8,[[]]],[11,"merge_field","","",8,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","oak::proto::oak::application","",36,[[]]],[11,"merge_field","","",36,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",36,[[]]],[11,"clear","","",36,[[]]],[11,"encode_raw","oak::proto::oak::label","",43,[[]]],[11,"merge_field","","",43,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",43,[[]]],[11,"clear","","",43,[[]]],[11,"encode_raw","oak::grpc","",6,[[]]],[11,"merge_field","","",6,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"encode_raw","oak::proto::oak::application","",35,[[]]],[11,"merge_field","","",35,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",35,[[]]],[11,"clear","","",35,[[]]],[11,"encode_raw","","",34,[[]]],[11,"merge_field","","",34,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",34,[[]]],[11,"clear","","",34,[[]]],[11,"encode_raw","","",32,[[]]],[11,"merge_field","","",32,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",32,[[]]],[11,"clear","","",32,[[]]],[11,"encode_raw","oak::proto::oak::label","",42,[[]]],[11,"merge_field","","",42,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",42,[[]]],[11,"clear","","",42,[[]]],[11,"encode_raw","oak::proto::oak::application","",62,[[]]],[11,"merge_field","","",62,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",62,[[]]],[11,"clear","","",62,[[]]],[11,"encode_raw","oak::proto::oak::label","",39,[[]]],[11,"merge_field","","",39,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",39,[[]]],[11,"clear","","",39,[[]]],[11,"encode_raw","oak::proto::oak::application","",28,[[]]],[11,"merge_field","","",28,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",28,[[]]],[11,"clear","","",28,[[]]],[11,"encode_raw","oak::proto::oak::label","",41,[[]]],[11,"merge_field","","",41,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",41,[[]]],[11,"clear","","",41,[[]]],[11,"encode_raw","oak::proto::oak::application","",29,[[]]],[11,"merge_field","","",29,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",29,[[]]],[11,"clear","","",29,[[]]],[11,"clone","oak","",3,[[],["readhandle",3]]],[11,"clone","","",4,[[],["writehandle",3]]],[11,"eq","","",4,[[["writehandle",3]]]],[11,"ne","","",4,[[["writehandle",3]]]],[11,"eq","","",3,[[["readhandle",3]]]],[11,"ne","","",3,[[["readhandle",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"invoke","oak::proto::oak::storage","",55,[[["channelresponsewriter",3]]]],[11,"invoke","oak::proto::oak::roughtime","",59,[[["channelresponsewriter",3]]]],[11,"visit","oak::grpc","",9,[[["fnmut",8]],["fnmut",8]]],[11,"visit","","",8,[[["fnmut",8]],["fnmut",8]]],[11,"visit","oak::proto::oak::application","",38,[[["fnmut",8]],["fnmut",8]]],[11,"visit","oak::io","",19,[[["fnmut",8]],["fnmut",8]]],[11,"visit","","",20,[[["fnmut",8]],["fnmut",8]]],[11,"decode","oak::invocations","",17,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"decode","","",18,[[["message",3]],[["oakerror",4],["result",4]]]],[11,"encode","","",17,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"encode","","",18,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"close","oak::io","Close the underlying channel used by the receiver.",19,[[],[["oakstatus",4],["result",4]]]],[11,"receive","","Attempt to wait for a value on the receiver, blocking if…",19,[[],[["result",4],["oakerror",4]]]],[11,"try_receive","","Attempt to read a value from the receiver, without blocking.",19,[[],[["result",4],["oakerror",4]]]],[11,"wait","","Wait for a value to be available from the receiver.",19,[[],[["result",4],["oakstatus",4],["channelreadstatus",4]]]],[11,"close","","Close the underlying channel used by the sender.",20,[[],[["oakstatus",4],["result",4]]]],[11,"send","","Attempt to send a value on the sender.",20,[[],[["oakerror",4],["result",4]]]],[11,"drop","oak::grpc::client","",11,[[]]],[11,"from","oak","",5,[[["decodeerror",3]]]],[11,"from","","",5,[[["encodeerror",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"from","","",5,[[["oakstatus",4]]]],[11,"clone","oak::grpc","",10,[[],["writemode",4]]],[11,"clone","oak::handle","",14,[[],["sender",3]]],[11,"clone","","",15,[[],["receiver",3]]],[11,"clone","oak::io","",19,[[],["receiver",3]]],[11,"clone","","",20,[[],["sender",3]]],[11,"clone","oak::rand","",61,[[],["oakrng",3]]],[11,"clone","oak::proto::oak::storage","",44,[[],["storageitem",3]]],[11,"clone","","",45,[[],["storagechannelreadrequest",3]]],[11,"clone","","",46,[[],["storagechannelreadresponse",3]]],[11,"clone","","",47,[[],["storagechannelwriterequest",3]]],[11,"clone","","",63,[[],["storagechannelwriteresponse",3]]],[11,"clone","","",48,[[],["storagechanneldeleterequest",3]]],[11,"clone","","",64,[[],["storagechanneldeleteresponse",3]]],[11,"clone","","",49,[[],["storagechannelbeginrequest",3]]],[11,"clone","","",50,[[],["storagechannelbeginresponse",3]]],[11,"clone","","",51,[[],["storagechannelcommitrequest",3]]],[11,"clone","","",65,[[],["storagechannelcommitresponse",3]]],[11,"clone","","",52,[[],["storagechannelrollbackrequest",3]]],[11,"clone","","",66,[[],["storagechannelrollbackresponse",3]]],[11,"clone","oak::proto::oak::roughtime","",67,[[],["getroughtimerequest",3]]],[11,"clone","","",56,[[],["roughtime",3]]],[11,"default","oak::handle","",14,[[],["sender",3]]],[11,"default","","",15,[[],["receiver",3]]],[11,"default","oak::io","",19,[[],["receiver",3]]],[11,"default","","",20,[[],["sender",3]]],[11,"default","oak::proto::oak::storage","",44,[[],["storageitem",3]]],[11,"default","","",45,[[],["storagechannelreadrequest",3]]],[11,"default","","",46,[[],["storagechannelreadresponse",3]]],[11,"default","","",47,[[],["storagechannelwriterequest",3]]],[11,"default","","",63,[[],["storagechannelwriteresponse",3]]],[11,"default","","",48,[[],["storagechanneldeleterequest",3]]],[11,"default","","",64,[[],["storagechanneldeleteresponse",3]]],[11,"default","","",49,[[],["storagechannelbeginrequest",3]]],[11,"default","","",50,[[],["storagechannelbeginresponse",3]]],[11,"default","","",51,[[],["storagechannelcommitrequest",3]]],[11,"default","","",65,[[],["storagechannelcommitresponse",3]]],[11,"default","","",52,[[],["storagechannelrollbackrequest",3]]],[11,"default","","",66,[[],["storagechannelrollbackresponse",3]]],[11,"default","oak::proto::oak::roughtime","",67,[[],["getroughtimerequest",3]]],[11,"default","","",56,[[],["roughtime",3]]],[11,"eq","oak::grpc","",10,[[["writemode",4]]]],[11,"eq","oak::handle","",14,[[["sender",3]]]],[11,"ne","","",14,[[["sender",3]]]],[11,"eq","","",15,[[["receiver",3]]]],[11,"ne","","",15,[[["receiver",3]]]],[11,"eq","oak::io","",19,[[["receiver",3]]]],[11,"ne","","",19,[[["receiver",3]]]],[11,"eq","","",20,[[["sender",3]]]],[11,"ne","","",20,[[["sender",3]]]],[11,"eq","","",21,[[["message",3]]]],[11,"ne","","",21,[[["message",3]]]],[11,"eq","oak::proto::oak::storage","",44,[[["storageitem",3]]]],[11,"ne","","",44,[[["storageitem",3]]]],[11,"eq","","",45,[[["storagechannelreadrequest",3]]]],[11,"ne","","",45,[[["storagechannelreadrequest",3]]]],[11,"eq","","",46,[[["storagechannelreadresponse",3]]]],[11,"ne","","",46,[[["storagechannelreadresponse",3]]]],[11,"eq","","",47,[[["storagechannelwriterequest",3]]]],[11,"ne","","",47,[[["storagechannelwriterequest",3]]]],[11,"eq","","",63,[[["storagechannelwriteresponse",3]]]],[11,"eq","","",48,[[["storagechanneldeleterequest",3]]]],[11,"ne","","",48,[[["storagechanneldeleterequest",3]]]],[11,"eq","","",64,[[["storagechanneldeleteresponse",3]]]],[11,"eq","","",49,[[["storagechannelbeginrequest",3]]]],[11,"ne","","",49,[[["storagechannelbeginrequest",3]]]],[11,"eq","","",50,[[["storagechannelbeginresponse",3]]]],[11,"ne","","",50,[[["storagechannelbeginresponse",3]]]],[11,"eq","","",51,[[["storagechannelcommitrequest",3]]]],[11,"ne","","",51,[[["storagechannelcommitrequest",3]]]],[11,"eq","","",65,[[["storagechannelcommitresponse",3]]]],[11,"eq","","",52,[[["storagechannelrollbackrequest",3]]]],[11,"ne","","",52,[[["storagechannelrollbackrequest",3]]]],[11,"eq","","",66,[[["storagechannelrollbackresponse",3]]]],[11,"eq","oak::proto::oak::roughtime","",67,[[["getroughtimerequest",3]]]],[11,"eq","","",56,[[["roughtime",3]]]],[11,"ne","","",56,[[["roughtime",3]]]],[11,"fmt","oak","",5,[[["formatter",3]],["result",6]]],[11,"fmt","oak::grpc","",10,[[["formatter",3]],["result",6]]],[11,"fmt","oak::handle","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","oak::io","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","oak::rand","",61,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::storage","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::roughtime","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","oak","",5,[[["formatter",3]],["result",6]]],[11,"encode_raw","oak::handle","",14,[[]]],[11,"merge_field","","",14,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",14,[[]]],[11,"clear","","",14,[[]]],[11,"encode_raw","","",15,[[]]],[11,"merge_field","","",15,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",15,[[]]],[11,"clear","","",15,[[]]],[11,"encoded_len","oak::io","",19,[[]]],[11,"clear","","",19,[[]]],[11,"encode_raw","","",19,[[]]],[11,"merge_field","","",19,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",20,[[]]],[11,"clear","","",20,[[]]],[11,"encode_raw","","",20,[[]]],[11,"merge_field","","",20,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encode_raw","oak::proto::oak::storage","",44,[[]]],[11,"merge_field","","",44,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",44,[[]]],[11,"clear","","",44,[[]]],[11,"encode_raw","","",45,[[]]],[11,"merge_field","","",45,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",45,[[]]],[11,"clear","","",45,[[]]],[11,"encode_raw","","",46,[[]]],[11,"merge_field","","",46,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",46,[[]]],[11,"clear","","",46,[[]]],[11,"encode_raw","","",47,[[]]],[11,"merge_field","","",47,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",47,[[]]],[11,"clear","","",47,[[]]],[11,"encode_raw","","",63,[[]]],[11,"merge_field","","",63,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",63,[[]]],[11,"clear","","",63,[[]]],[11,"encode_raw","","",48,[[]]],[11,"merge_field","","",48,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",48,[[]]],[11,"clear","","",48,[[]]],[11,"encode_raw","","",64,[[]]],[11,"merge_field","","",64,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",64,[[]]],[11,"clear","","",64,[[]]],[11,"encode_raw","","",49,[[]]],[11,"merge_field","","",49,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",49,[[]]],[11,"clear","","",49,[[]]],[11,"encode_raw","","",50,[[]]],[11,"merge_field","","",50,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",50,[[]]],[11,"clear","","",50,[[]]],[11,"encode_raw","","",51,[[]]],[11,"merge_field","","",51,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",51,[[]]],[11,"clear","","",51,[[]]],[11,"encode_raw","","",65,[[]]],[11,"merge_field","","",65,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",65,[[]]],[11,"clear","","",65,[[]]],[11,"encode_raw","","",52,[[]]],[11,"merge_field","","",52,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",52,[[]]],[11,"clear","","",52,[[]]],[11,"encode_raw","","",66,[[]]],[11,"merge_field","","",66,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",66,[[]]],[11,"clear","","",66,[[]]],[11,"encode_raw","oak::proto::oak::roughtime","",67,[[]]],[11,"merge_field","","",67,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",67,[[]]],[11,"clear","","",67,[[]]],[11,"encode_raw","","",56,[[]]],[11,"merge_field","","",56,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",56,[[]]],[11,"clear","","",56,[[]]],[11,"next_u32","oak::rand","",61,[[]]],[11,"next_u64","","",61,[[]]],[11,"fill_bytes","","",61,[[]]],[11,"try_fill_bytes","","",61,[[],[["result",4],["error",3]]]],[11,"serialize","oak::proto::oak::label","Convert a label to bytes.",0,[[],["vec",3]]],[11,"deserialize","","Build the label from bytes.",0,[[],[["option",4],["label",3]]]],[11,"public_untrusted","","Return the least privileged label.",0,[[],["label",3]]],[11,"flows_to","","Compare two labels according to the lattice structure: L_0…",0,[[["label",3]]]],[11,"is_valid","oak","Returns `true` if `value` is a variant of…",1,[[]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` if…",1,[[],[["channelreadstatus",4],["option",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `OakStatus`.",2,[[]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`…",2,[[],[["option",4],["oakstatus",4]]]],[11,"is_valid","oak::grpc","Returns `true` if `value` is a variant of `Code`.",7,[[]]],[11,"from_i32","","Converts an `i32` to a `Code`, or `None` if `value` is not…",7,[[],[["code",4],["option",4]]]],[11,"encode","oak::proto::oak::application::node_configuration","",30,[[]]],[11,"merge","","",30,[[["option",4],["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",30,[[]]],[11,"encode","oak::proto::oak::label::tag","",40,[[]]],[11,"merge","","",40,[[["wiretype",4],["decodecontext",3],["option",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",40,[[]]]],"p":[[3,"Label"],[4,"ChannelReadStatus"],[4,"OakStatus"],[3,"ReadHandle"],[3,"WriteHandle"],[4,"OakError"],[3,"Status"],[4,"Code"],[3,"GrpcRequest"],[3,"GrpcResponse"],[4,"WriteMode"],[3,"Client"],[8,"ServerNode"],[3,"ChannelResponseWriter"],[3,"Sender"],[3,"Receiver"],[8,"HandleVisit"],[3,"Invocation"],[3,"ServerInvocationChannel"],[3,"Receiver"],[3,"Sender"],[3,"Message"],[8,"Decodable"],[8,"Encodable"],[8,"ReceiverExt"],[8,"SenderExt"],[3,"Roughtime"],[3,"Storage"],[3,"ApplicationConfiguration"],[3,"NodeConfiguration"],[4,"ConfigType"],[3,"WebAssemblyConfiguration"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"HttpServerConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[3,"Tag"],[4,"Tag"],[3,"GrpcTag"],[3,"WebAssemblyModuleTag"],[3,"TlsEndpointTag"],[3,"StorageItem"],[3,"StorageChannelReadRequest"],[3,"StorageChannelReadResponse"],[3,"StorageChannelWriteRequest"],[3,"StorageChannelDeleteRequest"],[3,"StorageChannelBeginRequest"],[3,"StorageChannelBeginResponse"],[3,"StorageChannelCommitRequest"],[3,"StorageChannelRollbackRequest"],[3,"StorageServiceClient"],[8,"StorageService"],[3,"StorageServiceDispatcher"],[3,"Roughtime"],[3,"RoughtimeServiceClient"],[8,"RoughtimeService"],[3,"RoughtimeServiceDispatcher"],[8,"Node"],[3,"OakRng"],[3,"LogConfiguration"],[3,"StorageChannelWriteResponse"],[3,"StorageChannelDeleteResponse"],[3,"StorageChannelCommitResponse"],[3,"StorageChannelRollbackResponse"],[3,"GetRoughtimeRequest"]]},\
"oak_app_build":{"doc":"An utility for building an Oak application from a manifest…","i":[[3,"Opt","oak_app_build","Command line options for the Oak Application builder.",null,null],[12,"manifest_path","","",0,null],[3,"Manifest","","",null,null],[12,"name","","",1,null],[12,"modules","","",1,null],[12,"initial_node_configuration","","",1,null],[3,"External","","",null,null],[12,"url","","",2,null],[12,"sha256","","",2,null],[3,"InitialNodeConfig","","",null,null],[12,"wasm_module_name","","",3,null],[12,"wasm_entrypoint_name","","",3,null],[4,"Module","","",null,null],[13,"Path","","",4,null],[13,"External","","",4,null],[5,"get_module_cache_path","","Get path for caching a downloaded file in…",null,[[["path",3]],["pathbuf",3]]],[5,"get_output_path","","Get path for the output application file in…",null,[[["path",3]],["pathbuf",3]]],[5,"get_sha256","","Computes SHA256 sum from `data` and returns it as a HEX…",null,[[],["string",3]]],[5,"download_file_from_url","","Download file from `url`.",null,[[]]],[5,"load_module","","Load Wasm module from file or URL if specified. If the…",null,[[["module",4],["path",3]]]],[5,"write_config_to_file","","Serializes an application configuration from `app_config`…",null,[[["path",3],["applicationconfiguration",3]],["result",6]]],[5,"main","","",null,[[],["result",6]]],[17,"OUTPUT_DIRECTORY","","Directory used to save build artifacts.",null,null],[17,"CACHE_DIRECTORY","","Directory used to save downloaded Wasm modules.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_request","","",1,[[],["request",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_request","","",2,[[],["request",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_request","","",3,[[],["request",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_request","","",4,[[],["request",3]]],[11,"clone","","",0,[[],["opt",3]]],[11,"default","","",3,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"Opt"],[3,"Manifest"],[3,"External"],[3,"InitialNodeConfig"],[4,"Module"]]},\
"oak_derive":{"doc":"","i":[[24,"HandleVisit","oak_derive","Automatically derives the `HandleVisit` trait for structs…",null,null]],"p":[]},\
"oak_tests":{"doc":"Test utilities to help with unit testing of Oak SDK code.","i":[[5,"compile_rust_wasm","oak_tests","Uses cargo to compile a Rust manifest to Wasm bytes.",null,[[],[["result",6],["vec",3]]]],[5,"run_single_module_default","","Convenience helper to build and run a single-Node…",null,[[],[["oakstatus",4],["result",4],["arc",3]]]],[5,"run_single_module","","Convenience helper to build and run a single-Node…",null,[[],[["oakstatus",4],["result",4],["arc",3]]]],[5,"run_single_module_with_config","","Convenience helper to build and run a single-Node…",null,[[["configmap",3]],[["oakstatus",4],["result",4],["arc",3]]]],[5,"runtime_config","","Build the configuration needed to launch a test Runtime…",null,[[["configmap",3]],["runtimeconfiguration",3]]],[5,"runtime_config_wasm","","Build the configuration needed to launch a test Runtime…",null,[[["string",3],["hashmap",3],["configmap",3],["vec",3]],["runtimeconfiguration",3]]],[5,"channel_and_interceptor","","Build a channel and interceptor suitable for building a…",null,[[]]]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);