var searchIndex={};
searchIndex["abitest_0_frontend"] = {"doc":"","i":[[5,"frontend_oak_main","abitest_0_frontend","",null,[[]]],[5,"channel_loser","","",null,[[]]],[0,"proto","","",null,null],[3,"AbiTestRequest","abitest_0_frontend::proto","",null,null],[12,"include","","Regular expression of test names to include in the test run.",0,null],[12,"exclude","","If non-empty, holds a regular expression of test names toâ€¦",0,null],[3,"AbiTestResponse","","",null,null],[12,"results","","",1,null],[3,"GrpcTestRequest","","",null,null],[12,"method_result","","",2,null],[3,"GrpcTestResponse","","",null,null],[12,"text","","",3,null],[3,"OakAbiTestServiceDispatcher","","",null,null],[3,"OakAbiTestServiceClient","","",null,null],[12,"0","","",4,null],[0,"abi_test_response","","",null,null],[3,"TestResult","abitest_0_frontend::proto::abi_test_response","",null,null],[12,"name","","",5,null],[12,"success","","",5,null],[12,"details","","",5,null],[12,"disabled","","",5,null],[0,"grpc_test_request","abitest_0_frontend::proto","",null,null],[4,"MethodResult","abitest_0_frontend::proto::grpc_test_request","",null,null],[13,"ErrCode","","",6,null],[13,"OkText","","",6,null],[11,"encode","","",6,[[]]],[11,"merge","","",6,[[["wiretype",4],["option",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",6,[[]]],[8,"OakAbiTestService","abitest_0_frontend::proto","",null,null],[10,"run_tests","","",7,[[["abitestrequest",3]],[["abitestresponse",3],["result",6]]]],[10,"unary_method","","",7,[[["grpctestrequest",3]],[["result",6],["grpctestresponse",3]]]],[10,"server_streaming_method","","",7,[[["channelresponsewriter",3],["grpctestrequest",3]]]],[10,"client_streaming_method","","",7,[[["vec",3],["grpctestrequest",3]],[["result",6],["grpctestresponse",3]]]],[10,"bidi_streaming_method","","",7,[[["vec",3],["channelresponsewriter",3],["grpctestrequest",3]]]],[11,"new","","",8,[[],["oakabitestservicedispatcher",3]]],[11,"run_tests","","",4,[[["abitestrequest",3]],[["abitestresponse",3],["result",6]]]],[11,"unary_method","","",4,[[["grpctestrequest",3]],[["result",6],["grpctestresponse",3]]]],[11,"server_streaming_method","","",4,[[["grpctestrequest",3]],[["receiver",3],["result",6]]]],[11,"client_streaming_method","","",4,[[["grpctestrequest",3]],[["result",6],["grpctestresponse",3]]]],[11,"bidi_streaming_method","","",4,[[["grpctestrequest",3]],[["receiver",3],["result",6]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"decode","","",0,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",0,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"decode","","",1,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",1,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"decode","","",2,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",2,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"decode","","",3,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",3,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"vzip","","",3,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"handle_command","","Handle incoming gRPC events for an [`ServerNode`].",8,[[["invocation",3]],[["result",4],["oakerror",4]]]],[11,"vzip","","",8,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","abitest_0_frontend::proto::abi_test_response","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"decode","","",5,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",5,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"vzip","","",5,[[]]],[11,"from","abitest_0_frontend::proto::grpc_test_request","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"clone","abitest_0_frontend::proto","",0,[[],["abitestrequest",3]]],[11,"clone","","",1,[[],["abitestresponse",3]]],[11,"clone","abitest_0_frontend::proto::abi_test_response","",5,[[],["testresult",3]]],[11,"clone","abitest_0_frontend::proto","",2,[[],["grpctestrequest",3]]],[11,"clone","abitest_0_frontend::proto::grpc_test_request","",6,[[],["methodresult",4]]],[11,"clone","abitest_0_frontend::proto","",3,[[],["grpctestresponse",3]]],[11,"default","","",0,[[],["abitestrequest",3]]],[11,"default","","",1,[[],["abitestresponse",3]]],[11,"default","abitest_0_frontend::proto::abi_test_response","",5,[[],["testresult",3]]],[11,"default","abitest_0_frontend::proto","",2,[[],["grpctestrequest",3]]],[11,"default","","",3,[[],["grpctestresponse",3]]],[11,"eq","","",0,[[["abitestrequest",3]]]],[11,"ne","","",0,[[["abitestrequest",3]]]],[11,"eq","","",1,[[["abitestresponse",3]]]],[11,"ne","","",1,[[["abitestresponse",3]]]],[11,"eq","abitest_0_frontend::proto::abi_test_response","",5,[[["testresult",3]]]],[11,"ne","","",5,[[["testresult",3]]]],[11,"eq","abitest_0_frontend::proto","",2,[[["grpctestrequest",3]]]],[11,"ne","","",2,[[["grpctestrequest",3]]]],[11,"eq","abitest_0_frontend::proto::grpc_test_request","",6,[[["methodresult",4]]]],[11,"ne","","",6,[[["methodresult",4]]]],[11,"eq","abitest_0_frontend::proto","",3,[[["grpctestresponse",3]]]],[11,"ne","","",3,[[["grpctestresponse",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","abitest_0_frontend::proto::abi_test_response","",5,[[["formatter",3]],["result",6]]],[11,"fmt","abitest_0_frontend::proto","",2,[[["formatter",3]],["result",6]]],[11,"fmt","abitest_0_frontend::proto::grpc_test_request","",6,[[["formatter",3]],["result",6]]],[11,"fmt","abitest_0_frontend::proto","",3,[[["formatter",3]],["result",6]]],[11,"invoke","","",8,[[["channelresponsewriter",3]]]],[11,"encode_raw","","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","","",1,[[]]],[11,"merge_field","","",1,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"encode_raw","abitest_0_frontend::proto::abi_test_response","",5,[[]]],[11,"merge_field","","",5,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",5,[[]]],[11,"clear","","",5,[[]]],[11,"encode_raw","abitest_0_frontend::proto","",2,[[]]],[11,"merge_field","","",2,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"encode_raw","","",3,[[]]],[11,"merge_field","","",3,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",3,[[]]],[11,"clear","","",3,[[]]]],"p":[[3,"AbiTestRequest"],[3,"AbiTestResponse"],[3,"GrpcTestRequest"],[3,"GrpcTestResponse"],[3,"OakAbiTestServiceClient"],[3,"TestResult"],[4,"MethodResult"],[8,"OakAbiTestService"],[3,"OakAbiTestServiceDispatcher"]]};
searchIndex["abitest_1_backend"] = {"doc":"","i":[[5,"backend_oak_main","abitest_1_backend","",null,[[]]],[5,"backend_fake_main","","",null,[[]]]],"p":[]};
searchIndex["abitest_common"] = {"doc":"","i":[[3,"InternalMessage","abitest_common","",null,null],[12,"msg","","",0,null],[17,"LOG_CONFIG_NAME","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"encode","","",0,[[],[["message",3],["result",4],["oakerror",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"encode","","",0,[[],[["oakerror",4],["result",4],["message",3]]]]],"p":[[3,"InternalMessage"]]};
searchIndex["abitest_tests"] = {"doc":"","i":[[5,"oak_main","abitest_tests","",null,[[]]]],"p":[]};
searchIndex["aggregator"] = {"doc":"Aggregator example for Project Oak.","i":[[3,"AggregatorNode","aggregator","Oak Node that collects and aggregates data. Data isâ€¦",null,null],[5,"oak_main","","",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]]],"p":[[3,"AggregatorNode"]]};
searchIndex["aggregator_backend"] = {"doc":"Backend server for the Aggregator example.","i":[[3,"AggregatorBackend","aggregator_backend","",null,null],[5,"main","","",null,[[],[["box",3],["result",4]]]],[0,"proto","","",null,null],[3,"SerializedSparseVector","aggregator_backend::proto","Data provided by clients is represented by Sparse Vectors:â€¦",null,null],[12,"indices","","",0,null],[12,"values","","",0,null],[3,"Sample","","Message sent by clients.",null,null],[12,"bucket","","Data with different Bucket IDs is not mixed and aggregatedâ€¦",1,null],[12,"data","","",1,null],[0,"aggregator_server","","Generated server implementations.",null,null],[3,"_Inner","aggregator_backend::proto::aggregator_server","",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[8,"Aggregator","","Generated trait containing gRPC methods that should beâ€¦",null,null],[10,"submit_sample","","",3,[[["request",3],["sample",3]],[["pin",3],["box",3]]]],[11,"from","aggregator_backend","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"vzip","","",4,[[]]],[11,"from","aggregator_backend::proto","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","aggregator_backend::proto::aggregator_server","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"submit_sample","aggregator_backend","",4,[[["sample",3],["request",3]],[["pin",3],["box",3]]]],[11,"clone","aggregator_backend::proto","",0,[[],["serializedsparsevector",3]]],[11,"clone","","",1,[[],["sample",3]]],[11,"clone","aggregator_backend::proto::aggregator_server","",2,[[]]],[11,"default","aggregator_backend::proto","",0,[[],["serializedsparsevector",3]]],[11,"default","","",1,[[],["sample",3]]],[11,"default","aggregator_backend","",4,[[],["aggregatorbackend",3]]],[11,"eq","aggregator_backend::proto","",0,[[["serializedsparsevector",3]]]],[11,"ne","","",0,[[["serializedsparsevector",3]]]],[11,"eq","","",1,[[["sample",3]]]],[11,"ne","","",1,[[["sample",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","aggregator_backend::proto::aggregator_server","",2,[[["formatter",3]],["result",6]]],[11,"encode_raw","aggregator_backend::proto","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","","",1,[[]]],[11,"merge_field","","",1,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",1,[[]]],[11,"clear","","",1,[[]]]],"p":[[3,"SerializedSparseVector"],[3,"Sample"],[3,"_Inner"],[8,"Aggregator"],[3,"AggregatorBackend"]]};
searchIndex["aggregator_common"] = {"doc":"","i":[[3,"ThresholdAggregator","aggregator_common","Generic data structure that combines data values andâ€¦",null,null],[8,"Monoid","","Represents a data structure with a single associativeâ€¦",null,null],[10,"identity","","",0,[[]]],[10,"combine","","",0,[[]]],[11,"new","","",1,[[]]],[11,"submit","","Combines a new sample with the current aggregated value.",1,[[]]],[11,"get","","Returns the current aggregated value if the number ofâ€¦",1,[[],["option",4]]],[11,"take","","If the number of current samples is at leastâ€¦",1,[[],["option",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]]],"p":[[8,"Monoid"],[3,"ThresholdAggregator"]]};
searchIndex["auth_client"] = {"doc":"Example client authenticating to Oak using OpenID Connect.","i":[[3,"Opt","auth_client","",null,null],[12,"address","","",0,null],[12,"auth_server","","",0,null],[12,"redirect_address","","",0,null],[12,"ca_cert","","",0,null],[5,"main","","",null,[[],[["box",3],["result",4]]]],[5,"get_authentication_code","","Gets the OIDC authentication code by opening the defaultâ€¦",null,[[]]],[0,"auth_client","","",null,null],[5,"build_auth_client","auth_client::auth_client","Creates an `AuthenticationClient` that trusts certificatesâ€¦",null,[[]]],[5,"get_authentication_request_url","","Gets the URL for authentication requests.",null,[[["authenticationclient",3]]]],[5,"get_identity_token","","Exchanges the authorisation code for an identity token.",null,[[["authenticationclient",3]]]],[0,"proto","","",null,null],[3,"AuthParameters","auth_client::auth_client::proto","Parameters needed by clients to initiate OpenID Connectâ€¦",null,null],[12,"client_id","","",1,null],[12,"auth_endpoint","","TODO(#886): Add support for scope, state and code challenge.",1,null],[3,"IdentityTokenRequest","","Request for exchanging an authorisation code for anâ€¦",null,null],[12,"auth_code","","",2,null],[3,"IdentityTokenResponse","","Wrapper for the exchanged identity token.",null,null],[12,"token","","",3,null],[0,"authentication_client","","Generated client implementations.",null,null],[3,"AuthenticationClient","auth_client::auth_client::proto::authentication_client","",null,null],[12,"inner","","",4,null],[11,"connect","","Attempt to create a new client by connecting to a givenâ€¦",4,[[]]],[11,"new","","",4,[[]]],[11,"with_interceptor","","",4,[[]]],[11,"get_auth_parameters","","Gets the parameters needed by a client to make anâ€¦",4,[[]]],[11,"get_token_from_code","","Exchanges an authorisation code for an identity token.",4,[[]]],[0,"redirect_handler","auth_client","",null,null],[3,"RedirectHandler","auth_client::redirect_handler","Handles the redirects to extract code from the query string.",null,null],[12,"result_sender","","",5,null],[3,"RedirectHandlerProducer","","Produces instances of the redirect handler service.",null,null],[12,"result_sender","","",6,null],[3,"AuthError","","Wrapper to store the server authentication error message.",null,null],[12,"server_message","","",7,null],[11,"new","","",6,[[["sender",3],["result",4]],["redirecthandlerproducer",3]]],[11,"new","","",7,[[],["autherror",3]]],[11,"from","auth_client","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","auth_client::auth_client::proto","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"from","auth_client::auth_client::proto::authentication_client","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"vzip","","",4,[[]]],[11,"from","auth_client::redirect_handler","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"poll_ready","","",5,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",5,[[["request",3]]]],[11,"into_request","","",5,[[],["request",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"poll_ready","","",6,[[["context",3]],[["poll",4],["result",4]]]],[11,"make_service","","",6,[[]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_request","","",7,[[],["request",3]]],[11,"vzip","","",7,[[]]],[11,"clone","auth_client::auth_client::proto","",1,[[],["authparameters",3]]],[11,"clone","","",2,[[],["identitytokenrequest",3]]],[11,"clone","","",3,[[],["identitytokenresponse",3]]],[11,"clone","auth_client::auth_client::proto::authentication_client","",4,[[]]],[11,"clone","auth_client::redirect_handler","",7,[[],["autherror",3]]],[11,"clone","auth_client","",0,[[],["opt",3]]],[11,"default","auth_client::auth_client::proto","",1,[[],["authparameters",3]]],[11,"default","","",2,[[],["identitytokenrequest",3]]],[11,"default","","",3,[[],["identitytokenresponse",3]]],[11,"eq","","",1,[[["authparameters",3]]]],[11,"ne","","",1,[[["authparameters",3]]]],[11,"eq","","",2,[[["identitytokenrequest",3]]]],[11,"ne","","",2,[[["identitytokenrequest",3]]]],[11,"eq","","",3,[[["identitytokenresponse",3]]]],[11,"ne","","",3,[[["identitytokenresponse",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","auth_client::auth_client::proto::authentication_client","",4,[[["formatter",3]],["result",6]]],[11,"fmt","auth_client::redirect_handler","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"source","","",7,[[],[["error",8],["option",4]]]],[11,"poll_ready","","",5,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",5,[[["body",3],["request",3]]]],[11,"poll_ready","","",6,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",6,[[]]],[11,"clap","auth_client","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]],[11,"encode_raw","auth_client::auth_client::proto","",1,[[]]],[11,"merge_field","","",1,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"encode_raw","","",2,[[]]],[11,"merge_field","","",2,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"encode_raw","","",3,[[]]],[11,"merge_field","","",3,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",3,[[]]],[11,"clear","","",3,[[]]]],"p":[[3,"Opt"],[3,"AuthParameters"],[3,"IdentityTokenRequest"],[3,"IdentityTokenResponse"],[3,"AuthenticationClient"],[3,"RedirectHandler"],[3,"RedirectHandlerProducer"],[3,"AuthError"]]};
searchIndex["auth_server"] = {"doc":"Example implemenation of an OpenID Connect authenticationâ€¦","i":[[3,"Opt","auth_server","",null,null],[12,"address","","",0,null],[12,"client_id","","",0,null],[12,"client_secret","","",0,null],[12,"cert","","",0,null],[12,"private_key","","",0,null],[5,"main","","",null,[[],[["box",3],["result",4]]]],[0,"proto","","",null,null],[3,"AuthParameters","auth_server::proto","Parameters needed by clients to initiate OpenID Connectâ€¦",null,null],[12,"client_id","","",1,null],[12,"auth_endpoint","","TODO(#886): Add support for scope, state and code challenge.",1,null],[3,"IdentityTokenRequest","","Request for exchanging an authorisation code for anâ€¦",null,null],[12,"auth_code","","",2,null],[3,"IdentityTokenResponse","","Wrapper for the exchanged identity token.",null,null],[12,"token","","",3,null],[0,"authentication_server","","Generated server implementations.",null,null],[3,"_Inner","auth_server::proto::authentication_server","",null,null],[12,"0","","",4,null],[12,"1","","",4,null],[8,"Authentication","","Generated trait containing gRPC methods that should beâ€¦",null,null],[10,"get_auth_parameters","","Gets the parameters needed by a client to make anâ€¦",5,[[["request",3]],[["pin",3],["box",3]]]],[10,"get_token_from_code","","Exchanges an authorisation code for an identity token.",5,[[["identitytokenrequest",3],["request",3]],[["pin",3],["box",3]]]],[0,"auth_handler","auth_server","gRPC service implementation for handling authenticationâ€¦",null,null],[3,"AuthenticationHandler","auth_server::auth_handler","Service implementation to handle authentication requests.",null,null],[12,"client_id","","",6,null],[12,"client_secret","","",6,null],[5,"build_service","","",null,[[],[["authenticationhandler",3],["authenticationserver",3]]]],[0,"proto","","",null,null],[3,"AuthParameters","auth_server::auth_handler::proto","Parameters needed by clients to initiate OpenID Connectâ€¦",null,null],[12,"client_id","","",7,null],[12,"auth_endpoint","","TODO(#886): Add support for scope, state and code challenge.",7,null],[3,"IdentityTokenRequest","","Request for exchanging an authorisation code for anâ€¦",null,null],[12,"auth_code","","",8,null],[3,"IdentityTokenResponse","","Wrapper for the exchanged identity token.",null,null],[12,"token","","",9,null],[0,"authentication_server","","Generated server implementations.",null,null],[3,"_Inner","auth_server::auth_handler::proto::authentication_server","",null,null],[12,"0","","",10,null],[12,"1","","",10,null],[8,"Authentication","","Generated trait containing gRPC methods that should beâ€¦",null,null],[10,"get_auth_parameters","","Gets the parameters needed by a client to make anâ€¦",11,[[["request",3]],[["box",3],["pin",3]]]],[10,"get_token_from_code","","Exchanges an authorisation code for an identity token.",11,[[["request",3],["identitytokenrequest",3]],[["box",3],["pin",3]]]],[11,"new","auth_server::auth_handler","",6,[[],["authenticationhandler",3]]],[0,"token_exchanger","auth_server","Utilities for exchanging authorisation codes for identityâ€¦",null,null],[3,"Claims","auth_server::token_exchanger","Claims encoded into the identity token. Reference:â€¦",null,null],[12,"audience","","The intended audience for the token (will be a client id).",12,null],[12,"expiry","","The expiration time for the token in Unix time (seconds).",12,null],[12,"issued_at","","The time that the token was issued in Unix time (seconds).",12,null],[12,"issuer","","The issuer identifier (https://accounts.google.com orâ€¦",12,null],[12,"subject","","The unique identifier for the account.",12,null],[12,"email","","The email address used for logging into the account.",12,null],[3,"TokenRequest","","The request paramters for the token service. Reference:â€¦",null,null],[12,"code","","The authorisation code to exchange for an ID token.",13,null],[12,"client_id","","The OAuth client ID used for requesting the authorisationâ€¦",13,null],[12,"client_secret","","The secret associated with the OAuth client ID.",13,null],[12,"redirect_uri","","The redirect URI that was used when requesting theâ€¦",13,null],[12,"grant_type","","The grant type. This should always be 'authorization_code'â€¦",13,null],[3,"TokenResponse","","The response from the token service. Reference:â€¦",null,null],[12,"expires_in","","",14,null],[12,"id_token","","",14,null],[3,"KeySet","","Container for the JSON Web Key Set containing the signingâ€¦",null,null],[12,"keys","","The keys contained in the key set.",15,null],[3,"Key","","A JSON Web Key potentially used for signing the identityâ€¦",null,null],[12,"algorithm","","The signing algorithm for the key.",16,null],[12,"exponent","","Base64 encoded RSA exponent.",16,null],[12,"key_id","","The key ID.",16,null],[12,"modulus","","Base64 encoded RSA modulus.",16,null],[3,"TokenError","","Represents a token validation error.",null,null],[12,"message","","",17,null],[5,"exchange_code_for_token","","Exchanges an authorisation code for an ID token andâ€¦",null,[[]]],[5,"decode_identity_token","","",null,[[]]],[5,"get_key","","Gets the public key that matches the header's key ID andâ€¦",null,[[["header",3]]]],[11,"new","","",17,[[],["tokenerror",3]]],[11,"from","auth_server","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","auth_server::proto","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"from","auth_server::proto::authentication_server","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"vzip","","",4,[[]]],[11,"from","auth_server::auth_handler","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"from","auth_server::auth_handler::proto","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_request","","",7,[[],["request",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_request","","",8,[[],["request",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_request","","",9,[[],["request",3]]],[11,"vzip","","",9,[[]]],[11,"from","auth_server::auth_handler::proto::authentication_server","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_request","","",10,[[],["request",3]]],[11,"vzip","","",10,[[]]],[11,"from","auth_server::token_exchanger","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_request","","",12,[[],["request",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_request","","",13,[[],["request",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_request","","",14,[[],["request",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_request","","",15,[[],["request",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_request","","",16,[[],["request",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_request","","",17,[[],["request",3]]],[11,"vzip","","",17,[[]]],[11,"get_auth_parameters","auth_server::auth_handler","Gets the authentication parameters needed by the client toâ€¦",6,[[["request",3]],[["pin",3],["box",3]]]],[11,"get_token_from_code","","Exchanges an authorization code for an identity token.",6,[[["request",3],["identitytokenrequest",3]],[["box",3],["pin",3]]]],[11,"clone","auth_server::proto","",1,[[],["authparameters",3]]],[11,"clone","","",2,[[],["identitytokenrequest",3]]],[11,"clone","","",3,[[],["identitytokenresponse",3]]],[11,"clone","auth_server::proto::authentication_server","",4,[[]]],[11,"clone","auth_server::auth_handler::proto","",7,[[],["authparameters",3]]],[11,"clone","","",8,[[],["identitytokenrequest",3]]],[11,"clone","","",9,[[],["identitytokenresponse",3]]],[11,"clone","auth_server::auth_handler::proto::authentication_server","",10,[[]]],[11,"clone","auth_server::token_exchanger","",16,[[],["key",3]]],[11,"clone","","",17,[[],["tokenerror",3]]],[11,"clone","auth_server","",0,[[],["opt",3]]],[11,"default","auth_server::proto","",1,[[],["authparameters",3]]],[11,"default","","",2,[[],["identitytokenrequest",3]]],[11,"default","","",3,[[],["identitytokenresponse",3]]],[11,"default","auth_server::auth_handler::proto","",7,[[],["authparameters",3]]],[11,"default","","",8,[[],["identitytokenrequest",3]]],[11,"default","","",9,[[],["identitytokenresponse",3]]],[11,"default","auth_server::auth_handler","",6,[[],["authenticationhandler",3]]],[11,"eq","auth_server::proto","",1,[[["authparameters",3]]]],[11,"ne","","",1,[[["authparameters",3]]]],[11,"eq","","",2,[[["identitytokenrequest",3]]]],[11,"ne","","",2,[[["identitytokenrequest",3]]]],[11,"eq","","",3,[[["identitytokenresponse",3]]]],[11,"ne","","",3,[[["identitytokenresponse",3]]]],[11,"eq","auth_server::auth_handler::proto","",7,[[["authparameters",3]]]],[11,"ne","","",7,[[["authparameters",3]]]],[11,"eq","","",8,[[["identitytokenrequest",3]]]],[11,"ne","","",8,[[["identitytokenrequest",3]]]],[11,"eq","","",9,[[["identitytokenresponse",3]]]],[11,"ne","","",9,[[["identitytokenresponse",3]]]],[11,"fmt","auth_server::proto","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","auth_server::proto::authentication_server","",4,[[["formatter",3]],["result",6]]],[11,"fmt","auth_server::auth_handler::proto","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","auth_server::auth_handler::proto::authentication_server","",10,[[["formatter",3]],["result",6]]],[11,"fmt","auth_server::token_exchanger","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"source","","",17,[[],[["error",8],["option",4]]]],[11,"clap","auth_server","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]],[11,"encode_raw","auth_server::proto","",1,[[]]],[11,"merge_field","","",1,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"encode_raw","","",2,[[]]],[11,"merge_field","","",2,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"encode_raw","","",3,[[]]],[11,"merge_field","","",3,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",3,[[]]],[11,"clear","","",3,[[]]],[11,"encode_raw","auth_server::auth_handler::proto","",7,[[]]],[11,"merge_field","","",7,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",7,[[]]],[11,"clear","","",7,[[]]],[11,"encode_raw","","",8,[[]]],[11,"merge_field","","",8,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","","",9,[[]]],[11,"merge_field","","",9,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"deserialize","auth_server::token_exchanger","",12,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]]],"p":[[3,"Opt"],[3,"AuthParameters"],[3,"IdentityTokenRequest"],[3,"IdentityTokenResponse"],[3,"_Inner"],[8,"Authentication"],[3,"AuthenticationHandler"],[3,"AuthParameters"],[3,"IdentityTokenRequest"],[3,"IdentityTokenResponse"],[3,"_Inner"],[8,"Authentication"],[3,"Claims"],[3,"TokenRequest"],[3,"TokenResponse"],[3,"KeySet"],[3,"Key"],[3,"TokenError"]]};
searchIndex["chat"] = {"doc":"","i":[[5,"oak_main","chat","",null,[[]]]],"p":[]};
searchIndex["expect"] = {"doc":"","i":[[14,"expect_eq","expect","",null,null],[14,"expect_matches","","",null,null],[14,"expect","","",null,null]],"p":[]};
searchIndex["hello_world"] = {"doc":"","i":[[5,"oak_main","hello_world","",null,[[]]]],"p":[]};
searchIndex["machine_learning"] = {"doc":"","i":[[5,"oak_main","machine_learning","",null,[[]]]],"p":[]};
searchIndex["oak"] = {"doc":"","i":[[3,"Label","oak","Label represents information flowing through a Node orâ€¦",null,null],[12,"secrecy_tags","","",0,null],[12,"integrity_tags","","",0,null],[4,"ChannelReadStatus","","Single byte values used to indicate the read status of aâ€¦",null,null],[13,"NotReady","","No pending messages available on channel.",1,null],[13,"ReadReady","","Pending message available on channel.",1,null],[13,"InvalidChannel","","Channel handle does not identify the read half of aâ€¦",1,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",1,null],[13,"PermissionDenied","","A node trying to access the channel does not have theâ€¦",1,null],[4,"OakStatus","","Status values exchanged as i32 values across the Node Wasmâ€¦",null,null],[13,"Unspecified","","",2,null],[13,"Ok","","Success.",2,null],[13,"ErrBadHandle","","Invalid handle provided.",2,null],[13,"ErrInvalidArgs","","Arguments invalid.",2,null],[13,"ErrChannelClosed","","Channel has been closed.",2,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an outputâ€¦",2,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (anâ€¦",2,null],[13,"ErrOutOfRange","","Argument out of valid range.",2,null],[13,"ErrInternal","","Internal error.",2,null],[13,"ErrTerminated","","Node terminated.",2,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",2,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to performâ€¦",2,null],[3,"Handle","","Handle used to identify read or write channel halves.",null,null],[3,"ReadHandle","","Wrapper for a handle to the read half of a channel.",null,null],[12,"handle","","",3,null],[3,"WriteHandle","","Wrapper for a handle to the send half of a channel.",null,null],[12,"handle","","",4,null],[4,"OakError","","Generic Oak error.",null,null],[13,"ProtobufDecodeError","","",5,null],[13,"ProtobufEncodeError","","",5,null],[13,"OakStatus","","",5,null],[13,"IoError","","",5,null],[5,"wait_on_channels","","Wait for one or more of the provided handles to becomeâ€¦",null,[[],[["vec",3],["result",4],["oakstatus",4]]]],[5,"channel_read","","Read a message from a channel without blocking.",null,[[["vec",3],["vec",3],["readhandle",3]],[["oakstatus",4],["result",4]]]],[5,"channel_write","","Write a message to a channel.",null,[[["writehandle",3]],[["oakstatus",4],["result",4]]]],[5,"channel_create","","Similar to [`channel_create_with_label`], but with a fixedâ€¦",null,[[],[["oakstatus",4],["result",4]]]],[5,"channel_create_with_label","","Create a new unidirectional channel.",null,[[["label",3]],[["oakstatus",4],["result",4]]]],[5,"channel_close","","Close the specified channel [`Handle`].",null,[[["handle",3]],[["oakstatus",4],["result",4]]]],[5,"node_create","","Similar to [`node_create_with_label`], but with a fixedâ€¦",null,[[["readhandle",3]],[["oakstatus",4],["result",4]]]],[5,"node_create_with_label","","Creates a new Node running the configuration identified byâ€¦",null,[[["label",3],["readhandle",3]],[["oakstatus",4],["result",4]]]],[5,"random_get","","Fill a buffer with random data.",null,[[],[["oakstatus",4],["result",4]]]],[5,"result_from_status","","Convert a status returned from a host function call to aâ€¦",null,[[],[["result",4],["oakstatus",4]]]],[5,"set_panic_hook","","Install a panic hook that logs [panic information].",null,[[]]],[5,"run_event_loop","","Run an event loop on the provided `node`:",null,[[["decodable",8],["node",8]]]],[0,"grpc","","Functionality to help Oak Nodes interact with gRPC.",null,null],[3,"Status","oak::grpc","The `Status` type defines a logical error model that isâ€¦",null,null],[12,"code","","The status code, which should be an enum value ofâ€¦",6,null],[12,"message","","A developer-facing error message, which should be inâ€¦",6,null],[12,"details","","A list of messages that carry the error details. There isâ€¦",6,null],[4,"Code","","The canonical error codes for Google APIs.",null,null],[13,"Ok","","Not an error; returned on success",7,null],[13,"Cancelled","","The operation was cancelled, typically by the caller.",7,null],[13,"Unknown","","Unknown error. For example, this error may be returnedâ€¦",7,null],[13,"InvalidArgument","","The client specified an invalid argument. Note that thisâ€¦",7,null],[13,"DeadlineExceeded","","The deadline expired before the operation could complete.â€¦",7,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was notâ€¦",7,null],[13,"AlreadyExists","","The entity that a client attempted to create (e.g., fileâ€¦",7,null],[13,"PermissionDenied","","The caller does not have permission to execute theâ€¦",7,null],[13,"Unauthenticated","","The request does not have valid authentication credentialsâ€¦",7,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-userâ€¦",7,null],[13,"FailedPrecondition","","The operation was rejected because the system is not in aâ€¦",7,null],[13,"Aborted","","The operation was aborted, typically due to a concurrencyâ€¦",7,null],[13,"OutOfRange","","The operation was attempted past the valid range. E.g.,â€¦",7,null],[13,"Unimplemented","","The operation is not implemented or is notâ€¦",7,null],[13,"Internal","","Internal errors. This means that some invariants expectedâ€¦",7,null],[13,"Unavailable","","The service is currently unavailable. This is most likelyâ€¦",7,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",7,null],[3,"GrpcRequest","","",null,null],[12,"method_name","","",8,null],[12,"req_msg","","The body of the request. Usually a serialized protobufâ€¦",8,null],[12,"last","","",8,null],[3,"GrpcResponse","","",null,null],[12,"rsp_msg","","The body of the response. Usually a serialized protobufâ€¦",9,null],[12,"status","","",9,null],[12,"last","","The last field indicates that this is definitely the finalâ€¦",9,null],[3,"Invocation","","A gRPC invocation, consisting of exactly two channels: oneâ€¦",null,null],[12,"request_receiver","","",10,null],[12,"response_sender","","",10,null],[3,"ChannelResponseWriter","","Channel-holding object that encapsulates response messagesâ€¦",null,null],[4,"WriteMode","","Indicate whether a write method should leave the currentâ€¦",null,null],[13,"KeepOpen","","",11,null],[13,"Close","","",11,null],[5,"build_status","","Helper to create a gRPC status object.",null,[[["code",4]],["status",3]]],[5,"decap_response","","Extract a protocol buffer message from a GrpcResponseâ€¦",null,[[["grpcresponse",3]],["result",6]]],[5,"invoke_grpc_method_stream","","Helper to inject a (single) gRPC request message via aâ€¦",null,[[["sender",3]],[["receiver",3],["result",6]]]],[5,"invoke_grpc_method","","Helper to inject a (single) gRPC request message via aâ€¦",null,[[["sender",3]],["result",6]]],[5,"handle_req_rsp","","Generic function that handles request deserialization andâ€¦",null,[[["channelresponsewriter",3]]]],[5,"handle_req_stream","","Generic function that handles request deserialization andâ€¦",null,[[["channelresponsewriter",3]]]],[5,"handle_stream_rsp","","Generic function that handles request deserialization andâ€¦",null,[[["channelresponsewriter",3]]]],[5,"handle_stream_stream","","Generic function that handles request deserialization andâ€¦",null,[[["channelresponsewriter",3]]]],[0,"client","","",null,null],[3,"Client","oak::grpc::client","Client for a gRPC service in another Node.",null,null],[12,"invocation_sender","","",12,null],[11,"new","","Similar to [`Client::new_with_label`] but with a fixedâ€¦",12,[[],[["client",3],["option",4]]]],[11,"new_with_label","","Creates a new Node that implements a gRPC service, and ifâ€¦",12,[[["label",3]],[["client",3],["option",4]]]],[0,"server","oak::grpc","Functionality to help Oak Nodes create gRPC pseudo-Nodes.",null,null],[5,"init_default","oak::grpc::server","Initialize a gRPC pseudo-Node with the defaultâ€¦",null,[[]]],[5,"init","","Initializes a gRPC server pseudo-Node and passes it aâ€¦",null,[[],[["oakstatus",4],["result",4],["readhandle",3]]]],[17,"DEFAULT_CONFIG_NAME","","Default name for predefined Node configuration thatâ€¦",null,null],[6,"Result","oak::grpc","Result type that uses a [`Status`] type for error values.",null,null],[8,"ServerNode","","Trait for Oak Nodes that act as a gRPC services.",null,null],[10,"invoke","","Process a single gRPC method invocation.",13,[[["channelresponsewriter",3]]]],[11,"new","","",14,[[["grpcresponse",3],["sender",3]]]],[11,"handle","","Retrieve the Oak handle underlying the writer object.",14,[[],["writehandle",3]]],[11,"write","","Write out a gRPC response and optionally close out theâ€¦",14,[[["writemode",4]],[["result",4],["oakerror",4]]]],[11,"write_empty","","Write an empty gRPC response and optionally close out theâ€¦",14,[[["writemode",4]],[["result",4],["oakerror",4]]]],[11,"close","","Close out the gRPC method invocation with the given finalâ€¦",14,[[["result",6]],[["result",4],["oakerror",4]]]],[0,"io","oak","Wrappers for Oak SDK types to allow their use withâ€¦",null,null],[3,"Receiver","oak::io","Wrapper for a handle to the read half of a channel,â€¦",null,null],[12,"handle","","",15,null],[3,"Sender","","Wrapper for a handle to the send half of a channel,â€¦",null,null],[12,"handle","","",16,null],[3,"Message","","A simple holder for bytes + handles, using internallyâ€¦",null,null],[12,"bytes","","",17,null],[12,"handles","","",17,null],[5,"channel_create","","Create a new channel for transmission of `Encodable` andâ€¦",null,[[],[["result",4],["oakstatus",4]]]],[5,"channel_create_with_label","","",null,[[["label",3]],[["result",4],["oakstatus",4]]]],[5,"error_from_nonok_status","","Map a non-OK [`OakStatus`] value to the nearest availableâ€¦",null,[[["oakstatus",4]],["error",3]]],[11,"new","","",15,[[["readhandle",3]]]],[11,"close","","Close the underlying channel used by this receiver.",15,[[],[["oakstatus",4],["result",4]]]],[11,"receive","","Attempt to wait for a value on this receiver, blocking ifâ€¦",15,[[],[["oakerror",4],["result",4]]]],[11,"try_receive","","Attempt to read a value from this receiver, withoutâ€¦",15,[[],[["oakerror",4],["result",4]]]],[11,"wait","","Wait for a value to be available from this receiver.",15,[[],[["oakstatus",4],["result",4]]]],[11,"new","","",16,[[["writehandle",3]]]],[11,"close","","Close the underlying channel used by this sender.",16,[[],[["oakstatus",4],["result",4]]]],[11,"send","","Attempt to send a value on this sender.",16,[[],[["oakerror",4],["result",4]]]],[8,"Decodable","","A trait for objects that can be decoded from bytes +â€¦",null,null],[10,"decode","","",18,[[["message",3]],[["result",4],["oakerror",4]]]],[8,"Encodable","","A trait for objects that can be encoded as bytes + handles.",null,null],[10,"encode","","",19,[[],[["result",4],["message",3],["oakerror",4]]]],[0,"logger","oak","A logger that sends output to an Oak logging channel, forâ€¦",null,null],[5,"init_default","oak::logger","Initialize Node-wide default logging.",null,[[]]],[5,"init","","Initialize Node-wide logging via a channel to a loggingâ€¦",null,[[["level",4]],[["result",4],["setloggererror",3]]]],[17,"DEFAULT_CONFIG_NAME","","Default name for predefined Node configuration thatâ€¦",null,null],[0,"rand","oak","Functionality to allow use of the rand crate in Oak.",null,null],[3,"OakRng","oak::rand","",null,null],[0,"roughtime","oak","Helper library for accessing the Oak Roughtime service.",null,null],[3,"Roughtime","oak::roughtime","Local representation of the connection to an externalâ€¦",null,null],[17,"DEFAULT_CONFIG_NAME","","Default name for predefined Node config that correspondsâ€¦",null,null],[11,"default","","Create a default `Roughtime` instance assuming the defaultâ€¦",20,[[],[["roughtime",3],["option",4]]]],[11,"new","","Create a `Roughtime` instance using the given nameâ€¦",20,[[],[["roughtime",3],["option",4]]]],[11,"get_roughtime","","Get the current Roughtime value as a Duration since UNIXâ€¦",20,[[],[["result",6],["duration",3]]]],[0,"storage","oak","Helper library for accessing Oak storage services.",null,null],[3,"Storage","oak::storage","Local representation of the connection to an externalâ€¦",null,null],[17,"DEFAULT_CONFIG_NAME","","Default name for predefined Node config that correspondsâ€¦",null,null],[11,"default","","Create a default `Storage` instance assuming the defaultâ€¦",21,[[],[["option",4],["storage",3]]]],[11,"new","","Create a `Storage` instance using the given nameâ€¦",21,[[],[["option",4],["storage",3]]]],[11,"read","","Read the value associated with the given `name` from theâ€¦",21,[[],[["result",6],["vec",3]]]],[11,"write","","Set the value associated with the given `name` from theâ€¦",21,[[],["result",6]]],[11,"delete","","Delete the value associated with the given `name` from theâ€¦",21,[[],["result",6]]],[0,"proto","oak","",null,null],[0,"oak","oak::proto","",null,null],[0,"storage","oak::proto::oak","",null,null],[3,"StorageItem","oak::proto::oak::storage","",null,null],[12,"name","","",22,null],[12,"value","","",22,null],[12,"label","","",22,null],[3,"StorageChannelReadRequest","","",null,null],[12,"storage_name","","",23,null],[12,"transaction_id","","",23,null],[12,"item","","",23,null],[3,"StorageChannelReadResponse","","",null,null],[12,"item","","",24,null],[3,"StorageChannelWriteRequest","","",null,null],[12,"storage_name","","",25,null],[12,"transaction_id","","",25,null],[12,"item","","",25,null],[3,"StorageChannelWriteResponse","","",null,null],[3,"StorageChannelDeleteRequest","","",null,null],[12,"storage_name","","",26,null],[12,"transaction_id","","",26,null],[12,"item","","",26,null],[3,"StorageChannelDeleteResponse","","",null,null],[3,"StorageChannelBeginRequest","","",null,null],[12,"storage_name","","",27,null],[3,"StorageChannelBeginResponse","","",null,null],[12,"transaction_id","","",28,null],[3,"StorageChannelCommitRequest","","",null,null],[12,"storage_name","","",29,null],[12,"transaction_id","","",29,null],[3,"StorageChannelCommitResponse","","",null,null],[3,"StorageChannelRollbackRequest","","",null,null],[12,"storage_name","","",30,null],[12,"storage_id","","",30,null],[12,"transaction_id","","",30,null],[3,"StorageChannelRollbackResponse","","",null,null],[3,"StorageServiceDispatcher","","",null,null],[3,"StorageServiceClient","","",null,null],[12,"0","","",31,null],[8,"StorageService","","",null,null],[10,"read","","",32,[[["storagechannelreadrequest",3]],[["storagechannelreadresponse",3],["result",6]]]],[10,"write","","",32,[[["storagechannelwriterequest",3]],[["storagechannelwriteresponse",3],["result",6]]]],[10,"delete","","",32,[[["storagechanneldeleterequest",3]],[["result",6],["storagechanneldeleteresponse",3]]]],[10,"begin","","",32,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelbeginresponse",3]]]],[10,"commit","","",32,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelcommitresponse",3]]]],[10,"rollback","","",32,[[["storagechannelrollbackrequest",3]],[["result",6],["storagechannelrollbackresponse",3]]]],[11,"new","","",33,[[],["storageservicedispatcher",3]]],[11,"read","","",31,[[["storagechannelreadrequest",3]],[["storagechannelreadresponse",3],["result",6]]]],[11,"write","","",31,[[["storagechannelwriterequest",3]],[["storagechannelwriteresponse",3],["result",6]]]],[11,"delete","","",31,[[["storagechanneldeleterequest",3]],[["result",6],["storagechanneldeleteresponse",3]]]],[11,"begin","","",31,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelbeginresponse",3]]]],[11,"commit","","",31,[[["storagechannelbeginrequest",3]],[["result",6],["storagechannelcommitresponse",3]]]],[11,"rollback","","",31,[[["storagechannelrollbackrequest",3]],[["result",6],["storagechannelrollbackresponse",3]]]],[0,"roughtime","oak::proto::oak","",null,null],[3,"RoughTimeRequest","oak::proto::oak::roughtime","",null,null],[3,"RoughTimeResponse","","",null,null],[12,"rough_time_usec","","Time is UTC and is given as microseconds since the UNIXâ€¦",34,null],[3,"RoughtimeServiceDispatcher","","",null,null],[3,"RoughtimeServiceClient","","",null,null],[12,"0","","",35,null],[8,"RoughtimeService","","",null,null],[10,"get_rough_time","","",36,[[["roughtimerequest",3]],[["roughtimeresponse",3],["result",6]]]],[11,"new","","",37,[[],["roughtimeservicedispatcher",3]]],[11,"get_rough_time","","",35,[[["roughtimerequest",3]],[["roughtimeresponse",3],["result",6]]]],[8,"Node","oak","Trait implemented by all Oak Nodes.",null,null],[10,"handle_command","","",38,[[],[["oakerror",4],["result",4]]]],[11,"from_raw","","When using the Oak SDK, this method should not need to beâ€¦",39,[[],["handle",3]]],[11,"is_valid","","Check this handle is valid.",39,[[]]],[11,"invalid","","Returns an intentionally invalid handle.",39,[[],["handle",3]]],[14,"entrypoint","","Register a new Node entrypoint.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","oak::grpc","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","oak::grpc::client","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","oak::io","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","oak::rand","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","oak::roughtime","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","oak::storage","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","oak::proto::oak::storage","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"handle_command","","Handle incoming gRPC events for an [`ServerNode`].",33,[[["invocation",3]],[["result",4],["oakerror",4]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","oak::proto::oak::roughtime","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"handle_command","","Handle incoming gRPC events for an [`ServerNode`].",37,[[["invocation",3]],[["result",4],["oakerror",4]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"default","oak","",1,[[],["channelreadstatus",4]]],[11,"default","oak::grpc","",9,[[],["grpcresponse",3]]],[11,"default","","",7,[[],["code",4]]],[11,"default","oak","",2,[[],["oakstatus",4]]],[11,"default","oak::grpc","",6,[[],["status",3]]],[11,"default","","",8,[[],["grpcrequest",3]]],[11,"default","oak","",0,[[],["label",3]]],[11,"encode_raw","oak::grpc","",9,[[]]],[11,"merge_field","","",9,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"encode_raw","oak","",0,[[]]],[11,"merge_field","","",0,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","oak::grpc","",8,[[]]],[11,"merge_field","","",8,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","","",6,[[]]],[11,"merge_field","","",6,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"fmt","oak","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::grpc","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak::grpc","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",8,[[],["grpcrequest",3]]],[11,"clone","oak","",0,[[],["label",3]]],[11,"clone","oak::grpc","",6,[[],["status",3]]],[11,"clone","oak","",1,[[],["channelreadstatus",4]]],[11,"clone","oak::grpc","",9,[[],["grpcresponse",3]]],[11,"clone","","",7,[[],["code",4]]],[11,"clone","oak","",2,[[],["oakstatus",4]]],[11,"cmp","","",2,[[["oakstatus",4]],["ordering",4]]],[11,"cmp","","",1,[[["channelreadstatus",4]],["ordering",4]]],[11,"cmp","oak::grpc","",7,[[["code",4]],["ordering",4]]],[11,"hash","oak","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","oak::grpc","",7,[[]]],[11,"hash","oak","",0,[[]]],[11,"eq","","",2,[[["oakstatus",4]]]],[11,"eq","","",1,[[["channelreadstatus",4]]]],[11,"eq","oak::grpc","",6,[[["status",3]]]],[11,"ne","","",6,[[["status",3]]]],[11,"eq","","",8,[[["grpcrequest",3]]]],[11,"ne","","",8,[[["grpcrequest",3]]]],[11,"eq","","",9,[[["grpcresponse",3]]]],[11,"ne","","",9,[[["grpcresponse",3]]]],[11,"eq","oak","",0,[[["label",3]]]],[11,"ne","","",0,[[["label",3]]]],[11,"eq","oak::grpc","",7,[[["code",4]]]],[11,"partial_cmp","","",7,[[["code",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","oak","",1,[[["channelreadstatus",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["oakstatus",4]],[["option",4],["ordering",4]]]],[11,"invoke","oak::proto::oak::storage","",33,[[["channelresponsewriter",3]]]],[11,"invoke","oak::proto::oak::roughtime","",37,[[["channelresponsewriter",3]]]],[11,"decode","oak::grpc","",10,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",10,[[],[["oakerror",4],["result",4],["message",3]]]],[11,"from","oak","",5,[[["decodeerror",3]]]],[11,"from","","",5,[[["encodeerror",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"from","","",5,[[["oakstatus",4]]]],[11,"clone","oak::grpc","",11,[[],["writemode",4]]],[11,"clone","oak::io","",15,[[],["receiver",3]]],[11,"clone","","",16,[[],["sender",3]]],[11,"clone","oak::rand","",40,[[],["oakrng",3]]],[11,"clone","oak::proto::oak::storage","",22,[[],["storageitem",3]]],[11,"clone","","",23,[[],["storagechannelreadrequest",3]]],[11,"clone","","",24,[[],["storagechannelreadresponse",3]]],[11,"clone","","",25,[[],["storagechannelwriterequest",3]]],[11,"clone","","",41,[[],["storagechannelwriteresponse",3]]],[11,"clone","","",26,[[],["storagechanneldeleterequest",3]]],[11,"clone","","",42,[[],["storagechanneldeleteresponse",3]]],[11,"clone","","",27,[[],["storagechannelbeginrequest",3]]],[11,"clone","","",28,[[],["storagechannelbeginresponse",3]]],[11,"clone","","",29,[[],["storagechannelcommitrequest",3]]],[11,"clone","","",43,[[],["storagechannelcommitresponse",3]]],[11,"clone","","",30,[[],["storagechannelrollbackrequest",3]]],[11,"clone","","",44,[[],["storagechannelrollbackresponse",3]]],[11,"clone","oak::proto::oak::roughtime","",45,[[],["roughtimerequest",3]]],[11,"clone","","",34,[[],["roughtimeresponse",3]]],[11,"clone","oak","",39,[[],["handle",3]]],[11,"clone","","",3,[[],["readhandle",3]]],[11,"clone","","",4,[[],["writehandle",3]]],[11,"default","oak::proto::oak::storage","",22,[[],["storageitem",3]]],[11,"default","","",23,[[],["storagechannelreadrequest",3]]],[11,"default","","",24,[[],["storagechannelreadresponse",3]]],[11,"default","","",25,[[],["storagechannelwriterequest",3]]],[11,"default","","",41,[[],["storagechannelwriteresponse",3]]],[11,"default","","",26,[[],["storagechanneldeleterequest",3]]],[11,"default","","",42,[[],["storagechanneldeleteresponse",3]]],[11,"default","","",27,[[],["storagechannelbeginrequest",3]]],[11,"default","","",28,[[],["storagechannelbeginresponse",3]]],[11,"default","","",29,[[],["storagechannelcommitrequest",3]]],[11,"default","","",43,[[],["storagechannelcommitresponse",3]]],[11,"default","","",30,[[],["storagechannelrollbackrequest",3]]],[11,"default","","",44,[[],["storagechannelrollbackresponse",3]]],[11,"default","oak::proto::oak::roughtime","",45,[[],["roughtimerequest",3]]],[11,"default","","",34,[[],["roughtimeresponse",3]]],[11,"eq","oak::grpc","",11,[[["writemode",4]]]],[11,"eq","oak::io","",15,[[["receiver",3]]]],[11,"ne","","",15,[[["receiver",3]]]],[11,"eq","","",16,[[["sender",3]]]],[11,"ne","","",16,[[["sender",3]]]],[11,"eq","","",17,[[["message",3]]]],[11,"ne","","",17,[[["message",3]]]],[11,"eq","oak::proto::oak::storage","",22,[[["storageitem",3]]]],[11,"ne","","",22,[[["storageitem",3]]]],[11,"eq","","",23,[[["storagechannelreadrequest",3]]]],[11,"ne","","",23,[[["storagechannelreadrequest",3]]]],[11,"eq","","",24,[[["storagechannelreadresponse",3]]]],[11,"ne","","",24,[[["storagechannelreadresponse",3]]]],[11,"eq","","",25,[[["storagechannelwriterequest",3]]]],[11,"ne","","",25,[[["storagechannelwriterequest",3]]]],[11,"eq","","",41,[[["storagechannelwriteresponse",3]]]],[11,"eq","","",26,[[["storagechanneldeleterequest",3]]]],[11,"ne","","",26,[[["storagechanneldeleterequest",3]]]],[11,"eq","","",42,[[["storagechanneldeleteresponse",3]]]],[11,"eq","","",27,[[["storagechannelbeginrequest",3]]]],[11,"ne","","",27,[[["storagechannelbeginrequest",3]]]],[11,"eq","","",28,[[["storagechannelbeginresponse",3]]]],[11,"ne","","",28,[[["storagechannelbeginresponse",3]]]],[11,"eq","","",29,[[["storagechannelcommitrequest",3]]]],[11,"ne","","",29,[[["storagechannelcommitrequest",3]]]],[11,"eq","","",43,[[["storagechannelcommitresponse",3]]]],[11,"eq","","",30,[[["storagechannelrollbackrequest",3]]]],[11,"ne","","",30,[[["storagechannelrollbackrequest",3]]]],[11,"eq","","",44,[[["storagechannelrollbackresponse",3]]]],[11,"eq","oak::proto::oak::roughtime","",45,[[["roughtimerequest",3]]]],[11,"eq","","",34,[[["roughtimeresponse",3]]]],[11,"ne","","",34,[[["roughtimeresponse",3]]]],[11,"eq","oak","",39,[[["handle",3]]]],[11,"ne","","",39,[[["handle",3]]]],[11,"eq","","",3,[[["readhandle",3]]]],[11,"ne","","",3,[[["readhandle",3]]]],[11,"eq","","",4,[[["writehandle",3]]]],[11,"ne","","",4,[[["writehandle",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","oak::grpc","",11,[[["formatter",3]],["result",6]]],[11,"fmt","oak::io","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","oak::rand","",40,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::storage","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","oak::proto::oak::roughtime","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","oak","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",39,[[]]],[11,"serialize","oak::io","",15,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","oak","",39,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"deserialize","oak::io","",15,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","oak","",39,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"encode_raw","oak::proto::oak::storage","",22,[[]]],[11,"merge_field","","",22,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",22,[[]]],[11,"clear","","",22,[[]]],[11,"encode_raw","","",23,[[]]],[11,"merge_field","","",23,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",23,[[]]],[11,"clear","","",23,[[]]],[11,"encode_raw","","",24,[[]]],[11,"merge_field","","",24,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",24,[[]]],[11,"clear","","",24,[[]]],[11,"encode_raw","","",25,[[]]],[11,"merge_field","","",25,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",25,[[]]],[11,"clear","","",25,[[]]],[11,"encode_raw","","",41,[[]]],[11,"merge_field","","",41,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",41,[[]]],[11,"clear","","",41,[[]]],[11,"encode_raw","","",26,[[]]],[11,"merge_field","","",26,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",26,[[]]],[11,"clear","","",26,[[]]],[11,"encode_raw","","",42,[[]]],[11,"merge_field","","",42,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",42,[[]]],[11,"clear","","",42,[[]]],[11,"encode_raw","","",27,[[]]],[11,"merge_field","","",27,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",27,[[]]],[11,"clear","","",27,[[]]],[11,"encode_raw","","",28,[[]]],[11,"merge_field","","",28,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",28,[[]]],[11,"clear","","",28,[[]]],[11,"encode_raw","","",29,[[]]],[11,"merge_field","","",29,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",29,[[]]],[11,"clear","","",29,[[]]],[11,"encode_raw","","",43,[[]]],[11,"merge_field","","",43,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",43,[[]]],[11,"clear","","",43,[[]]],[11,"encode_raw","","",30,[[]]],[11,"merge_field","","",30,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",30,[[]]],[11,"clear","","",30,[[]]],[11,"encode_raw","","",44,[[]]],[11,"merge_field","","",44,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",44,[[]]],[11,"clear","","",44,[[]]],[11,"encode_raw","oak::proto::oak::roughtime","",45,[[]]],[11,"merge_field","","",45,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",45,[[]]],[11,"clear","","",45,[[]]],[11,"encode_raw","","",34,[[]]],[11,"merge_field","","",34,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",34,[[]]],[11,"clear","","",34,[[]]],[11,"next_u32","oak::rand","",40,[[]]],[11,"next_u64","","",40,[[]]],[11,"fill_bytes","","",40,[[]]],[11,"try_fill_bytes","","",40,[[],[["result",4],["error",3]]]],[11,"serialize","oak","Convert a label to bytes.",0,[[],["vec",3]]],[11,"deserialize","","Build the label from bytes.",0,[[],[["label",3],["option",4]]]],[11,"public_trusted","","Return the least privileged label.",0,[[],["label",3]]],[11,"flows_to","","Compare two labels according to the lattice structure: L_0â€¦",0,[[["label",3]]]],[11,"is_valid","","Returns `true` if `value` is a variant ofâ€¦",1,[[]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` ifâ€¦",1,[[],[["option",4],["channelreadstatus",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `OakStatus`.",2,[[]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`â€¦",2,[[],[["option",4],["oakstatus",4]]]],[11,"is_valid","oak::grpc","Returns `true` if `value` is a variant of `Code`.",7,[[]]],[11,"from_i32","","Converts an `i32` to a `Code`, or `None` if `value` is notâ€¦",7,[[],[["code",4],["option",4]]]]],"p":[[3,"Label"],[4,"ChannelReadStatus"],[4,"OakStatus"],[3,"ReadHandle"],[3,"WriteHandle"],[4,"OakError"],[3,"Status"],[4,"Code"],[3,"GrpcRequest"],[3,"GrpcResponse"],[3,"Invocation"],[4,"WriteMode"],[3,"Client"],[8,"ServerNode"],[3,"ChannelResponseWriter"],[3,"Receiver"],[3,"Sender"],[3,"Message"],[8,"Decodable"],[8,"Encodable"],[3,"Roughtime"],[3,"Storage"],[3,"StorageItem"],[3,"StorageChannelReadRequest"],[3,"StorageChannelReadResponse"],[3,"StorageChannelWriteRequest"],[3,"StorageChannelDeleteRequest"],[3,"StorageChannelBeginRequest"],[3,"StorageChannelBeginResponse"],[3,"StorageChannelCommitRequest"],[3,"StorageChannelRollbackRequest"],[3,"StorageServiceClient"],[8,"StorageService"],[3,"StorageServiceDispatcher"],[3,"RoughTimeResponse"],[3,"RoughtimeServiceClient"],[8,"RoughtimeService"],[3,"RoughtimeServiceDispatcher"],[8,"Node"],[3,"Handle"],[3,"OakRng"],[3,"StorageChannelWriteResponse"],[3,"StorageChannelDeleteResponse"],[3,"StorageChannelCommitResponse"],[3,"StorageChannelRollbackResponse"],[3,"RoughTimeRequest"]]};
searchIndex["oak_abi"] = {"doc":"Type, constant and Wasm host function definitions for theâ€¦","i":[[5,"wait_on_channels","oak_abi","Wait for channels to be ready for reading.",null,null],[5,"channel_read","","Read a message from a channel.",null,null],[5,"channel_write","","Write a message to a channel.",null,null],[5,"channel_create","","Create a new unidirectional Channel.",null,null],[5,"channel_close","","Close a channel.",null,null],[5,"node_create","","Create a new Node instance running code identified byâ€¦",null,null],[5,"random_get","","Fill a buffer with random data.",null,null],[0,"grpc","","",null,null],[5,"encap_request","oak_abi::grpc","Encapsulate a protocol buffer message in a GrpcRequestâ€¦",null,[[],[["option",4],["grpcrequest",3]]]],[0,"label","oak_abi","Labels represent the kinds of information that is allowedâ€¦",null,null],[5,"authorization_bearer_token_hmac_tag","oak_abi::label","Creates a [`Tag`] having as principal the providedâ€¦",null,[[],["tag",3]]],[0,"proto","oak_abi","",null,null],[0,"google","oak_abi::proto","",null,null],[0,"rpc","oak_abi::proto::google","",null,null],[3,"Status","oak_abi::proto::google::rpc","The `Status` type defines a logical error model that isâ€¦",null,null],[12,"code","","The status code, which should be an enum value ofâ€¦",0,null],[12,"message","","A developer-facing error message, which should be inâ€¦",0,null],[12,"details","","A list of messages that carry the error details. There isâ€¦",0,null],[4,"Code","","The canonical error codes for Google APIs.",null,null],[13,"Ok","","Not an error; returned on success",1,null],[13,"Cancelled","","The operation was cancelled, typically by the caller.",1,null],[13,"Unknown","","Unknown error. For example, this error may be returnedâ€¦",1,null],[13,"InvalidArgument","","The client specified an invalid argument. Note that thisâ€¦",1,null],[13,"DeadlineExceeded","","The deadline expired before the operation could complete.â€¦",1,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was notâ€¦",1,null],[13,"AlreadyExists","","The entity that a client attempted to create (e.g., fileâ€¦",1,null],[13,"PermissionDenied","","The caller does not have permission to execute theâ€¦",1,null],[13,"Unauthenticated","","The request does not have valid authentication credentialsâ€¦",1,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-userâ€¦",1,null],[13,"FailedPrecondition","","The operation was rejected because the system is not in aâ€¦",1,null],[13,"Aborted","","The operation was aborted, typically due to a concurrencyâ€¦",1,null],[13,"OutOfRange","","The operation was attempted past the valid range. E.g.,â€¦",1,null],[13,"Unimplemented","","The operation is not implemented or is notâ€¦",1,null],[13,"Internal","","Internal errors. This means that some invariants expectedâ€¦",1,null],[13,"Unavailable","","The service is currently unavailable. This is most likelyâ€¦",1,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",1,null],[11,"is_valid","","Returns `true` if `value` is a variant of `Code`.",1,[[]]],[11,"from_i32","","Converts an `i32` to a `Code`, or `None` if `value` is notâ€¦",1,[[],[["code",4],["option",4]]]],[0,"oak","oak_abi::proto","",null,null],[4,"OakStatus","oak_abi::proto::oak","Status values exchanged as i32 values across the Node Wasmâ€¦",null,null],[13,"Unspecified","","",2,null],[13,"Ok","","Success.",2,null],[13,"ErrBadHandle","","Invalid handle provided.",2,null],[13,"ErrInvalidArgs","","Arguments invalid.",2,null],[13,"ErrChannelClosed","","Channel has been closed.",2,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an outputâ€¦",2,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (anâ€¦",2,null],[13,"ErrOutOfRange","","Argument out of valid range.",2,null],[13,"ErrInternal","","Internal error.",2,null],[13,"ErrTerminated","","Node terminated.",2,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",2,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to performâ€¦",2,null],[4,"ChannelReadStatus","","Single byte values used to indicate the read status of aâ€¦",null,null],[13,"NotReady","","No pending messages available on channel.",3,null],[13,"ReadReady","","Pending message available on channel.",3,null],[13,"InvalidChannel","","Channel handle does not identify the read half of aâ€¦",3,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",3,null],[13,"PermissionDenied","","A node trying to access the channel does not have theâ€¦",3,null],[0,"label","","",null,null],[3,"Label","oak_abi::proto::oak::label","Label represents information flowing through a Node orâ€¦",null,null],[12,"secrecy_tags","","",4,null],[12,"integrity_tags","","",4,null],[3,"Tag","","Tag represents a category of secrecy or integrity that isâ€¦",null,null],[12,"tag","","",5,null],[3,"GrpcTag","","Policies related to gRPC communication, referring to theâ€¦",null,null],[12,"authorization_bearer_token_hmac","","In order for a client to be authorized to fulfill a tagâ€¦",6,null],[3,"WebAssemblyModuleTag","","Policies related to modules, referring to the nativeâ€¦",null,null],[12,"module_attestation","","The attestation for a single WebAssembly module, a SHA256â€¦",7,null],[3,"TlsEndpointTag","","Policies related to HTTPS communication.",null,null],[12,"certificate_subject_alternative_name","","The Subject Alternative Name (SAN) of a certificate that aâ€¦",8,null],[0,"tag","","",null,null],[4,"Tag","oak_abi::proto::oak::label::tag","",null,null],[13,"GrpcTag","","",9,null],[13,"WebAssemblyModuleTag","","",9,null],[13,"TlsEndpointTag","","",9,null],[11,"encode","","",9,[[]]],[11,"merge","","",9,[[["wiretype",4],["decodecontext",3],["option",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",9,[[]]],[0,"encap","oak_abi::proto::oak","",null,null],[3,"GrpcRequest","oak_abi::proto::oak::encap","",null,null],[12,"method_name","","",10,null],[12,"req_msg","","The body of the request. Usually a serialized protobufâ€¦",10,null],[12,"last","","",10,null],[3,"GrpcResponse","","",null,null],[12,"rsp_msg","","The body of the response. Usually a serialized protobufâ€¦",11,null],[12,"status","","",11,null],[12,"last","","The last field indicates that this is definitely the finalâ€¦",11,null],[0,"log","oak_abi::proto::oak","",null,null],[3,"LogMessage","oak_abi::proto::oak::log","This message defines the data that is passed as a logâ€¦",null,null],[12,"file","","The source file containing the message.",12,null],[12,"line","","The line containing the message.",12,null],[12,"level","","The verbosity level of the message.",12,null],[12,"message","","The message body.",12,null],[4,"Level","","Logging levels as defined inâ€¦",null,null],[13,"UnknownLevel","","",13,null],[13,"Error","","",13,null],[13,"Warn","","",13,null],[13,"Info","","",13,null],[13,"Debugging","","",13,null],[13,"Trace","","",13,null],[11,"level","","Returns the enum value of `level`, or the default if theâ€¦",12,[[],["level",4]]],[11,"set_level","","Sets `level` to the provided enum value.",12,[[["level",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `Level`.",13,[[]]],[11,"from_i32","","Converts an `i32` to a `Level`, or `None` if `value` isâ€¦",13,[[],[["option",4],["level",4]]]],[11,"is_valid","oak_abi::proto::oak","Returns `true` if `value` is a variant of `OakStatus`.",2,[[]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`â€¦",2,[[],[["oakstatus",4],["option",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant ofâ€¦",3,[[]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` ifâ€¦",3,[[],[["channelreadstatus",4],["option",4]]]],[6,"Handle","oak_abi","Handle used to identify read or write channel halves.",null,null],[6,"NodeMainC","","Expected type for a Node entrypoint that is exposed as aâ€¦",null,null],[6,"NodeMain","","Expected Rust type for a Node entrypoint.",null,null],[17,"SPACE_BYTES_PER_HANDLE","","Number of bytes needed per-handle for channel readinessâ€¦",null,null],[17,"INVALID_HANDLE","","Invalid handle value.",null,null],[11,"from","oak_abi::proto::google::rpc","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::label","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::label::tag","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::encap","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::log","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"clone","oak_abi::proto::google::rpc","",0,[[],["status",3]]],[11,"clone","","",1,[[],["code",4]]],[11,"clone","oak_abi::proto::oak","",2,[[],["oakstatus",4]]],[11,"clone","","",3,[[],["channelreadstatus",4]]],[11,"clone","oak_abi::proto::oak::label","",4,[[],["label",3]]],[11,"clone","","",5,[[],["tag",3]]],[11,"clone","oak_abi::proto::oak::label::tag","",9,[[],["tag",4]]],[11,"clone","oak_abi::proto::oak::label","",6,[[],["grpctag",3]]],[11,"clone","","",7,[[],["webassemblymoduletag",3]]],[11,"clone","","",8,[[],["tlsendpointtag",3]]],[11,"clone","oak_abi::proto::oak::encap","",10,[[],["grpcrequest",3]]],[11,"clone","","",11,[[],["grpcresponse",3]]],[11,"clone","oak_abi::proto::oak::log","",12,[[],["logmessage",3]]],[11,"clone","","",13,[[],["level",4]]],[11,"default","oak_abi::proto::google::rpc","",0,[[],["status",3]]],[11,"default","","",1,[[],["code",4]]],[11,"default","oak_abi::proto::oak","",2,[[],["oakstatus",4]]],[11,"default","","",3,[[],["channelreadstatus",4]]],[11,"default","oak_abi::proto::oak::label","",4,[[],["label",3]]],[11,"default","","",5,[[],["tag",3]]],[11,"default","","",6,[[],["grpctag",3]]],[11,"default","","",7,[[],["webassemblymoduletag",3]]],[11,"default","","",8,[[],["tlsendpointtag",3]]],[11,"default","oak_abi::proto::oak::encap","",10,[[],["grpcrequest",3]]],[11,"default","","",11,[[],["grpcresponse",3]]],[11,"default","oak_abi::proto::oak::log","",12,[[],["logmessage",3]]],[11,"default","","",13,[[],["level",4]]],[11,"cmp","oak_abi::proto::google::rpc","",1,[[["code",4]],["ordering",4]]],[11,"cmp","oak_abi::proto::oak","",2,[[["oakstatus",4]],["ordering",4]]],[11,"cmp","","",3,[[["channelreadstatus",4]],["ordering",4]]],[11,"cmp","oak_abi::proto::oak::log","",13,[[["level",4]],["ordering",4]]],[11,"eq","oak_abi::proto::google::rpc","",0,[[["status",3]]]],[11,"ne","","",0,[[["status",3]]]],[11,"eq","","",1,[[["code",4]]]],[11,"eq","oak_abi::proto::oak","",2,[[["oakstatus",4]]]],[11,"eq","","",3,[[["channelreadstatus",4]]]],[11,"eq","oak_abi::proto::oak::label","",4,[[["label",3]]]],[11,"ne","","",4,[[["label",3]]]],[11,"eq","","",5,[[["tag",3]]]],[11,"ne","","",5,[[["tag",3]]]],[11,"eq","oak_abi::proto::oak::label::tag","",9,[[["tag",4]]]],[11,"ne","","",9,[[["tag",4]]]],[11,"eq","oak_abi::proto::oak::label","",6,[[["grpctag",3]]]],[11,"ne","","",6,[[["grpctag",3]]]],[11,"eq","","",7,[[["webassemblymoduletag",3]]]],[11,"ne","","",7,[[["webassemblymoduletag",3]]]],[11,"eq","","",8,[[["tlsendpointtag",3]]]],[11,"ne","","",8,[[["tlsendpointtag",3]]]],[11,"eq","oak_abi::proto::oak::encap","",10,[[["grpcrequest",3]]]],[11,"ne","","",10,[[["grpcrequest",3]]]],[11,"eq","","",11,[[["grpcresponse",3]]]],[11,"ne","","",11,[[["grpcresponse",3]]]],[11,"eq","oak_abi::proto::oak::log","",12,[[["logmessage",3]]]],[11,"ne","","",12,[[["logmessage",3]]]],[11,"eq","","",13,[[["level",4]]]],[11,"partial_cmp","oak_abi::proto::google::rpc","",1,[[["code",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","oak_abi::proto::oak","",2,[[["oakstatus",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["channelreadstatus",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","oak_abi::proto::oak::log","",13,[[["level",4]],[["option",4],["ordering",4]]]],[11,"fmt","oak_abi::proto::google::rpc","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::label","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::label::tag","",9,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::label","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::encap","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::log","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","oak_abi::proto::google::rpc","",1,[[]]],[11,"hash","oak_abi::proto::oak","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","oak_abi::proto::oak::label","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","oak_abi::proto::oak::label::tag","",9,[[]]],[11,"hash","oak_abi::proto::oak::label","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","oak_abi::proto::oak::log","",13,[[]]],[11,"encode_raw","oak_abi::proto::google::rpc","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","oak_abi::proto::oak::label","",4,[[]]],[11,"merge_field","","",4,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",4,[[]]],[11,"clear","","",4,[[]]],[11,"encode_raw","","",5,[[]]],[11,"merge_field","","",5,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",5,[[]]],[11,"clear","","",5,[[]]],[11,"encode_raw","","",6,[[]]],[11,"merge_field","","",6,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"encode_raw","","",7,[[]]],[11,"merge_field","","",7,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",7,[[]]],[11,"clear","","",7,[[]]],[11,"encode_raw","","",8,[[]]],[11,"merge_field","","",8,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","oak_abi::proto::oak::encap","",10,[[]]],[11,"merge_field","","",10,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",10,[[]]],[11,"clear","","",10,[[]]],[11,"encode_raw","","",11,[[]]],[11,"merge_field","","",11,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",11,[[]]],[11,"clear","","",11,[[]]],[11,"encode_raw","oak_abi::proto::oak::log","",12,[[]]],[11,"merge_field","","",12,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",12,[[]]],[11,"clear","","",12,[[]]],[11,"serialize","oak_abi::proto::oak::label","Convert a label to bytes.",4,[[],["vec",3]]],[11,"deserialize","","Build the label from bytes.",4,[[],["option",4]]],[11,"public_trusted","","Return the least privileged label.",4,[[]]],[11,"flows_to","","Compare two labels according to the lattice structure: L_0â€¦",4,[[]]]],"p":[[3,"Status"],[4,"Code"],[4,"OakStatus"],[4,"ChannelReadStatus"],[3,"Label"],[3,"Tag"],[3,"GrpcTag"],[3,"WebAssemblyModuleTag"],[3,"TlsEndpointTag"],[4,"Tag"],[3,"GrpcRequest"],[3,"GrpcResponse"],[3,"LogMessage"],[4,"Level"]]};
searchIndex["oak_glue"] = {"doc":"","i":[[5,"glue_init","oak_glue","",null,[[]]],[5,"glue_start","","Start the Rust runtime, with the ApplicationConfigurationâ€¦",null,[[["option",4]]]],[5,"glue_stop","","Stop the Rust runtime.",null,[[]]],[5,"glue_wait_on_channels","","See [`oak_abi::wait_on_channels`].",null,[[]]],[5,"glue_channel_read","","See [`oak_abi::channel_read`].",null,[[]]],[5,"glue_channel_write","","See [`oak_abi::channel_write`].",null,[[]]],[5,"glue_channel_create","","See [`oak_abi::channel_create`].",null,[[]]],[5,"glue_channel_close","","See [`oak_abi::channel_close`].",null,[[]]]],"p":[]};
searchIndex["oak_loader"] = {"doc":"An utility binary to run Oak Runtime.","i":[[3,"Opt","oak_loader","",null,null],[12,"application","","",0,null],[12,"grpc_tls_private_key","","",0,null],[12,"grpc_tls_certificate","","",0,null],[12,"root_tls_certificate","","",0,null],[12,"metrics_port","","",0,null],[12,"no_metrics","","",0,null],[12,"introspect_port","","",0,null],[12,"no_introspect","","",0,null],[12,"config_files","","",0,null],[3,"ConfigEntry","","A specification of a configuration entry as human readableâ€¦",null,null],[12,"key","","",1,null],[12,"filename","","",1,null],[5,"read_file","","",null,[[],[["result",6],["vec",3]]]],[5,"parse_config_files","","",null,[[],[["result",6],["hashmap",3]]]],[5,"parse_config_map","","",null,[[],[["configmap",3],["result",6]]]],[5,"main","","",null,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"equivalent","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"clone","","",0,[[],["opt",3]]],[11,"clone","","",1,[[],["configentry",3]]],[11,"eq","","",1,[[["configentry",3]]]],[11,"ne","","",1,[[["configentry",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"from_str","","",1,[[],["result",4]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"Opt"],[3,"ConfigEntry"]]};
searchIndex["oak_runtime"] = {"doc":"Oak Runtime implementation","i":[[3,"RuntimeConfiguration","oak_runtime","Configuration options that govern the behaviour of theâ€¦",null,null],[12,"metrics_port","","Port to run a metrics server on, if provided.",0,null],[12,"introspect_port","","Port to run an introspection server on, if provided.",0,null],[0,"proto","","",null,null],[0,"oak","oak_runtime::proto","",null,null],[0,"application","oak_runtime::proto::oak","",null,null],[3,"ApplicationConfiguration","oak_runtime::proto::oak::application","An ApplicationConfiguration represents a unit ofâ€¦",null,null],[12,"node_configs","","Collection of available Node configurations, indexed byâ€¦",1,null],[12,"initial_node_config_name","","Indication of what configuration the initial Node shouldâ€¦",1,null],[12,"initial_entrypoint_name","","The name of an exported Web Assembly function in theâ€¦",1,null],[12,"grpc_port","","Port number used by the gRPC pseudo-node; must be >= 1024.",1,null],[3,"NodeConfiguration","","NodeConfiguration indicates the configuration of a createdâ€¦",null,null],[12,"name","","",2,null],[12,"config_type","","",2,null],[3,"WebAssemblyConfiguration","","WebAssemblyConfiguration describes the configuration of aâ€¦",null,null],[12,"module_bytes","","The compiled code of the Oak Node, in WebAssembly binaryâ€¦",3,null],[3,"LogConfiguration","","LogConfiguration describes the configuration of a loggingâ€¦",null,null],[3,"StorageProxyConfiguration","","StorageProxyConfiguration describes the configuration of aâ€¦",null,null],[12,"address","","The address of the external storage provider.",4,null],[3,"GrpcServerConfiguration","","GrpcServerConfiguration describes the configuration of aâ€¦",null,null],[12,"address","","The endpoint address for the gRPC server to listen on.â€¦",5,null],[12,"grpc_tls_private_key","","Loaded private RSA key file used by a gRPC serverâ€¦",5,null],[12,"grpc_tls_certificate","","Loaded PEM encoded X.509 TLS certificate file used by aâ€¦",5,null],[3,"GrpcClientConfiguration","","GrpcClientConfiguration describes the configuration of aâ€¦",null,null],[12,"uri","","The URI component of a gRPC server endpoint. Must containâ€¦",6,null],[12,"root_tls_certificate","","Loaded PEM encoded X.509 TLS root certificate file used toâ€¦",6,null],[12,"address","","The endpoint address of the external gRPC service.â€¦",6,null],[3,"RoughtimeClientConfiguration","","RoughtimeClientConfiguration describes the configurationâ€¦",null,null],[12,"servers","","The collection of Roughtime servers to query. A defaultâ€¦",7,null],[12,"min_overlapping_intervals","","Connection parameters; default values will be used if anyâ€¦",7,null],[12,"timeout_seconds","","",7,null],[12,"server_retries","","",7,null],[12,"max_radius_microseconds","","",7,null],[3,"RoughtimeServer","","Information to identify a particular Roughtime server.â€¦",null,null],[12,"name","","",8,null],[12,"host","","",8,null],[12,"port","","",8,null],[12,"public_key_base64","","",8,null],[3,"ConfigMap","","A serialized list of key-value pairs that are specified asâ€¦",null,null],[12,"items","","",9,null],[0,"node_configuration","","",null,null],[4,"ConfigType","oak_runtime::proto::oak::application::node_configuration","",null,null],[13,"WasmConfig","","",10,null],[13,"LogConfig","","",10,null],[13,"StorageConfig","","",10,null],[13,"GrpcServerConfig","","",10,null],[13,"GrpcClientConfig","","",10,null],[13,"RoughtimeClientConfig","","",10,null],[11,"encode","","",10,[[]]],[11,"merge","","",10,[[["option",4],["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",10,[[]]],[0,"config","oak_runtime","",null,null],[5,"application_configuration","oak_runtime::config","Create an application configuration.",null,[[["string",3],["hashmap",3],["buildhasher",8],["vec",3]],["applicationconfiguration",3]]],[5,"from_protobuf","","Load a `runtime::Configuration` from a protobufâ€¦",null,[[["applicationconfiguration",3]],[["oakstatus",4],["configuration",3],["result",4]]]],[5,"configure_and_run","","Configure a [`RuntimeProxy`] from the given protobufâ€¦",null,[[["runtimeconfiguration",3],["applicationconfiguration",3]],[["result",4],["oakstatus",4]]]],[0,"io","oak_runtime","",null,null],[3,"Receiver","oak_runtime::io","Wrapper for a [`Handle`] that is responsible for readingâ€¦",null,null],[3,"Sender","","Wrapper for a [`Handle`] that is responsible for sendingâ€¦",null,null],[8,"Decodable","","A trait for objects that can be decoded from bytes +â€¦",null,null],[10,"decode","","",11,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[8,"Encodable","","A trait for objects that can be encoded as bytes + handles.",null,null],[10,"encode","","",12,[[],[["result",4],["oakstatus",4],["nodemessage",3]]]],[11,"new","","",13,[[["handle",6]]]],[11,"receive","","Waits, reads and decodes a message from theâ€¦",13,[[["runtimeproxy",3]],[["oakstatus",4],["result",4]]]],[11,"new","","",14,[[["handle",6]]]],[11,"send","","Encodes and sends a message to the [`Sender::handle`].",14,[[["runtimeproxy",3]],[["result",4],["oakstatus",4]]]],[0,"message","oak_runtime","",null,null],[3,"Message","oak_runtime::message","Encapsulates a message consisting of opaque data bytes andâ€¦",null,null],[12,"data","","",15,null],[12,"channels","","",15,null],[3,"NodeMessage","","Encapsulates a message relative to a specific Node,â€¦",null,null],[12,"data","","",16,null],[12,"handles","","",16,null],[0,"metrics","oak_runtime","",null,null],[3,"GrpcServerMetrics","oak_runtime::metrics","Mostly copied fromâ€¦",null,null],[12,"grpc_server_started_total","","Total number of RPCs started on the server.",17,null],[12,"grpc_server_handled_total","","Total number of RPCs completed on the server, regardlessâ€¦",17,null],[12,"grpc_server_handled_latency_seconds","","Histogram of response latency of RPCs handled by theâ€¦",17,null],[12,"grpc_response_size_bytes","","Histogram of response sizes of RPCs handled by the server.",17,null],[3,"RuntimeMetrics","","Struct that collects all metrics for monitoring the Oakâ€¦",null,null],[12,"runtime_nodes_total","","",18,null],[12,"runtime_health_check","","",18,null],[3,"Metrics","","Struct that collects all the metrics in one place",null,null],[12,"runtime_metrics","","",19,null],[12,"grpc_server_metrics","","",19,null],[0,"server","","",null,null],[5,"start_metrics_server","oak_runtime::metrics::server","",null,[[["runtime",3],["arc",3],["receiver",3]]]],[11,"new","oak_runtime::metrics","",19,[[]]],[11,"gather","","",19,[[],[["metricfamily",3],["vec",3]]]],[0,"node","oak_runtime","",null,null],[4,"Configuration","oak_runtime::node","A [`Configuration`] corresponds to a [`NodeConfiguration`]â€¦",null,null],[13,"LogNode","","",20,null],[13,"GrpcServerNode","","The configuration for a gRPC server pseudo-Node thatâ€¦",20,null],[12,"address","oak_runtime::node::Configuration","",21,null],[12,"tls_identity","","",21,null],[13,"GrpcClientNode","oak_runtime::node","The configuration for a gRPC server pseudo-Node thatâ€¦",20,null],[12,"uri","oak_runtime::node::Configuration","",22,null],[12,"root_tls_certificate","","",22,null],[12,"address","","",22,null],[13,"WasmNode","oak_runtime::node","The configuration for a Wasm Node.",20,null],[12,"module","oak_runtime::node::Configuration","",23,null],[13,"External","oak_runtime::node","The configuration for an externally provided pseudo-Node.",20,null],[4,"ConfigurationError","","An enumeration for errors occuring when buildingâ€¦",null,null],[13,"AddressParsingError","","",24,null],[13,"IncorrectPort","","",24,null],[13,"NoHostElement","","",24,null],[13,"CertificateParsingError","","",24,null],[13,"WasmiModuleInializationError","","",24,null],[5,"load_wasm","","Loads a Wasm module into a Node configuration, returningâ€¦",null,[[],[["configurationerror",4],["result",4],["configuration",4]]]],[5,"check_port","","Checks if port is greater than 1023.",null,[[["socketaddr",4]],[["configurationerror",4],["result",4]]]],[5,"check_uri","","Checks if URI contains the \"Host\" element.",null,[[["uri",3]],[["configurationerror",4],["result",4]]]],[5,"load_certificate","","Check the correctness of a PEM encoded TLS certificate.",null,[[],[["configurationerror",4],["certificate",3],["result",4]]]],[0,"external","","",null,null],[3,"PseudoNode","oak_runtime::node::external","",null,null],[5,"register_factory","","Register a pseudo-Node creation factory function. Thisâ€¦",null,[[["nodefactory",6]]]],[6,"NodeFactory","","Function pointer type for callbacks from Rust code intoâ€¦",null,null],[11,"new","","",25,[[]]],[8,"Node","oak_runtime::node","Trait encapsulating execution of a Node or pseudo-Node.",null,null],[10,"run","","Execute the Node, using the provided `Runtime` referenceâ€¦",26,[[["receiver",3],["handle",6],["runtimeproxy",3],["box",3]]]],[11,"create_node","","Creates a new Node instance corresponding to theâ€¦",20,[[["string",3]],[["option",4],["box",3]]]],[11,"node_subname","","Generate a description of a Node or pseudo-Node that isâ€¦",20,[[],["string",3]]],[0,"runtime","oak_runtime","",null,null],[3,"ChannelHalf","oak_runtime::runtime","A reference to one half of a [`Channel`].",null,null],[12,"direction","","",27,null],[3,"NodePrivilege","","The downgrading (declassification + endorsement) privilegeâ€¦",null,null],[3,"NodeId","","A unique internal identifier for a Node or pseudo-Nodeâ€¦",null,null],[12,"0","","",28,null],[3,"Configuration","","Internal version of the [`ApplicationConfiguration`]â€¦",null,null],[12,"nodes","","",29,null],[12,"entry_module","","",29,null],[12,"entrypoint","","",29,null],[3,"AuxServer","","Information for managing an associated server.",null,null],[12,"name","","",30,null],[12,"join_handle","","",30,null],[12,"notify_sender","","",30,null],[3,"Runtime","","Runtime structure for configuring and running a set of Oakâ€¦",null,null],[12,"metrics_data","","",31,null],[3,"RuntimeProxy","","A proxy object that binds together a reference to theâ€¦",null,null],[12,"node_id","","",32,null],[4,"ChannelHalfDirection","","The direction of a [`ChannelHalf`].",null,null],[13,"Read","","",33,null],[13,"Write","","",33,null],[4,"NodeReadStatus","","Helper types to indicate whether a channel read operationâ€¦",null,null],[13,"Success","","",34,null],[13,"NeedsCapacity","","",34,null],[4,"ReadStatus","","",null,null],[13,"Success","","",35,null],[13,"NeedsCapacity","","",35,null],[11,"new","","Constructor for [`ChannelHalf`] keeps the underlyingâ€¦",27,[[["arc",3],["channel",3],["channelhalfdirection",4]]]],[11,"get_messages","","Get read-only access to the channel's messages. Forâ€¦",27,[[],[["rwlockreadguard",3],["vecdeque",3]]]],[11,"wake_waiters","","Wake any threads waiting on the underlying channel.",27,[[]]],[8,"DotIdentifier","","Trait that gives an identifier for a data structure thatâ€¦",null,null],[10,"dot_id","","",36,[[],["string",3]]],[8,"HtmlPath","","Trait that returns the path at which the debugâ€¦",null,null],[10,"html_path","","",37,[[],["string",3]]],[11,"gather_metrics","","",31,[[],[["metricfamily",3],["vec",3]]]],[11,"create_runtime","","Creates a [`Runtime`] instance with a single initial Nodeâ€¦",32,[[["configuration",3]],["runtimeproxy",3]]],[11,"start_runtime","","Configures and runs the protobuf specified Applicationâ€¦",32,[[["runtimeconfiguration",3]],[["handle",6],["oakstatus",4],["result",4]]]],[11,"graph_runtime","","Generate a Graphviz dot graph that shows the current shapeâ€¦",32,[[],["string",3]]],[11,"stop_runtime","","Signal termination to a [`Runtime`] and wait for its Nodeâ€¦",32,[[]]],[11,"html","","Generate an HTML page that describes the internal state ofâ€¦",31,[[],["string",3]]],[11,"html_for_node","","Generate an HTML page that describes the internal state ofâ€¦",31,[[],[["option",4],["string",3]]]],[11,"html_for_handle","","Generate an HTML page that describes the channelâ€¦",31,[[["handle",6]],[["option",4],["string",3]]]],[11,"is_terminating","","Return whether the [`Runtime`] is terminating.",31,[[]]],[11,"new_for_node","","Create a RuntimeProxy instance that acts as a proxy forâ€¦",32,[[["nodeid",3]]]],[11,"is_terminating","","See [`Runtime::is_terminating`].",32,[[]]],[11,"node_create","","See [`Runtime::node_create`].",32,[[["handle",6],["label",3]],[["result",4],["oakstatus",4]]]],[11,"channel_create","","See [`Runtime::channel_create`].",32,[[["label",3]],[["oakstatus",4],["result",4]]]],[11,"channel_close","","See [`Runtime::channel_close`].",32,[[["handle",6]],[["result",4],["oakstatus",4]]]],[11,"wait_on_channels","","See [`Runtime::wait_on_channels`].",32,[[],[["result",4],["oakstatus",4],["vec",3]]]],[11,"channel_write","","See [`Runtime::channel_write`].",32,[[["nodemessage",3],["handle",6]],[["result",4],["oakstatus",4]]]],[11,"channel_read","","See [`Runtime::channel_read`].",32,[[["handle",6]],[["oakstatus",4],["option",4],["result",4]]]],[11,"channel_try_read_message","","See [`Runtime::channel_try_read_message`].",32,[[["handle",6]],[["result",4],["option",4],["oakstatus",4]]]],[11,"metrics_data","","",32,[[],["metrics",3]]],[11,"from","oak_runtime","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"decode","oak_runtime::proto::oak::application","",1,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",1,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"decode","","",2,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",2,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"decode","","",3,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",3,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"decode","","",38,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",38,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_request","","",38,[[],["request",3]]],[11,"vzip","","",38,[[]]],[11,"decode","","",4,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",4,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"vzip","","",4,[[]]],[11,"decode","","",5,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",5,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_request","","",5,[[],["request",3]]],[11,"vzip","","",5,[[]]],[11,"decode","","",6,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",6,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"decode","","",7,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",7,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_request","","",7,[[],["request",3]]],[11,"vzip","","",7,[[]]],[11,"decode","","",8,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",8,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_request","","",8,[[],["request",3]]],[11,"vzip","","",8,[[]]],[11,"decode","","",9,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",9,[[],[["nodemessage",3],["result",4],["oakstatus",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_request","","",9,[[],["request",3]]],[11,"vzip","","",9,[[]]],[11,"from","oak_runtime::proto::oak::application::node_configuration","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_request","","",10,[[],["request",3]]],[11,"vzip","","",10,[[]]],[11,"from","oak_runtime::io","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_request","","",13,[[],["request",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_request","","",14,[[],["request",3]]],[11,"vzip","","",14,[[]]],[11,"from","oak_runtime::message","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_request","","",15,[[],["request",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_request","","",16,[[],["request",3]]],[11,"vzip","","",16,[[]]],[11,"from","oak_runtime::metrics","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_request","","",17,[[],["request",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_request","","",18,[[],["request",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_request","","",19,[[],["request",3]]],[11,"vzip","","",19,[[]]],[11,"from","oak_runtime::node","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_request","","",20,[[],["request",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_request","","",24,[[],["request",3]]],[11,"vzip","","",24,[[]]],[11,"from","oak_runtime::node::external","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_request","","",25,[[],["request",3]]],[11,"vzip","","",25,[[]]],[11,"from","oak_runtime::runtime","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_request","","",27,[[],["request",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_request","","",39,[[],["request",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_request","","",28,[[],["request",3]]],[11,"equivalent","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_request","","",29,[[],["request",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_request","","",30,[[],["request",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_request","","",31,[[],["request",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_request","","",32,[[],["request",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_request","","",33,[[],["request",3]]],[11,"equivalent","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_request","","",34,[[],["request",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_request","","",35,[[],["request",3]]],[11,"vzip","","",35,[[]]],[11,"run","oak_runtime::node::external","",25,[[["receiver",3],["handle",6],["runtimeproxy",3],["box",3]]]],[11,"dot_id","oak_runtime::runtime","",27,[[],["string",3]]],[11,"dot_id","","",28,[[],["string",3]]],[11,"html_path","","",28,[[],["string",3]]],[11,"drop","","",27,[[]]],[11,"drop","","Dropping an auxiliary server involves notifying it that itâ€¦",30,[[]]],[11,"drop","","",31,[[]]],[11,"from","oak_runtime::node","",24,[[["addrparseerror",3]]]],[11,"clone","oak_runtime::proto::oak::application","",1,[[],["applicationconfiguration",3]]],[11,"clone","","",2,[[],["nodeconfiguration",3]]],[11,"clone","oak_runtime::proto::oak::application::node_configuration","",10,[[],["configtype",4]]],[11,"clone","oak_runtime::proto::oak::application","",3,[[],["webassemblyconfiguration",3]]],[11,"clone","","",38,[[],["logconfiguration",3]]],[11,"clone","","",4,[[],["storageproxyconfiguration",3]]],[11,"clone","","",5,[[],["grpcserverconfiguration",3]]],[11,"clone","","",6,[[],["grpcclientconfiguration",3]]],[11,"clone","","",7,[[],["roughtimeclientconfiguration",3]]],[11,"clone","","",8,[[],["roughtimeserver",3]]],[11,"clone","","",9,[[],["configmap",3]]],[11,"clone","oak_runtime::metrics","",17,[[],["grpcservermetrics",3]]],[11,"clone","","",18,[[],["runtimemetrics",3]]],[11,"clone","","",19,[[],["metrics",3]]],[11,"clone","oak_runtime::runtime","",27,[[]]],[11,"clone","","",33,[[],["channelhalfdirection",4]]],[11,"clone","","",39,[[],["nodeprivilege",3]]],[11,"clone","","",28,[[],["nodeid",3]]],[11,"clone","","",32,[[],["runtimeproxy",3]]],[11,"default","oak_runtime::proto::oak::application","",1,[[],["applicationconfiguration",3]]],[11,"default","","",2,[[],["nodeconfiguration",3]]],[11,"default","","",3,[[],["webassemblyconfiguration",3]]],[11,"default","","",38,[[],["logconfiguration",3]]],[11,"default","","",4,[[],["storageproxyconfiguration",3]]],[11,"default","","",5,[[],["grpcserverconfiguration",3]]],[11,"default","","",6,[[],["grpcclientconfiguration",3]]],[11,"default","","",7,[[],["roughtimeclientconfiguration",3]]],[11,"default","","",8,[[],["roughtimeserver",3]]],[11,"default","","",9,[[],["configmap",3]]],[11,"default","oak_runtime::metrics","",19,[[]]],[11,"default","oak_runtime::runtime","",39,[[],["nodeprivilege",3]]],[11,"default","oak_runtime","",0,[[]]],[11,"cmp","oak_runtime::runtime","",28,[[["nodeid",3]],["ordering",4]]],[11,"eq","oak_runtime::proto::oak::application","",1,[[["applicationconfiguration",3]]]],[11,"ne","","",1,[[["applicationconfiguration",3]]]],[11,"eq","","",2,[[["nodeconfiguration",3]]]],[11,"ne","","",2,[[["nodeconfiguration",3]]]],[11,"eq","oak_runtime::proto::oak::application::node_configuration","",10,[[["configtype",4]]]],[11,"ne","","",10,[[["configtype",4]]]],[11,"eq","oak_runtime::proto::oak::application","",3,[[["webassemblyconfiguration",3]]]],[11,"ne","","",3,[[["webassemblyconfiguration",3]]]],[11,"eq","","",38,[[["logconfiguration",3]]]],[11,"eq","","",4,[[["storageproxyconfiguration",3]]]],[11,"ne","","",4,[[["storageproxyconfiguration",3]]]],[11,"eq","","",5,[[["grpcserverconfiguration",3]]]],[11,"ne","","",5,[[["grpcserverconfiguration",3]]]],[11,"eq","","",6,[[["grpcclientconfiguration",3]]]],[11,"ne","","",6,[[["grpcclientconfiguration",3]]]],[11,"eq","","",7,[[["roughtimeclientconfiguration",3]]]],[11,"ne","","",7,[[["roughtimeclientconfiguration",3]]]],[11,"eq","","",8,[[["roughtimeserver",3]]]],[11,"ne","","",8,[[["roughtimeserver",3]]]],[11,"eq","","",9,[[["configmap",3]]]],[11,"ne","","",9,[[["configmap",3]]]],[11,"eq","oak_runtime::runtime","",33,[[["channelhalfdirection",4]]]],[11,"eq","","",28,[[["nodeid",3]]]],[11,"ne","","",28,[[["nodeid",3]]]],[11,"partial_cmp","","",28,[[["nodeid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",28,[[["nodeid",3]]]],[11,"le","","",28,[[["nodeid",3]]]],[11,"gt","","",28,[[["nodeid",3]]]],[11,"ge","","",28,[[["nodeid",3]]]],[11,"fmt","oak_runtime::proto::oak::application","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::proto::oak::application::node_configuration","",10,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::proto::oak::application","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::message","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::node","",24,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::runtime","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime","",0,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::node","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","oak_runtime::runtime","",33,[[]]],[11,"hash","","",28,[[]]],[11,"encode_raw","oak_runtime::proto::oak::application","",1,[[]]],[11,"merge_field","","",1,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"encode_raw","","",2,[[]]],[11,"merge_field","","",2,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"encode_raw","","",3,[[]]],[11,"merge_field","","",3,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",3,[[]]],[11,"clear","","",3,[[]]],[11,"encode_raw","","",38,[[]]],[11,"merge_field","","",38,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",38,[[]]],[11,"clear","","",38,[[]]],[11,"encode_raw","","",4,[[]]],[11,"merge_field","","",4,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",4,[[]]],[11,"clear","","",4,[[]]],[11,"encode_raw","","",5,[[]]],[11,"merge_field","","",5,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",5,[[]]],[11,"clear","","",5,[[]]],[11,"encode_raw","","",6,[[]]],[11,"merge_field","","",6,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"encode_raw","","",7,[[]]],[11,"merge_field","","",7,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",7,[[]]],[11,"clear","","",7,[[]]],[11,"encode_raw","","",8,[[]]],[11,"merge_field","","",8,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","","",9,[[]]],[11,"merge_field","","",9,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]]],"p":[[3,"RuntimeConfiguration"],[3,"ApplicationConfiguration"],[3,"NodeConfiguration"],[3,"WebAssemblyConfiguration"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[4,"ConfigType"],[8,"Decodable"],[8,"Encodable"],[3,"Receiver"],[3,"Sender"],[3,"Message"],[3,"NodeMessage"],[3,"GrpcServerMetrics"],[3,"RuntimeMetrics"],[3,"Metrics"],[4,"Configuration"],[13,"GrpcServerNode"],[13,"GrpcClientNode"],[13,"WasmNode"],[4,"ConfigurationError"],[3,"PseudoNode"],[8,"Node"],[3,"ChannelHalf"],[3,"NodeId"],[3,"Configuration"],[3,"AuxServer"],[3,"Runtime"],[3,"RuntimeProxy"],[4,"ChannelHalfDirection"],[4,"NodeReadStatus"],[4,"ReadStatus"],[8,"DotIdentifier"],[8,"HtmlPath"],[3,"LogConfiguration"],[3,"NodePrivilege"]]};
searchIndex["oak_tests"] = {"doc":"Test utilities to help with unit testing of Oak SDK code.","i":[[5,"compile_rust_wasm","oak_tests","Uses cargo to compile a Rust manifest to Wasm bytes.",null,[[],[["vec",3],["result",6]]]],[5,"run_single_module_default","","Convenience helper to build and run a single-Nodeâ€¦",null,[[],[["oakstatus",4],["result",4]]]],[5,"run_single_module","","Convenience helper to build and run a single-Nodeâ€¦",null,[[],[["oakstatus",4],["result",4]]]],[5,"grpc_request","","",null,[[["runtimeproxy",3],["handle",6]],["result",6]]]],"p":[]};
searchIndex["oak_utils"] = {"doc":"","i":[[5,"compile_protos_to","oak_utils","",null,[[]]],[5,"compile_protos","","",null,[[]]]],"p":[]};
searchIndex["private_set_intersection"] = {"doc":"Private Set Intersection example for Project Oak.","i":[[5,"oak_main","private_set_intersection","",null,[[]]]],"p":[]};
searchIndex["runner"] = {"doc":"A utility binary to run tests and orchestrate examples andâ€¦","i":[[5,"main","runner","",null,[[],[["box",3],["result",4]]]],[5,"build_examples","","",null,[[["buildexamples",3]],["step",4]]],[5,"build_wasm_module","","",null,[[],["step",4]]],[5,"is_mac_os","","",null,[[]]],[5,"bazel_build_flags","","",null,[[],[["vec",3],["string",3]]]],[5,"as_ref","","",null,[[],["vec",3]]],[5,"bazel_build","","",null,[[],[["runnable",8],["box",3]]]],[5,"build_server","","",null,[[["buildserver",3]],["step",4]]],[5,"run_tests","","",null,[[],["step",4]]],[5,"examples","","Returns all the files under the examples directory.",null,[[]]],[5,"is_ignored_path","","Return whether to ignore the specified path. This is usedâ€¦",null,[[["pathbuf",3]]]],[5,"is_ignored_entry","","",null,[[["direntry",3]]]],[5,"source_files","","Return an iterator of all the first-party and non-ignoredâ€¦",null,[[]]],[5,"workspace_manifest_files","","Return an iterator of all known Cargo Manifest files thatâ€¦",null,[[]]],[5,"is_bazel_file","","Return whether the provided path refers to a Bazel fileâ€¦",null,[[["pathbuf",3]]]],[5,"is_markdown_file","","Return whether the provided path refers to a markdown fileâ€¦",null,[[["pathbuf",3]]]],[5,"is_cargo_toml_file","","Return whether the provided path refers to a `Cargo.toml`â€¦",null,[[["pathbuf",3]]]],[5,"is_cargo_workspace_file","","Return whether the provided path refers to aâ€¦",null,[[["pathbuf",3]]]],[5,"run_buildifier","","",null,[[],["step",4]]],[5,"run_prettier","","",null,[[],["step",4]]],[5,"run_embedmd","","",null,[[],["step",4]]],[5,"run_cargo_fmt","","",null,[[],["step",4]]],[5,"run_cargo_test","","",null,[[],["step",4]]],[5,"run_cargo_doc_test","","",null,[[],["step",4]]],[5,"run_cargo_clippy","","",null,[[],["step",4]]],[5,"run_bazel_build","","",null,[[],["step",4]]],[5,"run_bazel_test","","",null,[[],["step",4]]],[5,"to_string","","",null,[[["pathbuf",3]],["string",3]]],[0,"internal","","",null,null],[3,"Opt","runner::internal","",null,null],[12,"dry_run","","",0,null],[12,"commands","","",0,null],[12,"logs","","",0,null],[12,"cmd","","",0,null],[3,"BuildExamples","","",null,null],[12,"docker","","",1,null],[12,"debug","","",1,null],[12,"variant","","",1,null],[3,"BuildServer","","",null,null],[12,"variant","","",2,null],[3,"Context","","Encapsulates all the local state relative to a step, andâ€¦",null,null],[12,"opt","","",3,null],[12,"prefix","","",3,null],[3,"SingleStatusResult","","",null,null],[12,"value","","",4,null],[12,"command","","",4,null],[12,"logs","","",4,null],[3,"Cmd","","A single command that implements the `Runnable` trait.",null,null],[12,"executable","","",5,null],[12,"args","","",5,null],[4,"Command","","",null,null],[13,"BuildExamples","","",6,null],[13,"BuildServer","","",6,null],[13,"RunTests","","",6,null],[4,"StatusResultValue","","The outcome of an individual step of execution.",null,null],[13,"Ok","","",7,null],[13,"Error","","",7,null],[13,"Skipped","","",7,null],[4,"Step","","An execution step, which may be a single (dynamicallyâ€¦",null,null],[13,"Single","","",8,null],[12,"name","runner::internal::Step","",9,null],[12,"runnable","","",9,null],[13,"Multiple","runner::internal","",8,null],[12,"name","runner::internal::Step","",10,null],[12,"steps","","",10,null],[5,"values_to_string","runner::internal","",null,[[],["string",3]]],[5,"run_step","","Run the provided step, printing out information about theâ€¦",null,[[["step",4],["context",3]],[["hashset",3],["statusresultvalue",4]]]],[5,"cmd","","Convenience constructor for a boxed `Cmd`.",null,[[],[["runnable",8],["box",3]]]],[8,"Runnable","","A runnable task which produces a single result.",null,null],[10,"run","","",11,[[["opt",3]],["singlestatusresult",3]]],[11,"root","","",3,[[["opt",3]]]],[11,"child","","",3,[[]]],[11,"new","","",5,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"run","","Run the provided command, printing a status message withâ€¦",5,[[["opt",3]],["singlestatusresult",3]]],[11,"clone","","",0,[[],["opt",3]]],[11,"clone","","",6,[[],["command",4]]],[11,"clone","","",1,[[],["buildexamples",3]]],[11,"clone","","",2,[[],["buildserver",3]]],[11,"clone","","",7,[[],["statusresultvalue",4]]],[11,"eq","","",7,[[["statusresultvalue",4]]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"clap","","",6,[[],["app",3]]],[11,"from_clap","","",6,[[["argmatches",3]]]],[11,"clap","","",1,[[],["app",3]]],[11,"from_clap","","",1,[[["argmatches",3]]]],[11,"clap","","",2,[[],["app",3]]],[11,"from_clap","","",2,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]],[11,"augment_clap","","",6,[[["app",3]],["app",3]]],[11,"from_subcommand","","",6,[[],["option",4]]],[11,"is_subcommand","","",6,[[]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"is_subcommand","","",1,[[]]],[11,"augment_clap","","",2,[[["app",3]],["app",3]]],[11,"is_subcommand","","",2,[[]]]],"p":[[3,"Opt"],[3,"BuildExamples"],[3,"BuildServer"],[3,"Context"],[3,"SingleStatusResult"],[3,"Cmd"],[4,"Command"],[4,"StatusResultValue"],[4,"Step"],[13,"Single"],[13,"Multiple"],[8,"Runnable"]]};
searchIndex["running_average"] = {"doc":"Running average example for Project Oak.","i":[[5,"oak_main","running_average","",null,[[]]]],"p":[]};
searchIndex["rustfmt"] = {"doc":"","i":[[5,"oak_main","rustfmt","",null,[[]]]],"p":[]};
searchIndex["split_grpc_client"] = {"doc":"","i":[[5,"main","split_grpc_client","",null,[[],[["box",3],["result",4]]]],[0,"proto","","",null,null],[3,"HelloRequest","split_grpc_client::proto","",null,null],[12,"greeting","","",0,null],[3,"HelloResponse","","",null,null],[12,"reply","","",1,null],[0,"hello_world_client","","Generated client implementations.",null,null],[3,"HelloWorldClient","split_grpc_client::proto::hello_world_client","As seen in https://grpc.io/docs/guides/concepts/.",null,null],[12,"inner","","",2,null],[11,"connect","","Attempt to create a new client by connecting to a givenâ€¦",2,[[]]],[11,"new","","",2,[[]]],[11,"with_interceptor","","",2,[[]]],[11,"say_hello","","",2,[[]]],[11,"lots_of_replies","","",2,[[]]],[11,"lots_of_greetings","","",2,[[]]],[11,"bidi_hello","","",2,[[]]],[11,"from","split_grpc_client::proto","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","split_grpc_client::proto::hello_world_client","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"clone","split_grpc_client::proto","",0,[[],["hellorequest",3]]],[11,"clone","","",1,[[],["helloresponse",3]]],[11,"clone","split_grpc_client::proto::hello_world_client","",2,[[]]],[11,"default","split_grpc_client::proto","",0,[[],["hellorequest",3]]],[11,"default","","",1,[[],["helloresponse",3]]],[11,"eq","","",0,[[["hellorequest",3]]]],[11,"ne","","",0,[[["hellorequest",3]]]],[11,"eq","","",1,[[["helloresponse",3]]]],[11,"ne","","",1,[[["helloresponse",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","split_grpc_client::proto::hello_world_client","",2,[[["formatter",3]],["result",6]]],[11,"encode_raw","split_grpc_client::proto","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","","",1,[[]]],[11,"merge_field","","",1,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",1,[[]]],[11,"clear","","",1,[[]]]],"p":[[3,"HelloRequest"],[3,"HelloResponse"],[3,"HelloWorldClient"]]};
searchIndex["split_grpc_proxy"] = {"doc":"","i":[[5,"main","split_grpc_proxy","",null,[[],["result",6]]],[5,"proxy","","",null,[[["tcplistener",3]]]],[5,"handle_connection","","",null,[[["tcpstream",3]]]]],"p":[]};
searchIndex["split_grpc_server"] = {"doc":"","i":[[3,"HelloWorldHandler","split_grpc_server","",null,null],[5,"main","","",null,[[],[["box",3],["result",4]]]],[0,"proto","","",null,null],[3,"HelloRequest","split_grpc_server::proto","",null,null],[12,"greeting","","",0,null],[3,"HelloResponse","","",null,null],[12,"reply","","",1,null],[0,"hello_world_server","","Generated server implementations.",null,null],[3,"_Inner","split_grpc_server::proto::hello_world_server","",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[8,"HelloWorld","","Generated trait containing gRPC methods that should beâ€¦",null,null],[10,"say_hello","","",3,[[["request",3],["hellorequest",3]],[["pin",3],["box",3]]]],[16,"LotsOfRepliesStream","","Server streaming response type for the LotsOfReplies method.",3,null],[10,"lots_of_replies","","",3,[[["request",3],["hellorequest",3]],[["pin",3],["box",3]]]],[10,"lots_of_greetings","","",3,[[["streaming",3],["request",3]],[["pin",3],["box",3]]]],[16,"BidiHelloStream","","Server streaming response type for the BidiHello method.",3,null],[10,"bidi_hello","","",3,[[["streaming",3],["request",3]],[["box",3],["pin",3]]]],[11,"from","split_grpc_server","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"vzip","","",4,[[]]],[11,"from","split_grpc_server::proto","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","split_grpc_server::proto::hello_world_server","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"say_hello","split_grpc_server","",4,[[["hellorequest",3],["request",3]],[["pin",3],["box",3]]]],[11,"lots_of_replies","","",4,[[["hellorequest",3],["request",3]],[["box",3],["pin",3]]]],[11,"lots_of_greetings","","",4,[[["request",3],["streaming",3]],[["pin",3],["box",3]]]],[11,"bidi_hello","","",4,[[["request",3],["streaming",3]],[["pin",3],["box",3]]]],[11,"clone","split_grpc_server::proto","",0,[[],["hellorequest",3]]],[11,"clone","","",1,[[],["helloresponse",3]]],[11,"clone","split_grpc_server::proto::hello_world_server","",2,[[]]],[11,"default","split_grpc_server::proto","",0,[[],["hellorequest",3]]],[11,"default","","",1,[[],["helloresponse",3]]],[11,"default","split_grpc_server","",4,[[],["helloworldhandler",3]]],[11,"eq","split_grpc_server::proto","",0,[[["hellorequest",3]]]],[11,"ne","","",0,[[["hellorequest",3]]]],[11,"eq","","",1,[[["helloresponse",3]]]],[11,"ne","","",1,[[["helloresponse",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","split_grpc_server::proto::hello_world_server","",2,[[["formatter",3]],["result",6]]],[11,"fmt","split_grpc_server","",4,[[["formatter",3]],["result",6]]],[11,"encode_raw","split_grpc_server::proto","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","","",1,[[]]],[11,"merge_field","","",1,[[["wiretype",4],["decodecontext",3]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",1,[[]]],[11,"clear","","",1,[[]]]],"p":[[3,"HelloRequest"],[3,"HelloResponse"],[3,"_Inner"],[8,"HelloWorld"],[3,"HelloWorldHandler"]]};
searchIndex["translator"] = {"doc":"","i":[[5,"oak_main","translator","",null,[[]]]],"p":[]};
searchIndex["translator_common"] = {"doc":"","i":[[5,"translate","translator_common","",null,[[["translatorclient",3]],[["option",4],["string",3]]]],[0,"proto","","",null,null],[3,"TranslateRequest","translator_common::proto","",null,null],[12,"text","","",0,null],[12,"from_lang","","ISO 639-1 codes",0,null],[12,"to_lang","","",0,null],[3,"TranslateResponse","","",null,null],[12,"translated_text","","",1,null],[3,"TranslatorDispatcher","","",null,null],[3,"TranslatorClient","","",null,null],[12,"0","","",2,null],[8,"Translator","","",null,null],[10,"translate","","",3,[[["translaterequest",3]],[["result",6],["translateresponse",3]]]],[11,"new","","",4,[[],["translatordispatcher",3]]],[11,"translate","","",2,[[["translaterequest",3]],[["result",6],["translateresponse",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"decode","","",0,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",0,[[],[["result",4],["message",3],["oakerror",4]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"decode","","",1,[[["message",3]],[["result",4],["oakerror",4]]]],[11,"encode","","",1,[[],[["result",4],["message",3],["oakerror",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"handle_command","","Handle incoming gRPC events for an [`ServerNode`].",4,[[["invocation",3]],[["oakerror",4],["result",4]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["translaterequest",3]]],[11,"clone","","",1,[[],["translateresponse",3]]],[11,"default","","",0,[[],["translaterequest",3]]],[11,"default","","",1,[[],["translateresponse",3]]],[11,"eq","","",0,[[["translaterequest",3]]]],[11,"ne","","",0,[[["translaterequest",3]]]],[11,"eq","","",1,[[["translateresponse",3]]]],[11,"ne","","",1,[[["translateresponse",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"encode_raw","","",0,[[]]],[11,"merge_field","","",0,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","","",1,[[]]],[11,"merge_field","","",1,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"invoke","","",4,[[["channelresponsewriter",3]]]]],"p":[[3,"TranslateRequest"],[3,"TranslateResponse"],[3,"TranslatorClient"],[8,"Translator"],[3,"TranslatorDispatcher"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);