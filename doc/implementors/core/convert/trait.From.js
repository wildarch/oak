(function() {var implementors = {};
implementors["oak"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/prost/0.6.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt; for <a class=\"enum\" href=\"oak/enum.OakError.html\" title=\"enum oak::OakError\">OakError</a>","synthetic":false,"types":["oak::error::OakError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/prost/0.6.1/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt; for <a class=\"enum\" href=\"oak/enum.OakError.html\" title=\"enum oak::OakError\">OakError</a>","synthetic":false,"types":["oak::error::OakError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"oak/enum.OakError.html\" title=\"enum oak::OakError\">OakError</a>","synthetic":false,"types":["oak::error::OakError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"oak/enum.OakStatus.html\" title=\"enum oak::OakStatus\">OakStatus</a>&gt; for <a class=\"enum\" href=\"oak/enum.OakError.html\" title=\"enum oak::OakError\">OakError</a>","synthetic":false,"types":["oak::error::OakError"]}];
implementors["oak_abi"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"oak_abi/proto/google/rpc/enum.Code.html\" title=\"enum oak_abi::proto::google::rpc::Code\">Code</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"oak_abi/proto/oak/enum.OakStatus.html\" title=\"enum oak_abi::proto::oak::OakStatus\">OakStatus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"oak_abi/proto/oak/enum.ChannelReadStatus.html\" title=\"enum oak_abi::proto::oak::ChannelReadStatus\">ChannelReadStatus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"oak_abi/proto/oak/log/enum.Level.html\" title=\"enum oak_abi::proto::oak::log::Level\">Level</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>","synthetic":false,"types":[]}];
implementors["oak_runtime"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/net/parser/struct.AddrParseError.html\" title=\"struct std::net::parser::AddrParseError\">AddrParseError</a>&gt; for <a class=\"enum\" href=\"oak_runtime/node/enum.ConfigurationError.html\" title=\"enum oak_runtime::node::ConfigurationError\">ConfigurationError</a>","synthetic":false,"types":["oak_runtime::node::ConfigurationError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()