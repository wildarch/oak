(function() {var implementors = {};
implementors["oak_services"] = [{"text":"impl Freeze for Status","synthetic":true,"types":[]},{"text":"impl Freeze for Code","synthetic":true,"types":[]},{"text":"impl Freeze for KeyTemplate","synthetic":true,"types":[]},{"text":"impl Freeze for KeysetGenerateRequest","synthetic":true,"types":[]},{"text":"impl Freeze for KeysetResponse","synthetic":true,"types":[]},{"text":"impl Freeze for KeysetPublicRequest","synthetic":true,"types":[]},{"text":"impl Freeze for KeysetUnbindRequest","synthetic":true,"types":[]},{"text":"impl Freeze for KeysetBindRequest","synthetic":true,"types":[]},{"text":"impl Freeze for KeysetBindResponse","synthetic":true,"types":[]},{"text":"impl Freeze for KmsProxyRequest","synthetic":true,"types":[]},{"text":"impl Freeze for AeadEncryptRequest","synthetic":true,"types":[]},{"text":"impl Freeze for AeadEncryptResponse","synthetic":true,"types":[]},{"text":"impl Freeze for AeadDecryptRequest","synthetic":true,"types":[]},{"text":"impl Freeze for AeadDecryptResponse","synthetic":true,"types":[]},{"text":"impl Freeze for DeterministicAeadEncryptRequest","synthetic":true,"types":[]},{"text":"impl Freeze for DeterministicAeadEncryptResponse","synthetic":true,"types":[]},{"text":"impl Freeze for DeterministicAeadDecryptRequest","synthetic":true,"types":[]},{"text":"impl Freeze for DeterministicAeadDecryptResponse","synthetic":true,"types":[]},{"text":"impl Freeze for VerifyMacRequest","synthetic":true,"types":[]},{"text":"impl Freeze for VerifyMacResponse","synthetic":true,"types":[]},{"text":"impl Freeze for ComputeMacRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ComputeMacResponse","synthetic":true,"types":[]},{"text":"impl Freeze for ComputePrfRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ComputePrfResponse","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureSignRequest","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureSignResponse","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureVerifyRequest","synthetic":true,"types":[]},{"text":"impl Freeze for SignatureVerifyResponse","synthetic":true,"types":[]},{"text":"impl Freeze for OutputPrefixType","synthetic":true,"types":[]},{"text":"impl Freeze for KeysetFormat","synthetic":true,"types":[]},{"text":"impl Freeze for TemplateId","synthetic":true,"types":[]},{"text":"impl Freeze for GrpcRequest","synthetic":true,"types":[]},{"text":"impl Freeze for GrpcResponse","synthetic":true,"types":[]},{"text":"impl Freeze for HttpRequest","synthetic":true,"types":[]},{"text":"impl Freeze for HttpResponse","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderMap","synthetic":true,"types":[]},{"text":"impl Freeze for HeaderValue","synthetic":true,"types":[]},{"text":"impl Freeze for LogMessage","synthetic":true,"types":[]},{"text":"impl Freeze for LogInit","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for GetRoughtimeRequest","synthetic":true,"types":[]},{"text":"impl Freeze for Roughtime","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()