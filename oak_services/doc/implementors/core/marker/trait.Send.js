(function() {var implementors = {};
implementors["oak_services"] = [{"text":"impl Send for Status","synthetic":true,"types":[]},{"text":"impl Send for Code","synthetic":true,"types":[]},{"text":"impl Send for KeyTemplate","synthetic":true,"types":[]},{"text":"impl Send for KeysetGenerateRequest","synthetic":true,"types":[]},{"text":"impl Send for KeysetResponse","synthetic":true,"types":[]},{"text":"impl Send for KeysetPublicRequest","synthetic":true,"types":[]},{"text":"impl Send for KeysetUnbindRequest","synthetic":true,"types":[]},{"text":"impl Send for KeysetBindRequest","synthetic":true,"types":[]},{"text":"impl Send for KeysetBindResponse","synthetic":true,"types":[]},{"text":"impl Send for KmsProxyRequest","synthetic":true,"types":[]},{"text":"impl Send for AeadEncryptRequest","synthetic":true,"types":[]},{"text":"impl Send for AeadEncryptResponse","synthetic":true,"types":[]},{"text":"impl Send for AeadDecryptRequest","synthetic":true,"types":[]},{"text":"impl Send for AeadDecryptResponse","synthetic":true,"types":[]},{"text":"impl Send for DeterministicAeadEncryptRequest","synthetic":true,"types":[]},{"text":"impl Send for DeterministicAeadEncryptResponse","synthetic":true,"types":[]},{"text":"impl Send for DeterministicAeadDecryptRequest","synthetic":true,"types":[]},{"text":"impl Send for DeterministicAeadDecryptResponse","synthetic":true,"types":[]},{"text":"impl Send for VerifyMacRequest","synthetic":true,"types":[]},{"text":"impl Send for VerifyMacResponse","synthetic":true,"types":[]},{"text":"impl Send for ComputeMacRequest","synthetic":true,"types":[]},{"text":"impl Send for ComputeMacResponse","synthetic":true,"types":[]},{"text":"impl Send for ComputePrfRequest","synthetic":true,"types":[]},{"text":"impl Send for ComputePrfResponse","synthetic":true,"types":[]},{"text":"impl Send for SignatureSignRequest","synthetic":true,"types":[]},{"text":"impl Send for SignatureSignResponse","synthetic":true,"types":[]},{"text":"impl Send for SignatureVerifyRequest","synthetic":true,"types":[]},{"text":"impl Send for SignatureVerifyResponse","synthetic":true,"types":[]},{"text":"impl Send for OutputPrefixType","synthetic":true,"types":[]},{"text":"impl Send for KeysetFormat","synthetic":true,"types":[]},{"text":"impl Send for TemplateId","synthetic":true,"types":[]},{"text":"impl Send for GrpcRequest","synthetic":true,"types":[]},{"text":"impl Send for GrpcResponse","synthetic":true,"types":[]},{"text":"impl Send for HttpRequest","synthetic":true,"types":[]},{"text":"impl Send for HttpResponse","synthetic":true,"types":[]},{"text":"impl Send for HeaderMap","synthetic":true,"types":[]},{"text":"impl Send for HeaderValue","synthetic":true,"types":[]},{"text":"impl Send for LogMessage","synthetic":true,"types":[]},{"text":"impl Send for LogInit","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]},{"text":"impl Send for GetRoughtimeRequest","synthetic":true,"types":[]},{"text":"impl Send for Roughtime","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()