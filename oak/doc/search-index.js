var searchIndex = JSON.parse('{\
"oak_loader":{"doc":"A utility binary to run Oak Runtime.","i":[[3,"Opt","oak_loader","Command line options for the Oak loader.",null,null],[12,"application","","",0,null],[12,"grpc_tls_private_key","","",0,null],[12,"grpc_tls_certificate","","",0,null],[12,"root_tls_certificate","","",0,null],[12,"oidc_client","","",0,null],[12,"metrics_port","","",0,null],[12,"no_metrics","","",0,null],[12,"introspect_port","","",0,null],[12,"no_introspect","","",0,null],[12,"config_files","","",0,null],[3,"ConfigEntry","","A specification of a configuration entry as human readable…",null,null],[12,"key","","",1,null],[12,"filename","","",1,null],[5,"read_file","","Read the contents of a file.",null,[[],[["result",6],["vec",3]]]],[5,"parse_config_map","","Parse a collection of configuration entries and return the…",null,[[],[["configmap",3],["result",6]]]],[5,"send_config_map","","Send configuration map to the initial Oak Node.",null,[[["runtimeproxy",3],["handle",6],["configmap",3]],["result",6]]],[5,"get_default_root_tls_certs","","Gets the default root TLS certificates from the embedded…",null,[[],[["result",6],["string",3]]]],[5,"main","","Main execution point for the Oak loader.",null,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"clone","","",0,[[],["opt",3]]],[11,"clone","","",1,[[],["configentry",3]]],[11,"eq","","",1,[[["configentry",3]]]],[11,"ne","","",1,[[["configentry",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"from_str","","",1,[[],["result",4]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"Opt"],[3,"ConfigEntry"]]},\
"oak_runtime":{"doc":"Oak Runtime implementation","i":[[3,"RuntimeProxy","oak_runtime","A proxy object that binds together a reference to the…",null,null],[12,"node_id","","",0,null],[3,"RuntimeConfiguration","","Configuration options that govern the behaviour of the…",null,null],[12,"metrics_port","","Port to run a metrics server on, if provided.",1,null],[12,"introspect_port","","Port to run an introspection server on, if provided.",1,null],[12,"grpc_config","","gRPC-specific options.",1,null],[12,"app_config","","Application configuration.",1,null],[3,"GrpcConfiguration","","Configuration options related to gRPC pseudo-Nodes.",null,null],[12,"grpc_server_tls_identity","","TLS identity to use for all gRPC Server Nodes.",2,null],[12,"oidc_client_info","","OpenID Connect Authentication client information.",2,null],[12,"grpc_client_root_tls_certificate","","Root TLS certificate to use for all gRPC Client Nodes.",2,null],[0,"auth","","Authentication functionality.",null,null],[0,"oidc_utils","oak_runtime::auth","OpenID Connect utilities for exchanging authorisation…",null,null],[3,"Claims","oak_runtime::auth::oidc_utils","Claims encoded into the identity token. Reference:…",null,null],[3,"ClientInfo","","The OpenID Connect client ID and client secret contained…",null,null],[12,"client_id","","The client ID.",3,null],[12,"client_secret","","The client secret.",3,null],[3,"TokenError","","Represents a token validation error.",null,null],[5,"parse_client_info_json","","Parses the content of the downloaded OpenID Connect client…",null,[[],[["clientinfo",3],["box",3],["result",4]]]],[5,"exchange_code_for_token","","Exchanges an authorisation code for an ID token and…",null,[[]]],[11,"new","","",4,[[],["tokenerror",3]]],[0,"config","oak_runtime","Functionality covering configuration of a Runtime instance.",null,null],[5,"configure_and_run","oak_runtime::config","Configures a [`RuntimeProxy`] from the given…",null,[[["runtimeconfiguration",3]],[["oakstatus",4],["result",4]]]],[5,"load_certificate","","Load a PEM encoded TLS certificate, performing (minimal)…",null,[[],[["certificate",3],["result",4]]]],[0,"io","oak_runtime","Helper types for data structures that can be transmitted…",null,null],[3,"Receiver","oak_runtime::io","Wrapper for a [`Handle`] that is responsible for reading…",null,null],[3,"Sender","","Wrapper for a [`Handle`] that is responsible for sending…",null,null],[8,"Decodable","","A trait for objects that can be decoded from bytes +…",null,null],[10,"decode","","",5,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[8,"Encodable","","A trait for objects that can be encoded as bytes + handles.",null,null],[10,"encode","","",6,[[],[["result",4],["nodemessage",3],["oakstatus",4]]]],[11,"new","","",7,[[["handle",6]]]],[11,"close","","Close the underlying channel handle.",7,[[["runtimeproxy",3]],[["oakstatus",4],["result",4]]]],[11,"receive","","Waits, reads and decodes a message from the…",7,[[["runtimeproxy",3]],[["result",4],["oakstatus",4]]]],[11,"new","","",8,[[["handle",6]]]],[11,"close","","Close the underlying channel handle.",8,[[["runtimeproxy",3]],[["oakstatus",4],["result",4]]]],[11,"send","","Encodes and sends a message to the [`Sender::handle`].",8,[[["runtimeproxy",3]],[["oakstatus",4],["result",4]]]],[0,"message","oak_runtime","Data structures encapsulating messages carried on Oak…",null,null],[3,"Message","oak_runtime::message","Encapsulates a message consisting of opaque data bytes and…",null,null],[12,"data","","",9,null],[12,"channels","","",9,null],[3,"NodeMessage","","Encapsulates a message relative to a specific Node,…",null,null],[12,"data","","",10,null],[12,"handles","","",10,null],[0,"metrics","oak_runtime","Functionality to expose metrics from a running Runtime.",null,null],[3,"GrpcServerMetrics","oak_runtime::metrics","Mostly copied from…",null,null],[12,"grpc_server_started_total","","Total number of RPCs started on the server.",11,null],[12,"grpc_server_handled_total","","Total number of RPCs completed on the server, regardless…",11,null],[12,"grpc_server_handled_latency_seconds","","Histogram of response latency of RPCs handled by the…",11,null],[12,"grpc_response_size_bytes","","Histogram of response sizes of RPCs handled by the server.",11,null],[12,"grpc_server_msg_sent_total","","Total number of stream messages sent by the server.",11,null],[3,"RuntimeMetrics","","Struct that collects all metrics for monitoring the Oak…",null,null],[12,"runtime_nodes_total","","",12,null],[12,"runtime_health_check","","",12,null],[3,"Metrics","","Struct that collects all the metrics in one place",null,null],[12,"runtime_metrics","","",13,null],[12,"grpc_server_metrics","","",13,null],[0,"server","","",null,null],[5,"start_metrics_server","oak_runtime::metrics::server","",null,[[["arc",3],["receiver",3],["runtime",3]]]],[11,"new","oak_runtime::metrics","",13,[[]]],[11,"gather","","",13,[[],[["vec",3],["metricfamily",3]]]],[0,"node","oak_runtime","Functionality for different Node types.",null,null],[4,"ConfigurationError","oak_runtime::node","A enumeration for errors occuring when creating a new…",null,null],[13,"AddressParsingError","","",14,null],[13,"IncorrectPort","","",14,null],[13,"IncorrectURI","","",14,null],[13,"NoHostElement","","",14,null],[13,"CertificateParsingError","","",14,null],[13,"IncorrectWebAssemblyModuleName","","",14,null],[13,"InvalidNodeConfiguration","","",14,null],[13,"WasmiModuleInializationError","","",14,null],[5,"create_node","","Create a new [`Node`] instance based on the provided…",null,[[["applicationconfiguration",3],["grpcconfiguration",3],["nodeconfiguration",3]],[["box",3],["configurationerror",4],["result",4]]]],[0,"grpc","","Functionality for gRPC pseudo-Nodes.",null,null],[0,"client","oak_runtime::node::grpc","gRPC client pseudo-Node functionality.",null,null],[3,"GrpcClientNode","oak_runtime::node::grpc::client","Struct that represents a gRPC client pseudo-Node.",null,null],[11,"new","","Creates a new [`GrpcClientNode`] instance, but does not…",15,[[["grpcclientconfiguration",3],["certificate",3]],[["configurationerror",4],["result",4]]]],[0,"invocation","oak_runtime::node::grpc","Functionality for handling gRPC method invocations.",null,null],[3,"Invocation","oak_runtime::node::grpc::invocation","A gRPC invocation, consisting of exactly two channels: one…",null,null],[11,"close","","",16,[[["runtimeproxy",3]]]],[11,"receive_request","","",16,[[["runtimeproxy",3]],[["grpcrequest",3],["oakstatus",4],["result",4]]]],[11,"send_response","","",16,[[["grpcresponse",3],["runtimeproxy",3]],[["oakstatus",4],["result",4]]]],[11,"send_error","","Send an error response for the invocation.",16,[[["runtimeproxy",3],["code",4]]]],[0,"server","oak_runtime::node::grpc","gRPC server pseudo-Node functionality.",null,null],[3,"GrpcServerNode","oak_runtime::node::grpc::server","Struct that represents a gRPC server pseudo-Node.",null,null],[11,"new","","Creates a new [`GrpcServerNode`] instance, but does not…",17,[[["clientinfo",3],["option",4],["identity",3],["grpcserverconfiguration",3]],[["configurationerror",4],["result",4]]]],[8,"Node","oak_runtime::node","Trait encapsulating execution of a Node or pseudo-Node.",null,null],[10,"run","","Execute the Node, using the provided `Runtime` reference…",18,[[["runtimeproxy",3],["box",3],["handle",6],["receiver",3]]]],[11,"get_privilege","","",18,[[],["nodeprivilege",3]]],[0,"proto","oak_runtime","Auto-generated code derived from protocol buffer…",null,null],[0,"oak","oak_runtime::proto","",null,null],[0,"authentication","oak_runtime::proto::oak","",null,null],[3,"AuthParameters","oak_runtime::proto::oak::authentication","Parameters needed by clients to initiate OpenID Connect…",null,null],[12,"client_id","","",19,null],[12,"auth_endpoint","","TODO(#922): Add support for scope, state and code challenge.",19,null],[3,"IdentityTokenRequest","","Request for exchanging an authorisation code for an…",null,null],[12,"auth_code","","",20,null],[3,"IdentityTokenResponse","","Wrapper for the exchanged identity token.",null,null],[12,"token","","",21,null],[0,"authentication_server","","Generated server implementations.",null,null],[8,"Authentication","oak_runtime::proto::oak::authentication::authentication_server","Generated trait containing gRPC methods that should be…",null,null],[10,"get_auth_parameters","","Gets the parameters needed by a client to make an…",22,[[["request",3]],[["box",3],["pin",3]]]],[10,"get_token_from_code","","Exchanges an authorisation code for an identity token.",22,[[["identitytokenrequest",3],["request",3]],[["box",3],["pin",3]]]],[0,"runtime","oak_runtime","Core Runtime functionality, allowing manipulation of…",null,null],[3,"ChannelHalf","oak_runtime::runtime","A reference to one half of a [`Channel`].",null,null],[12,"direction","","",23,null],[3,"RuntimeProxy","","A proxy object that binds together a reference to the…",null,null],[12,"node_id","","",0,null],[3,"NodePrivilege","","The downgrading (declassification + endorsement) privilege…",null,null],[3,"NodeId","","A unique internal identifier for a Node or pseudo-Node…",null,null],[12,"0","","",24,null],[3,"AuxServer","","Information for managing an associated server.",null,null],[12,"name","","",25,null],[12,"join_handle","","",25,null],[12,"notify_sender","","",25,null],[3,"Runtime","","Runtime structure for configuring and running a set of Oak…",null,null],[12,"metrics_data","","",26,null],[4,"ChannelHalfDirection","","The direction of a [`ChannelHalf`].",null,null],[13,"Read","","",27,null],[13,"Write","","",27,null],[4,"NodeReadStatus","","Helper types to indicate whether a channel read operation…",null,null],[13,"Success","","",28,null],[13,"NeedsCapacity","","",28,null],[4,"ReadStatus","","",null,null],[13,"Success","","",29,null],[13,"NeedsCapacity","","",29,null],[11,"new","","Constructor for [`ChannelHalf`] keeps the underlying…",23,[[["channel",3],["arc",3],["channelhalfdirection",4]]]],[11,"get_messages","","Get read-only access to the channel\'s messages. For…",23,[[],[["vecdeque",3],["rwlockreadguard",3]]]],[11,"wake_waiters","","Wake any threads waiting on the underlying channel.",23,[[]]],[0,"graph","","",null,null],[8,"DotIdentifier","oak_runtime::runtime::graph","Trait that gives an identifier for a data structure that…",null,null],[10,"dot_id","","",30,[[],["string",3]]],[8,"HtmlPath","","Trait that returns the path at which the debug…",null,null],[10,"html_path","","",31,[[],["string",3]]],[8,"DotGraph","","",null,null],[10,"graph","","",32,[[],["string",3]]],[10,"html","","",32,[[],["string",3]]],[10,"html_for_node","","",32,[[],[["option",4],["string",3]]]],[10,"html_for_handle","","",32,[[["handle",6]],[["option",4],["string",3]]]],[11,"create_runtime","oak_runtime","Creates a [`Runtime`] instance with a single initial Node…",0,[[["applicationconfiguration",3],["grpcconfiguration",3]],["runtimeproxy",3]]],[11,"start_runtime","","Configures and runs the protobuf specified…",0,[[["runtimeconfiguration",3]],[["oakstatus",4],["handle",6],["result",4]]]],[11,"graph_runtime","","Generate a Graphviz dot graph that shows the current shape…",0,[[],["string",3]]],[11,"stop_runtime","","Signal termination to a [`Runtime`] and wait for its Node…",0,[[]]],[11,"new_for_node","","Create a RuntimeProxy instance that acts as a proxy for…",0,[[["nodeid",3]]]],[11,"is_terminating","","See [`Runtime::is_terminating`].",0,[[]]],[11,"node_create","","See [`Runtime::node_create`].",0,[[["label",3],["nodeconfiguration",3],["handle",6]],[["oakstatus",4],["result",4]]]],[11,"channel_create","","See [`Runtime::channel_create`].",0,[[["label",3]],[["oakstatus",4],["result",4]]]],[11,"channel_close","","See [`Runtime::channel_close`].",0,[[["handle",6]],[["oakstatus",4],["result",4]]]],[11,"wait_on_channels","","See [`Runtime::wait_on_channels`].",0,[[],[["result",4],["vec",3],["oakstatus",4]]]],[11,"channel_write","","See [`Runtime::channel_write`].",0,[[["handle",6],["nodemessage",3]],[["oakstatus",4],["result",4]]]],[11,"channel_read","","See [`Runtime::channel_read`].",0,[[["handle",6]],[["option",4],["result",4],["oakstatus",4]]]],[11,"channel_try_read_message","","See [`Runtime::channel_try_read_message`].",0,[[["handle",6]],[["option",4],["result",4],["oakstatus",4]]]],[11,"channel_direction","","Return the direction of an ABI handle.",0,[[["handle",6]],[["oakstatus",4],["result",4],["channelhalfdirection",4]]]],[11,"metrics_data","","",0,[[],["metrics",3]]],[11,"new","oak_runtime::runtime","",33,[[["hashset",3],["tag",3]]]],[11,"abi_direction","","Return the direction of an ABI handle.",26,[[["nodeid",3],["handle",6]],[["oakstatus",4],["result",4],["channelhalfdirection",4]]]],[11,"gather_metrics","","",26,[[],[["vec",3],["metricfamily",3]]]],[11,"is_terminating","","Return whether the [`Runtime`] is terminating.",26,[[]]],[0,"time","oak_runtime","Roughtime client implementation to provide a source of…",null,null],[3,"RoughtimeServer","oak_runtime::time","Specifies the details of a Roughtime server.",null,null],[3,"RoughtimeClient","","A client for requesting Roughtime from multiple servers.",null,null],[4,"RoughtimeError","","Possible errors returned by the Roughtime client.",null,null],[13,"Base64Error","","",34,null],[13,"InvalidSignature","","",34,null],[13,"IoError","","",34,null],[13,"MidPointTooSmall","","",34,null],[13,"NotEnoughOverlappingIntervals","","",34,null],[12,"actual","oak_runtime::time::RoughtimeError","",35,null],[12,"expected","","",35,null],[13,"RadiusTooLarge","oak_runtime::time","",34,null],[13,"RoughenoughError","","",34,null],[13,"TimeoutError","","",34,null],[5,"get_default_servers","","Gets the default Roughtime servers in the ecosystem.",null,[[],[["vec",3],["roughtimeserver",3]]]],[6,"MicrosSinceEpoch","","Time is given as microseconds since the UNIX epoch…",null,null],[17,"DEFAULT_MIN_OVERLAPPING_INTERVALS","","",null,null],[17,"DEFAULT_MAX_RADIUS_MICROSECONDS","","",null,null],[17,"DEFAULT_TIMEOUT_SECONDS","","",null,null],[17,"DEFAULT_SERVER_RETRIES","","",null,null],[11,"default","","Creates a new Roughtime client with the default settings.",36,[[]]],[11,"new","","Creates a new Roughtime client.",36,[[["vec",3],["roughtimeserver",3]]]],[11,"get_roughtime","","Gets the Roughtime from multiple servers.",36,[[],[["result",4],["microssinceepoch",6],["roughtimeerror",4]]]],[11,"new","","Creates a new instance.",37,[[]]],[11,"from","oak_runtime","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","oak_runtime::auth::oidc_utils","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_request","","",38,[[],["request",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"vzip","","",4,[[]]],[11,"from","oak_runtime::io","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_request","","",7,[[],["request",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_request","","",8,[[],["request",3]]],[11,"vzip","","",8,[[]]],[11,"from","oak_runtime::message","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_request","","",9,[[],["request",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_request","","",10,[[],["request",3]]],[11,"vzip","","",10,[[]]],[11,"from","oak_runtime::metrics","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_request","","",11,[[],["request",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_request","","",12,[[],["request",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_request","","",13,[[],["request",3]]],[11,"vzip","","",13,[[]]],[11,"from","oak_runtime::node","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_request","","",14,[[],["request",3]]],[11,"vzip","","",14,[[]]],[11,"from","oak_runtime::node::grpc::client","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_request","","",15,[[],["request",3]]],[11,"vzip","","",15,[[]]],[11,"decode","oak_runtime::node::grpc::invocation","",16,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_request","","",16,[[],["request",3]]],[11,"vzip","","",16,[[]]],[11,"from","oak_runtime::node::grpc::server","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_request","","",17,[[],["request",3]]],[11,"vzip","","",17,[[]]],[11,"decode","oak_runtime::proto::oak::authentication","",19,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",19,[[],[["oakstatus",4],["nodemessage",3],["result",4]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_request","","",19,[[],["request",3]]],[11,"vzip","","",19,[[]]],[11,"decode","","",20,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",20,[[],[["oakstatus",4],["nodemessage",3],["result",4]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_request","","",20,[[],["request",3]]],[11,"vzip","","",20,[[]]],[11,"decode","","",21,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"encode","","",21,[[],[["oakstatus",4],["nodemessage",3],["result",4]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_request","","",21,[[],["request",3]]],[11,"vzip","","",21,[[]]],[11,"from","oak_runtime::runtime","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_request","","",23,[[],["request",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_request","","",33,[[],["request",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"into_request","","",24,[[],["request",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_request","","",25,[[],["request",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_request","","",26,[[],["request",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"into_request","","",27,[[],["request",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_request","","",28,[[],["request",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_request","","",29,[[],["request",3]]],[11,"vzip","","",29,[[]]],[11,"from","oak_runtime::time","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_request","","",37,[[],["request",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_request","","",36,[[],["request",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_request","","",34,[[],["request",3]]],[11,"vzip","","",34,[[]]],[11,"decode","oak_runtime::node::grpc::invocation","",16,[[["nodemessage",3]],[["result",4],["oakstatus",4]]]],[11,"run","oak_runtime::node::grpc::client","",15,[[["runtimeproxy",3],["box",3],["handle",6],["receiver",3]]]],[11,"run","oak_runtime::node::grpc::server","",17,[[["runtimeproxy",3],["box",3],["handle",6],["receiver",3]]]],[11,"dot_id","oak_runtime::runtime","",23,[[],["string",3]]],[11,"dot_id","","",24,[[],["string",3]]],[11,"html_path","","",24,[[],["string",3]]],[11,"graph","","Generate a Graphviz dot graph that shows the current shape…",26,[[],["string",3]]],[11,"html","","Generate an HTML page that describes the internal state of…",26,[[],["string",3]]],[11,"html_for_node","","Generate an HTML page that describes the internal state of…",26,[[],[["option",4],["string",3]]]],[11,"html_for_handle","","Generate an HTML page that describes the channel…",26,[[["handle",6]],[["option",4],["string",3]]]],[11,"drop","","",23,[[]]],[11,"drop","","Dropping an auxiliary server involves notifying it that it…",25,[[]]],[11,"drop","","",26,[[]]],[11,"from","oak_runtime::node","",14,[[["addrparseerror",3]]]],[11,"from","oak_runtime::time","",34,[[["error",3]]]],[11,"from","","",34,[[["error",4]]]],[11,"from","","",34,[[["decodeerror",4]]]],[11,"clone","oak_runtime::auth::oidc_utils","",3,[[],["clientinfo",3]]],[11,"clone","","",4,[[],["tokenerror",3]]],[11,"clone","oak_runtime::metrics","",11,[[],["grpcservermetrics",3]]],[11,"clone","","",12,[[],["runtimemetrics",3]]],[11,"clone","","",13,[[],["metrics",3]]],[11,"clone","oak_runtime::proto::oak::authentication","",19,[[],["authparameters",3]]],[11,"clone","","",20,[[],["identitytokenrequest",3]]],[11,"clone","","",21,[[],["identitytokenresponse",3]]],[11,"clone","oak_runtime::runtime","",23,[[]]],[11,"clone","","",27,[[],["channelhalfdirection",4]]],[11,"clone","oak_runtime","",0,[[],["runtimeproxy",3]]],[11,"clone","oak_runtime::runtime","",33,[[],["nodeprivilege",3]]],[11,"clone","","",24,[[],["nodeid",3]]],[11,"clone","oak_runtime","",1,[[],["runtimeconfiguration",3]]],[11,"clone","","",2,[[],["grpcconfiguration",3]]],[11,"default","oak_runtime::metrics","",13,[[]]],[11,"default","oak_runtime::proto::oak::authentication","",19,[[],["authparameters",3]]],[11,"default","","",20,[[],["identitytokenrequest",3]]],[11,"default","","",21,[[],["identitytokenresponse",3]]],[11,"default","oak_runtime::runtime","",33,[[],["nodeprivilege",3]]],[11,"default","oak_runtime","",1,[[],["runtimeconfiguration",3]]],[11,"default","","",2,[[],["grpcconfiguration",3]]],[11,"cmp","oak_runtime::runtime","",24,[[["nodeid",3]],["ordering",4]]],[11,"eq","oak_runtime::proto::oak::authentication","",19,[[["authparameters",3]]]],[11,"ne","","",19,[[["authparameters",3]]]],[11,"eq","","",20,[[["identitytokenrequest",3]]]],[11,"ne","","",20,[[["identitytokenrequest",3]]]],[11,"eq","","",21,[[["identitytokenresponse",3]]]],[11,"ne","","",21,[[["identitytokenresponse",3]]]],[11,"eq","oak_runtime::runtime","",27,[[["channelhalfdirection",4]]]],[11,"eq","","",24,[[["nodeid",3]]]],[11,"ne","","",24,[[["nodeid",3]]]],[11,"partial_cmp","","",24,[[["nodeid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["nodeid",3]]]],[11,"le","","",24,[[["nodeid",3]]]],[11,"gt","","",24,[[["nodeid",3]]]],[11,"ge","","",24,[[["nodeid",3]]]],[11,"fmt","oak_runtime::auth::oidc_utils","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::message","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::node","",14,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::proto::oak::authentication","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::runtime","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::time","",34,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::auth::oidc_utils","",4,[[["formatter",3]],["result",6]]],[11,"fmt","oak_runtime::node","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","oak_runtime::time","",34,[[["formatter",3]],["result",6]]],[11,"hash","oak_runtime::runtime","",27,[[]]],[11,"hash","","",24,[[]]],[11,"source","oak_runtime::auth::oidc_utils","",4,[[],[["option",4],["error",8]]]],[11,"encode_raw","oak_runtime::proto::oak::authentication","",19,[[]]],[11,"merge_field","","",19,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",19,[[]]],[11,"clear","","",19,[[]]],[11,"encode_raw","","",20,[[]]],[11,"merge_field","","",20,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",20,[[]]],[11,"clear","","",20,[[]]],[11,"encode_raw","","",21,[[]]],[11,"merge_field","","",21,[[["decodecontext",3],["wiretype",4]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",21,[[]]],[11,"clear","","",21,[[]]],[11,"deserialize","oak_runtime::auth::oidc_utils","",38,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]]],"p":[[3,"RuntimeProxy"],[3,"RuntimeConfiguration"],[3,"GrpcConfiguration"],[3,"ClientInfo"],[3,"TokenError"],[8,"Decodable"],[8,"Encodable"],[3,"Receiver"],[3,"Sender"],[3,"Message"],[3,"NodeMessage"],[3,"GrpcServerMetrics"],[3,"RuntimeMetrics"],[3,"Metrics"],[4,"ConfigurationError"],[3,"GrpcClientNode"],[3,"Invocation"],[3,"GrpcServerNode"],[8,"Node"],[3,"AuthParameters"],[3,"IdentityTokenRequest"],[3,"IdentityTokenResponse"],[8,"Authentication"],[3,"ChannelHalf"],[3,"NodeId"],[3,"AuxServer"],[3,"Runtime"],[4,"ChannelHalfDirection"],[4,"NodeReadStatus"],[4,"ReadStatus"],[8,"DotIdentifier"],[8,"HtmlPath"],[8,"DotGraph"],[3,"NodePrivilege"],[4,"RoughtimeError"],[13,"NotEnoughOverlappingIntervals"],[3,"RoughtimeClient"],[3,"RoughtimeServer"],[3,"Claims"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);