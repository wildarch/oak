var searchIndex = JSON.parse('{\
"oak_abi":{"doc":"Type, constant and Wasm host function definitions for the…","i":[[5,"wait_on_channels","oak_abi","Wait for channels to be ready for reading.",null,null],[5,"channel_read","","Read a message from a channel.",null,null],[5,"channel_write","","Write a message to a channel.",null,null],[5,"channel_create","","Create a new unidirectional Channel.",null,null],[5,"channel_close","","Closes the channel identified by `handle`.",null,null],[5,"node_create","","Creates a new Node instance running code identified by a…",null,null],[5,"random_get","","Fill a buffer with random data.",null,null],[0,"grpc","","",null,null],[5,"encap_request","oak_abi::grpc","Encapsulate a protocol buffer message in a GrpcRequest…",null,[[],[["option",4],["grpcrequest",3]]]],[0,"label","oak_abi","Labels represent the kinds of information that is allowed…",null,null],[5,"authorization_bearer_token_hmac_tag","oak_abi::label","Creates a [`Tag`] having as principal the provided…",null,[[],["tag",3]]],[5,"web_assembly_module_tag","","Creates a [`Tag`] having as principal the provided…",null,[[],["tag",3]]],[5,"tls_endpoint_tag","","Creates a [`Tag`] having as principal the provided TLS…",null,[[],["tag",3]]],[0,"proto","oak_abi","",null,null],[0,"google","oak_abi::proto","",null,null],[0,"rpc","oak_abi::proto::google","",null,null],[3,"Status","oak_abi::proto::google::rpc","The `Status` type defines a logical error model that is…",null,null],[12,"code","","The status code, which should be an enum value of…",0,null],[12,"message","","A developer-facing error message, which should be in…",0,null],[12,"details","","A list of messages that carry the error details. There is…",0,null],[4,"Code","","The canonical error codes for Google APIs.",null,null],[13,"Ok","","Not an error; returned on success",1,null],[13,"Cancelled","","The operation was cancelled, typically by the caller.",1,null],[13,"Unknown","","Unknown error. For example, this error may be returned…",1,null],[13,"InvalidArgument","","The client specified an invalid argument. Note that this…",1,null],[13,"DeadlineExceeded","","The deadline expired before the operation could complete.…",1,null],[13,"NotFound","","Some requested entity (e.g., file or directory) was not…",1,null],[13,"AlreadyExists","","The entity that a client attempted to create (e.g., file…",1,null],[13,"PermissionDenied","","The caller does not have permission to execute the…",1,null],[13,"Unauthenticated","","The request does not have valid authentication credentials…",1,null],[13,"ResourceExhausted","","Some resource has been exhausted, perhaps a per-user…",1,null],[13,"FailedPrecondition","","The operation was rejected because the system is not in a…",1,null],[13,"Aborted","","The operation was aborted, typically due to a concurrency…",1,null],[13,"OutOfRange","","The operation was attempted past the valid range. E.g.,…",1,null],[13,"Unimplemented","","The operation is not implemented or is not…",1,null],[13,"Internal","","Internal errors. This means that some invariants expected…",1,null],[13,"Unavailable","","The service is currently unavailable. This is most likely…",1,null],[13,"DataLoss","","Unrecoverable data loss or corruption.",1,null],[11,"is_valid","","Returns `true` if `value` is a variant of `Code`.",1,[[]]],[11,"from_i32","","Converts an `i32` to a `Code`, or `None` if `value` is not…",1,[[],[["code",4],["option",4]]]],[0,"oak","oak_abi::proto","",null,null],[4,"OakStatus","oak_abi::proto::oak","Status values exchanged as i32 values across the Node Wasm…",null,null],[13,"Unspecified","","",2,null],[13,"Ok","","Success.",2,null],[13,"ErrBadHandle","","Invalid handle provided.",2,null],[13,"ErrInvalidArgs","","Arguments invalid.",2,null],[13,"ErrChannelClosed","","Channel has been closed.",2,null],[13,"ErrBufferTooSmall","","Provided buffer was too small for operation (an output…",2,null],[13,"ErrHandleSpaceTooSmall","","Provided handle space was too small for operation (an…",2,null],[13,"ErrOutOfRange","","Argument out of valid range.",2,null],[13,"ErrInternal","","Internal error.",2,null],[13,"ErrTerminated","","Node terminated.",2,null],[13,"ErrChannelEmpty","","Channel has no messages available to read.",2,null],[13,"ErrPermissionDenied","","The node does not have sufficient permissions to perform…",2,null],[4,"ChannelReadStatus","","Single byte values used to indicate the read status of a…",null,null],[13,"NotReady","","No pending messages available on channel.",3,null],[13,"ReadReady","","Pending message available on channel.",3,null],[13,"InvalidChannel","","Channel handle does not identify the read half of a…",3,null],[13,"Orphaned","","Channel has no extant write halves (and is empty).",3,null],[13,"PermissionDenied","","A node trying to access the channel does not have the…",3,null],[0,"application","","",null,null],[3,"ApplicationConfiguration","oak_abi::proto::oak::application","An ApplicationConfiguration represents a unit of…",null,null],[12,"wasm_modules","","Map from Wasm module names to their bytecode representation.",4,null],[12,"initial_node_configuration","","Indication of what configuration the initial Node should…",4,null],[3,"NodeConfiguration","","NodeConfiguration indicates the configuration of a created…",null,null],[12,"name","","Display name of the newly created node instance, for…",5,null],[12,"config_type","","",5,null],[3,"WebAssemblyConfiguration","","WebAssemblyConfiguration describes the configuration of a…",null,null],[12,"wasm_module_name","","The name of one of the entries in the…",6,null],[12,"wasm_entrypoint_name","","The name of an exported WebAssembly function to invoke as…",6,null],[3,"LogConfiguration","","LogConfiguration describes the configuration of a logging…",null,null],[3,"StorageProxyConfiguration","","StorageProxyConfiguration describes the configuration of a…",null,null],[12,"address","","The address of the external storage provider.",7,null],[3,"GrpcServerConfiguration","","GrpcServerConfiguration describes the configuration of a…",null,null],[12,"address","","The endpoint address for the gRPC server to listen on.…",8,null],[3,"GrpcClientConfiguration","","GrpcClientConfiguration describes the configuration of a…",null,null],[12,"uri","","The URI component of a gRPC server endpoint. Must contain…",9,null],[3,"RoughtimeClientConfiguration","","RoughtimeClientConfiguration describes the configuration…",null,null],[12,"servers","","The collection of Roughtime servers to query. A default…",10,null],[12,"min_overlapping_intervals","","Connection parameters; default values will be used if any…",10,null],[12,"timeout_seconds","","",10,null],[12,"server_retries","","",10,null],[12,"max_radius_microseconds","","",10,null],[3,"RoughtimeServer","","Information to identify a particular Roughtime server.…",null,null],[12,"name","","",11,null],[12,"host","","",11,null],[12,"port","","",11,null],[12,"public_key_base64","","",11,null],[3,"ConfigMap","","A serialized list of key-value pairs that are specified as…",null,null],[12,"items","","",12,null],[0,"node_configuration","","Nested message and enum types in `NodeConfiguration`.",null,null],[4,"ConfigType","oak_abi::proto::oak::application::node_configuration","",null,null],[13,"WasmConfig","","",13,null],[13,"LogConfig","","",13,null],[13,"StorageConfig","","",13,null],[13,"GrpcServerConfig","","",13,null],[13,"GrpcClientConfig","","",13,null],[13,"RoughtimeClientConfig","","",13,null],[11,"encode","","",13,[[]]],[11,"merge","","",13,[[["wiretype",4],["decodecontext",3],["option",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",13,[[]]],[0,"label","oak_abi::proto::oak","",null,null],[3,"Label","oak_abi::proto::oak::label","Label represents information flowing through a Node or…",null,null],[12,"confidentiality_tags","","",14,null],[12,"integrity_tags","","",14,null],[3,"Tag","","Tag represents a category of confidentiality or integrity…",null,null],[12,"tag","","",15,null],[3,"GrpcTag","","Policies related to gRPC communication, referring to the…",null,null],[12,"authorization_bearer_token_hmac","","In order for a client to be authorized to fulfill a tag…",16,null],[3,"WebAssemblyModuleTag","","Policies related to modules, referring to the native…",null,null],[12,"web_assembly_module_hash_sha_256","","The attestation for a single WebAssembly module, a SHA256…",17,null],[3,"TlsEndpointTag","","Policies related to HTTPS communication.",null,null],[12,"authority","","The TLS authority (host:port) of the remote endpoint,…",18,null],[0,"tag","","Nested message and enum types in `Tag`.",null,null],[4,"Tag","oak_abi::proto::oak::label::tag","",null,null],[13,"GrpcTag","","",19,null],[13,"WebAssemblyModuleTag","","",19,null],[13,"TlsEndpointTag","","",19,null],[11,"encode","","",19,[[]]],[11,"merge","","",19,[[["decodecontext",3],["option",4],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",19,[[]]],[0,"encap","oak_abi::proto::oak","",null,null],[3,"GrpcRequest","oak_abi::proto::oak::encap","",null,null],[12,"method_name","","",20,null],[12,"req_msg","","The body of the request. Usually a serialized protobuf…",20,null],[12,"last","","",20,null],[3,"GrpcResponse","","",null,null],[12,"rsp_msg","","The body of the response. Usually a serialized protobuf…",21,null],[12,"status","","",21,null],[12,"last","","The last field indicates that this is definitely the final…",21,null],[0,"log","oak_abi::proto::oak","",null,null],[3,"LogMessage","oak_abi::proto::oak::log","This message defines the data that is passed as a log…",null,null],[12,"file","","The source file containing the message.",22,null],[12,"line","","The line containing the message.",22,null],[12,"level","","The verbosity level of the message.",22,null],[12,"message","","The message body.",22,null],[4,"Level","","Logging levels as defined in…",null,null],[13,"UnknownLevel","","",23,null],[13,"Error","","",23,null],[13,"Warn","","",23,null],[13,"Info","","",23,null],[13,"Debugging","","",23,null],[13,"Trace","","",23,null],[11,"level","","Returns the enum value of `level`, or the default if the…",22,[[],["level",4]]],[11,"set_level","","Sets `level` to the provided enum value.",22,[[["level",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `Level`.",23,[[]]],[11,"from_i32","","Converts an `i32` to a `Level`, or `None` if `value` is…",23,[[],[["level",4],["option",4]]]],[0,"roughtime","oak_abi::proto::oak","",null,null],[3,"GetRoughtimeRequest","oak_abi::proto::oak::roughtime","",null,null],[3,"Roughtime","","",null,null],[12,"roughtime_usec","","Time is UTC and is given as microseconds since the UNIX…",24,null],[11,"is_valid","oak_abi::proto::oak","Returns `true` if `value` is a variant of `OakStatus`.",2,[[]]],[11,"from_i32","","Converts an `i32` to a `OakStatus`, or `None` if `value`…",2,[[],[["option",4],["oakstatus",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of…",3,[[]]],[11,"from_i32","","Converts an `i32` to a `ChannelReadStatus`, or `None` if…",3,[[],[["channelreadstatus",4],["option",4]]]],[6,"Handle","oak_abi","Handle used to identify read or write channel halves.",null,null],[6,"NodeMainC","","Expected type for a Node entrypoint that is exposed as a…",null,null],[6,"NodeMain","","Expected Rust type for a Node entrypoint.",null,null],[17,"OAK_LABEL_GRPC_METADATA_KEY","","The key used for encoded Labels in gRPC metadata.",null,null],[17,"SPACE_BYTES_PER_HANDLE","","Number of bytes needed per-handle for channel readiness…",null,null],[17,"INVALID_HANDLE","","Invalid handle value.",null,null],[11,"from","oak_abi::proto::google::rpc","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::application","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::application::node_configuration","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::label","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::label::tag","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::encap","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::log","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","oak_abi::proto::oak::roughtime","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"clone","oak_abi::proto::google::rpc","",0,[[],["status",3]]],[11,"clone","","",1,[[],["code",4]]],[11,"clone","oak_abi::proto::oak","",2,[[],["oakstatus",4]]],[11,"clone","","",3,[[],["channelreadstatus",4]]],[11,"clone","oak_abi::proto::oak::application","",4,[[],["applicationconfiguration",3]]],[11,"clone","","",5,[[],["nodeconfiguration",3]]],[11,"clone","oak_abi::proto::oak::application::node_configuration","",13,[[],["configtype",4]]],[11,"clone","oak_abi::proto::oak::application","",6,[[],["webassemblyconfiguration",3]]],[11,"clone","","",25,[[],["logconfiguration",3]]],[11,"clone","","",7,[[],["storageproxyconfiguration",3]]],[11,"clone","","",8,[[],["grpcserverconfiguration",3]]],[11,"clone","","",9,[[],["grpcclientconfiguration",3]]],[11,"clone","","",10,[[],["roughtimeclientconfiguration",3]]],[11,"clone","","",11,[[],["roughtimeserver",3]]],[11,"clone","","",12,[[],["configmap",3]]],[11,"clone","oak_abi::proto::oak::label","",14,[[],["label",3]]],[11,"clone","","",15,[[],["tag",3]]],[11,"clone","oak_abi::proto::oak::label::tag","",19,[[],["tag",4]]],[11,"clone","oak_abi::proto::oak::label","",16,[[],["grpctag",3]]],[11,"clone","","",17,[[],["webassemblymoduletag",3]]],[11,"clone","","",18,[[],["tlsendpointtag",3]]],[11,"clone","oak_abi::proto::oak::encap","",20,[[],["grpcrequest",3]]],[11,"clone","","",21,[[],["grpcresponse",3]]],[11,"clone","oak_abi::proto::oak::log","",22,[[],["logmessage",3]]],[11,"clone","","",23,[[],["level",4]]],[11,"clone","oak_abi::proto::oak::roughtime","",26,[[],["getroughtimerequest",3]]],[11,"clone","","",24,[[],["roughtime",3]]],[11,"default","oak_abi::proto::google::rpc","",0,[[],["status",3]]],[11,"default","","",1,[[],["code",4]]],[11,"default","oak_abi::proto::oak","",2,[[],["oakstatus",4]]],[11,"default","","",3,[[],["channelreadstatus",4]]],[11,"default","oak_abi::proto::oak::application","",4,[[],["applicationconfiguration",3]]],[11,"default","","",5,[[],["nodeconfiguration",3]]],[11,"default","","",6,[[],["webassemblyconfiguration",3]]],[11,"default","","",25,[[],["logconfiguration",3]]],[11,"default","","",7,[[],["storageproxyconfiguration",3]]],[11,"default","","",8,[[],["grpcserverconfiguration",3]]],[11,"default","","",9,[[],["grpcclientconfiguration",3]]],[11,"default","","",10,[[],["roughtimeclientconfiguration",3]]],[11,"default","","",11,[[],["roughtimeserver",3]]],[11,"default","","",12,[[],["configmap",3]]],[11,"default","oak_abi::proto::oak::label","",14,[[],["label",3]]],[11,"default","","",15,[[],["tag",3]]],[11,"default","","",16,[[],["grpctag",3]]],[11,"default","","",17,[[],["webassemblymoduletag",3]]],[11,"default","","",18,[[],["tlsendpointtag",3]]],[11,"default","oak_abi::proto::oak::encap","",20,[[],["grpcrequest",3]]],[11,"default","","",21,[[],["grpcresponse",3]]],[11,"default","oak_abi::proto::oak::log","",22,[[],["logmessage",3]]],[11,"default","","",23,[[],["level",4]]],[11,"default","oak_abi::proto::oak::roughtime","",26,[[],["getroughtimerequest",3]]],[11,"default","","",24,[[],["roughtime",3]]],[11,"cmp","oak_abi::proto::google::rpc","",1,[[["code",4]],["ordering",4]]],[11,"cmp","oak_abi::proto::oak","",2,[[["oakstatus",4]],["ordering",4]]],[11,"cmp","","",3,[[["channelreadstatus",4]],["ordering",4]]],[11,"cmp","oak_abi::proto::oak::log","",23,[[["level",4]],["ordering",4]]],[11,"eq","oak_abi::proto::google::rpc","",0,[[["status",3]]]],[11,"ne","","",0,[[["status",3]]]],[11,"eq","","",1,[[["code",4]]]],[11,"eq","oak_abi::proto::oak","",2,[[["oakstatus",4]]]],[11,"eq","","",3,[[["channelreadstatus",4]]]],[11,"eq","oak_abi::proto::oak::application","",4,[[["applicationconfiguration",3]]]],[11,"ne","","",4,[[["applicationconfiguration",3]]]],[11,"eq","","",5,[[["nodeconfiguration",3]]]],[11,"ne","","",5,[[["nodeconfiguration",3]]]],[11,"eq","oak_abi::proto::oak::application::node_configuration","",13,[[["configtype",4]]]],[11,"ne","","",13,[[["configtype",4]]]],[11,"eq","oak_abi::proto::oak::application","",6,[[["webassemblyconfiguration",3]]]],[11,"ne","","",6,[[["webassemblyconfiguration",3]]]],[11,"eq","","",25,[[["logconfiguration",3]]]],[11,"eq","","",7,[[["storageproxyconfiguration",3]]]],[11,"ne","","",7,[[["storageproxyconfiguration",3]]]],[11,"eq","","",8,[[["grpcserverconfiguration",3]]]],[11,"ne","","",8,[[["grpcserverconfiguration",3]]]],[11,"eq","","",9,[[["grpcclientconfiguration",3]]]],[11,"ne","","",9,[[["grpcclientconfiguration",3]]]],[11,"eq","","",10,[[["roughtimeclientconfiguration",3]]]],[11,"ne","","",10,[[["roughtimeclientconfiguration",3]]]],[11,"eq","","",11,[[["roughtimeserver",3]]]],[11,"ne","","",11,[[["roughtimeserver",3]]]],[11,"eq","","",12,[[["configmap",3]]]],[11,"ne","","",12,[[["configmap",3]]]],[11,"eq","oak_abi::proto::oak::label","",14,[[["label",3]]]],[11,"ne","","",14,[[["label",3]]]],[11,"eq","","",15,[[["tag",3]]]],[11,"ne","","",15,[[["tag",3]]]],[11,"eq","oak_abi::proto::oak::label::tag","",19,[[["tag",4]]]],[11,"ne","","",19,[[["tag",4]]]],[11,"eq","oak_abi::proto::oak::label","",16,[[["grpctag",3]]]],[11,"ne","","",16,[[["grpctag",3]]]],[11,"eq","","",17,[[["webassemblymoduletag",3]]]],[11,"ne","","",17,[[["webassemblymoduletag",3]]]],[11,"eq","","",18,[[["tlsendpointtag",3]]]],[11,"ne","","",18,[[["tlsendpointtag",3]]]],[11,"eq","oak_abi::proto::oak::encap","",20,[[["grpcrequest",3]]]],[11,"ne","","",20,[[["grpcrequest",3]]]],[11,"eq","","",21,[[["grpcresponse",3]]]],[11,"ne","","",21,[[["grpcresponse",3]]]],[11,"eq","oak_abi::proto::oak::log","",22,[[["logmessage",3]]]],[11,"ne","","",22,[[["logmessage",3]]]],[11,"eq","","",23,[[["level",4]]]],[11,"eq","oak_abi::proto::oak::roughtime","",26,[[["getroughtimerequest",3]]]],[11,"eq","","",24,[[["roughtime",3]]]],[11,"ne","","",24,[[["roughtime",3]]]],[11,"partial_cmp","oak_abi::proto::google::rpc","",1,[[["code",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","oak_abi::proto::oak","",2,[[["oakstatus",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",3,[[["channelreadstatus",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","oak_abi::proto::oak::log","",23,[[["level",4]],[["ordering",4],["option",4]]]],[11,"fmt","oak_abi::proto::google::rpc","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::application","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::application::node_configuration","",13,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::application","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::label","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::label::tag","",19,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::label","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::encap","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::log","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak::roughtime","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","oak_abi::proto::oak","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","oak_abi::proto::google::rpc","",1,[[]]],[11,"hash","oak_abi::proto::oak","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","oak_abi::proto::oak::label","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","oak_abi::proto::oak::label::tag","",19,[[]]],[11,"hash","oak_abi::proto::oak::label","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","oak_abi::proto::oak::log","",23,[[]]],[11,"encode_raw","oak_abi::proto::google::rpc","",0,[[]]],[11,"merge_field","","",0,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",0,[[]]],[11,"clear","","",0,[[]]],[11,"encode_raw","oak_abi::proto::oak::application","",4,[[]]],[11,"merge_field","","",4,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",4,[[]]],[11,"clear","","",4,[[]]],[11,"encode_raw","","",5,[[]]],[11,"merge_field","","",5,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",5,[[]]],[11,"clear","","",5,[[]]],[11,"encode_raw","","",6,[[]]],[11,"merge_field","","",6,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"encode_raw","","",25,[[]]],[11,"merge_field","","",25,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",25,[[]]],[11,"clear","","",25,[[]]],[11,"encode_raw","","",7,[[]]],[11,"merge_field","","",7,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",7,[[]]],[11,"clear","","",7,[[]]],[11,"encode_raw","","",8,[[]]],[11,"merge_field","","",8,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","","",9,[[]]],[11,"merge_field","","",9,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"encode_raw","","",10,[[]]],[11,"merge_field","","",10,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",10,[[]]],[11,"clear","","",10,[[]]],[11,"encode_raw","","",11,[[]]],[11,"merge_field","","",11,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",11,[[]]],[11,"clear","","",11,[[]]],[11,"encode_raw","","",12,[[]]],[11,"merge_field","","",12,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",12,[[]]],[11,"clear","","",12,[[]]],[11,"encode_raw","oak_abi::proto::oak::label","",14,[[]]],[11,"merge_field","","",14,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",14,[[]]],[11,"clear","","",14,[[]]],[11,"encode_raw","","",15,[[]]],[11,"merge_field","","",15,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",15,[[]]],[11,"clear","","",15,[[]]],[11,"encode_raw","","",16,[[]]],[11,"merge_field","","",16,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",16,[[]]],[11,"clear","","",16,[[]]],[11,"encode_raw","","",17,[[]]],[11,"merge_field","","",17,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",17,[[]]],[11,"clear","","",17,[[]]],[11,"encode_raw","","",18,[[]]],[11,"merge_field","","",18,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",18,[[]]],[11,"clear","","",18,[[]]],[11,"encode_raw","oak_abi::proto::oak::encap","",20,[[]]],[11,"merge_field","","",20,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",20,[[]]],[11,"clear","","",20,[[]]],[11,"encode_raw","","",21,[[]]],[11,"merge_field","","",21,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",21,[[]]],[11,"clear","","",21,[[]]],[11,"encode_raw","oak_abi::proto::oak::log","",22,[[]]],[11,"merge_field","","",22,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",22,[[]]],[11,"clear","","",22,[[]]],[11,"encode_raw","oak_abi::proto::oak::roughtime","",26,[[]]],[11,"merge_field","","",26,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",26,[[]]],[11,"clear","","",26,[[]]],[11,"encode_raw","","",24,[[]]],[11,"merge_field","","",24,[[["decodecontext",3],["wiretype",4]],[["decodeerror",3],["result",4]]]],[11,"encoded_len","","",24,[[]]],[11,"clear","","",24,[[]]],[11,"serialize","oak_abi::proto::oak::label","Convert a label to bytes.",14,[[],["vec",3]]],[11,"deserialize","","Build the label from bytes.",14,[[],["option",4]]],[11,"public_untrusted","","Return the least privileged label.",14,[[]]],[11,"flows_to","","Compare two labels according to the lattice structure: L_0…",14,[[]]]],"p":[[3,"Status"],[4,"Code"],[4,"OakStatus"],[4,"ChannelReadStatus"],[3,"ApplicationConfiguration"],[3,"NodeConfiguration"],[3,"WebAssemblyConfiguration"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[4,"ConfigType"],[3,"Label"],[3,"Tag"],[3,"GrpcTag"],[3,"WebAssemblyModuleTag"],[3,"TlsEndpointTag"],[4,"Tag"],[3,"GrpcRequest"],[3,"GrpcResponse"],[3,"LogMessage"],[4,"Level"],[3,"Roughtime"],[3,"LogConfiguration"],[3,"GetRoughtimeRequest"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);