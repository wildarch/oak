var searchIndex={};
searchIndex["runner"] = {"doc":"A utility binary to run tests and orchestrate examples and…","i":[[3,"Example","runner","",null,null],[12,"name","","",0,null],[12,"modules","","",0,null],[12,"clients","","",0,null],[3,"Client","","",null,null],[12,"target","","",1,null],[12,"additional_args","","",1,null],[4,"Target","","",null,null],[13,"Bazel","","",2,null],[12,"bazel_target","runner::Target","",3,null],[13,"Cargo","runner","",2,null],[12,"cargo_manifest","runner::Target","",4,null],[4,"FormatMode","runner","",null,null],[13,"Check","","",5,null],[13,"Fix","","",5,null],[5,"main","","",null,[[],[["box",3],["result",4]]]],[5,"run_examples","","",null,[[["runexamples",3]],["step",4]]],[5,"build_wasm_module","","",null,[[],["step",4]]],[5,"is_mac_os","","",null,[[]]],[5,"bazel_build_flags","","",null,[[],[["vec",3],["string",3]]]],[5,"as_ref","","",null,[[],["vec",3]]],[5,"bazel_build","","",null,[[],["cmd",3]]],[5,"build_server","","",null,[[["buildserver",3]],["step",4]]],[5,"run_tests","","",null,[[],["step",4]]],[5,"format","","",null,[[],["step",4]]],[5,"run_ci","","",null,[[],["step",4]]],[5,"build_example_config","","",null,[[],["step",4]]],[5,"run_example_server","","",null,[[],["cmd",3]]],[5,"run_example","","",null,[[["example",3],["runexamples",3]],["step",4]]],[5,"run_client","","",null,[[["client",3]],["step",4]]],[5,"is_ignored_path","","Return whether to ignore the specified path. This is used…",null,[[["pathbuf",3]]]],[5,"is_ignored_entry","","",null,[[["direntry",3]]]],[5,"source_files","","Return an iterator of all the first-party and non-ignored…",null,[[]]],[5,"workspace_manifest_files","","Return an iterator of all known Cargo Manifest files that…",null,[[]]],[5,"is_bazel_file","","Return whether the provided path refers to a Bazel file…",null,[[["pathbuf",3]]]],[5,"is_markdown_file","","Return whether the provided path refers to a markdown file…",null,[[["pathbuf",3]]]],[5,"is_cargo_toml_file","","Return whether the provided path refers to a `Cargo.toml`…",null,[[["pathbuf",3]]]],[5,"example_toml_files","","",null,[[]]],[5,"is_example_toml_file","","",null,[[["pathbuf",3]]]],[5,"read_file","","",null,[[["pathbuf",3]],["string",3]]],[5,"is_cargo_workspace_file","","Return whether the provided path refers to a…",null,[[["pathbuf",3]]]],[5,"run_buildifier","","",null,[[["formatmode",4]],["step",4]]],[5,"run_prettier","","",null,[[["formatmode",4]],["step",4]]],[5,"run_markdownlint","","",null,[[["formatmode",4]],["step",4]]],[5,"run_embedmd","","",null,[[["formatmode",4]],["step",4]]],[5,"run_liche","","",null,[[],["step",4]]],[5,"run_cargo_fmt","","",null,[[["formatmode",4]],["step",4]]],[5,"run_cargo_test","","",null,[[],["step",4]]],[5,"run_cargo_clippy","","",null,[[],["step",4]]],[5,"run_bazel_build","","",null,[[],["step",4]]],[5,"run_bazel_test","","",null,[[],["step",4]]],[5,"to_string","","",null,[[["pathbuf",3]],["string",3]]],[0,"internal","","",null,null],[3,"Opt","runner::internal","",null,null],[12,"dry_run","","",6,null],[12,"watch","","",6,null],[12,"commands","","",6,null],[12,"logs","","",6,null],[12,"cmd","","",6,null],[3,"RunExamples","","",null,null],[12,"application_variant","","",7,null],[12,"example_name","","",7,null],[12,"build_only","","",7,null],[3,"BuildServer","","",null,null],[12,"variant","","",8,null],[3,"Context","","Encapsulates all the local state relative to a step, and…",null,null],[12,"opt","","",9,null],[12,"prefix","","",9,null],[3,"SingleStatusResult","","",null,null],[12,"value","","",10,null],[12,"logs","","",10,null],[3,"Cmd","","A single command.",null,null],[12,"executable","","",11,null],[12,"args","","",11,null],[3,"Running","","An instance of a running command.",null,null],[12,"command","","",12,null],[12,"process","","",12,null],[4,"Command","","",null,null],[13,"RunExamples","","",13,null],[13,"BuildServer","","",13,null],[13,"Format","","",13,null],[13,"RunTests","","",13,null],[13,"RunCi","","",13,null],[4,"StatusResultValue","","The outcome of an individual step of execution.",null,null],[13,"Ok","","",14,null],[13,"Error","","",14,null],[13,"Skipped","","",14,null],[4,"Step","","An execution step, which may be a single `Cmd`, or a…",null,null],[13,"Single","","",15,null],[12,"name","runner::internal::Step","",16,null],[12,"command","","",16,null],[13,"Multiple","runner::internal","",15,null],[12,"name","runner::internal::Step","",17,null],[12,"steps","","",17,null],[13,"WithBackground","runner::internal","",15,null],[12,"name","runner::internal::Step","",18,null],[12,"background","","",18,null],[12,"foreground","","",18,null],[5,"values_to_string","runner::internal","",null,[[],["string",3]]],[5,"run_step","","Run the provided step, printing out information about the…",null,[[["context",3],["step",4]],[["hashset",3],["statusresultvalue",4]]]],[11,"root","","",9,[[["opt",3]]]],[11,"child","","",9,[[]]],[11,"new","","",11,[[]]],[11,"run","","Run the provided command, printing a status message with…",11,[[["opt",3]],["running",3]]],[11,"kill","","Forces the running command to stop. Equivalent to sending…",12,[[]]],[11,"wait","","Waits for the running command to spontaneously terminate.",12,[[["opt",3]],["singlestatusresult",3]]],[11,"from","runner","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","runner::internal","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"clone","","",6,[[],["opt",3]]],[11,"clone","","",13,[[],["command",4]]],[11,"clone","","",7,[[],["runexamples",3]]],[11,"clone","","",8,[[],["buildserver",3]]],[11,"clone","","",14,[[],["statusresultvalue",4]]],[11,"clone","","",11,[[],["cmd",3]]],[11,"eq","","",14,[[["statusresultvalue",4]]]],[11,"fmt","runner","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","runner::internal","",14,[[["formatter",3]],["result",6]]],[11,"hash","","",14,[[]]],[11,"clap","","",6,[[],["app",3]]],[11,"from_clap","","",6,[[["argmatches",3]]]],[11,"clap","","",13,[[],["app",3]]],[11,"from_clap","","",13,[[["argmatches",3]]]],[11,"clap","","",7,[[],["app",3]]],[11,"from_clap","","",7,[[["argmatches",3]]]],[11,"clap","","",8,[[],["app",3]]],[11,"from_clap","","",8,[[["argmatches",3]]]],[11,"augment_clap","","",6,[[["app",3]],["app",3]]],[11,"is_subcommand","","",6,[[]]],[11,"augment_clap","","",13,[[["app",3]],["app",3]]],[11,"from_subcommand","","",13,[[],["option",4]]],[11,"is_subcommand","","",13,[[]]],[11,"augment_clap","","",7,[[["app",3]],["app",3]]],[11,"is_subcommand","","",7,[[]]],[11,"augment_clap","","",8,[[["app",3]],["app",3]]],[11,"is_subcommand","","",8,[[]]],[11,"deserialize","runner","",0,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]]],"p":[[3,"Example"],[3,"Client"],[4,"Target"],[13,"Bazel"],[13,"Cargo"],[4,"FormatMode"],[3,"Opt"],[3,"RunExamples"],[3,"BuildServer"],[3,"Context"],[3,"SingleStatusResult"],[3,"Cmd"],[3,"Running"],[4,"Command"],[4,"StatusResultValue"],[4,"Step"],[13,"Single"],[13,"Multiple"],[13,"WithBackground"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);